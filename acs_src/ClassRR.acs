script "LeonardTauntCooldown" (void) //706
{
    while (CheckInventory("LeonardTauntCooldown") > 0)
    {
        Delay(35);
        TakeInventory("LeonardTauntCooldown", 1);
    }
}

Script "DynamiteHold" (void)
{
	int buttonPress = GetPlayerInput (-1, INPUT_BUTTONS);
	if (buttonPress & BT_Attack)
	{
		SetResultValue (1);
	}
	else
	{
		SetResultValue (0);
	}
}

Script "BubbaGiver" (int type) // Decorate isn't working, try something else
{
	Switch(type)
	{
		Case 0:
			SetActivator(0, AAPTR_MASTER);
			GiveInventory("BubbaDropper", 1);
			break;
		Case 1:
			SetActivator(0, AAPTR_MASTER);
			GiveInventory("BubbaElvisDropper", 1);
			break;
	}
}

Script "LeonardLoop" (void)
{
	int drinkdecay, fooddecay, foodreduction, alcoholreduction;
	int speedmod;
	while(CheckInventory("RRClass"))
	{
		if(!GetCvar("samsara_cl_alcoholgut"))
		{
			if(!CheckWeapon("RedneckMotorcycle"))
			{
				SetActorProperty(0, APROP_Speed, 1.0);
			}
			TakeInventory("RRDrunkToken", 1);
		}
		else // no escaping the consequences of your actions, so these will just freeze
		{
			if(CheckInventory("RRDrunkAmount") >= 50)
			{
				if(CheckInventory("RRDrunkAmount") >= 70)
				{
					if(!CheckWeapon("RedneckMotorcycle"))
					{
						SetActorProperty(0, APROP_Speed, -1.0);
					}						
					GiveInventory("RRDrunkToken", 1);
				}
				else
				{
					if(!CheckWeapon("RedneckMotorcycle"))
					{
						SetActorProperty(0, APROP_Speed, 1.0);
					}
					TakeInventory("RRDrunkToken", 1);
				}
				alcoholreduction = 1;
			}
			else
			{
				if(!CheckWeapon("RedneckMotorcycle"))
				{
					SetActorProperty(0, APROP_Speed, 1.0);
				}
				TakeInventory("RRDrunkToken", 1);
				alcoholreduction = 0;
			}

			if(CheckInventory("RRDrunkAmount") == 100)
			{
				if(!CheckWeapon("RedneckMotorcycle"))
				{
					SetActorProperty(0, APROP_Speed, -1.0);
				}
				Playsound(0, "Leonard/Vomit", CHAN_VOICE, 1.0, false);
				TakeInventory("RRDrunkAmount", 10);
			}
			
		
			if(CheckInventory("RRFoodAmount") >= 40)
			{
				if(CheckInventory("RRFoodAmount") >= 50)
				{
					int fartchance = random(0,50000);
					if(fartchance < CheckInventory("RRFoodAmount"))
					{
						Playsound(0, "Leonard/Fart", CHAN_VOICE, 1.0, false);
						ThrustThing(GetActorAngle(0) >> 8, 4, 0, 0);
						SpawnProjectile(0,"RRFartAlert",0,0,0,0,0);
					}
				}
				foodreduction = 1;
			}
			else
				foodreduction = 0;
			
			SetActorProperty(0,APROP_DamageFactor,1.0-(foodreduction*0.25)-(alcoholreduction*0.25));
			
			drinkdecay++;
			fooddecay++;
			
			if(drinkdecay >= 35 && CheckInventory("RRDrunkAmount") >= 70) { drinkdecay = 0; TakeInventory("RRDrunkAmount", 1); }
			else if(drinkdecay >= 840) { drinkdecay = 0; TakeInventory("RRDrunkAmount", 1); }
			
			if(fooddecay >= 4200) { fooddecay = 0; TakeInventory("RRFoodAmount", 5); }
		}
		
		Delay(1);
	}
}

Script "LeonardMotorCycle" (int pve)
{
	bool init;
	int angle;
	int soundbox;
	int speedcounter;
	int health = GetActorProperty(0, APROP_Health); //Health when mounting the bike
	int oldpresscounter;
	int aiming;
	int adjustX = 0, adjustY;
	
	until(GetActorProperty(0, APROP_Health) < 1 || !PlayerInGame(0) || ClassifyActor(0) == 64)
	{
		SetPlayerProperty(0,1,PROP_TOTALLYFROZEN);
		int forwardmove = GetPlayerInput(-1, INPUT_FORWARDMOVE);
		int buttonPress = GetPlayerInput (-1, INPUT_BUTTONS);
		int yaw = GetPlayerInput(-1, INPUT_YAW) * -1;
		int pitch = GetPlayerInput(-1, INPUT_PITCH) * -1;
		int sidemove = GetPlayerInput(-1, INPUT_SIDEMOVE);
		SetInventory("LeonardMotorcycleFiring",GetPlayerInput(-1,INPUT_BUTTONS) & BT_ATTACK);
		//OH boy
		aiming = GetUserCvar(PlayerNumber(),"samsara_cl_rr_bikeaim") ? GetPlayerInput(-1,INPUT_BUTTONS) & BT_ALTATTACK : 1;
		if(aiming && (CheckInventory("RedneckMotorcycle")))
		{
			aiming = true;
			SetFont("RRBIWUSS");
			SetHudSize(640,480,1);
			HudMessage(s:"A"; HUDMSG_PLAIN|HUDMSG_NOTWITHFULLMAP|HUDMSG_LAYER_UNDERHUD, 68, CR_UNTRANSLATED, 320.0 + (adjustX << 16), 240.0 + (adjustY << 16),0);
			adjustX += yaw/128;
			if(yaw > 32 && adjustX > 320) adjustX = 320;
			if(yaw < -32 && adjustX < -320) adjustX = -320;
			yaw = 0;
			
			adjustY += pitch/96;
			if(pitch > 32 && adjustY > 240) adjustY = 240;
			if(pitch < -32 && adjustY < -240) adjustY = -240;
			
			SetInventory("LeonardMotorcycleBikeAimX",adjustX+320);
			SetInventory("LeonardMotorcycleBikeAimY",adjustY+240);
		}
		else
		{
			HudMessage(s:""; HUDMSG_PLAIN|HUDMSG_NOTWITHFULLMAP|HUDMSG_LAYER_UNDERHUD, 68, CR_UNTRANSLATED, 0.0, 0.0, 0.5);
			SetInventory("LeonardMotorcycleBikeAimX",320);
			SetInventory("LeonardMotorcycleBikeAimY",240);
			adjustX = 0;
			adjustY = 0;
		}
		
		if(CheckInventory("RRDrunkToken")) { forwardmove *= -1; }
		
		if(yaw > 32 || buttonPress & BT_Right || sidemove > 0)
		{
			if(!CheckInventory("RRDrunkToken"))
				GiveInventory("BikeAngle", 1);
				
			else
				TakeInventory("BikeAngle", 1);
		}
		else if(yaw < -32 || buttonPress & BT_Left || sidemove < 0)
		{
			if(!CheckInventory("RRDrunkToken"))
				TakeInventory("BikeAngle", 1);
				
			else
				GiveInventory("BikeAngle", 1);	
		}
		else
		{
			TakeInventory("BikeAngle", 5);
			GiveInventory("BikeAngle", 3);
		}
			
		if(forwardmove == 0)
		{
			if(speedcounter > 0)
				speedcounter -= 2;
					
			soundbox = ACS_NamedExecuteWithResult("RRMotorcycleSoundbox", 1, 0, 0, 0);
				
			if(speedcounter > 5)
				soundbox = ACS_NamedExecuteWithResult("RRMotorcycleSoundbox", 3, 0, 0, 0);
					
			else
				soundbox = ACS_NamedExecuteWithResult("RRMotorcycleSoundbox", 5, 0, 0, 0);
		}
		else if(forwardmove > 0)
		{
			if(CheckInventory("RRDrunkToken")) { forwardmove *= -1; }
		
			if(speedcounter == 0)
			{
				soundbox = ACS_NamedExecuteWithResult("RRMotorcycleSoundbox", 4, 0, 0, 0);
				PlaySound(0, "RRBike/Accelerate", CHAN_6);
			}
			else
			{
				soundbox = ACS_NamedExecuteWithResult("RRMotorcycleSoundbox", 2, 0, 0, 0);
			}
					
			speedcounter++;
			if(speedcounter > 40)
				speedcounter = 40;
					
			angle += ((CheckInventory("BikeAngle") - 3) * speedcounter * 7) * -1; 
			SetActorAngle(0, angle);
		
			//SetActorProperty(0, APROP_Speed, 0 + ((0.0275 * speedcounter) * sign(forwardmove)));
			SetInventory("LeonardMotorcycleBikeVelocity",speedcounter);
			GiveInventory("LeonardMotorcycleVelocityForward",1);
					
			soundbox = ACS_NamedExecuteWithResult("RRMotorcycleSoundbox", 5, 0, 0, 0);
		}
		else if(forwardmove < 0)
		{
			if(CheckInventory("RRDrunkToken")) { forwardmove *= -1; }
		
			speedcounter++;
			if(speedcounter > 40)
				speedcounter = 40;
					
			angle += ((CheckInventory("BikeAngle") - 3) * speedcounter * 7); 
			SetActorAngle(0, angle);
					
			//SetActorProperty(0, APROP_Speed, 0 + (((0.0125 * speedcounter) / 8) * -sign(forwardmove)));
			SetInventory("LeonardMotorcycleBikeVelocity",speedcounter);
			GiveInventory("LeonardMotorcycleVelocityReverse",1);
					
			soundbox = ACS_NamedExecuteWithResult("RRMotorcycleSoundbox", 5, 0, 0, 0);
			soundbox = ACS_NamedExecuteWithResult("RRMotorcycleSoundbox", 1, 0, 0, 0);
		}
		else
		{
			if(speedcounter > 0)
				speedcounter -= 2;
					
			soundbox = ACS_NamedExecuteWithResult("RRMotorcycleSoundbox", 1, 0, 0, 0);
				
			if(speedcounter > 5)
				soundbox = ACS_NamedExecuteWithResult("RRMotorcycleSoundbox", 3, 0, 0, 0);
					
			else
				soundbox = ACS_NamedExecuteWithResult("RRMotorcycleSoundbox", 5, 0, 0, 0);
		}
		
		if(init == false)
		{
			TakeInventory("BikeAngle", 5);
			GiveInventory("BikeAngle", 3);
			angle = GetActorAngle(0);
			init = true;
			PlaySound(0, "RRBike/Start", CHAN_BODY);
			SetInventory("LeonardMotorcycleBikeAimX",0);
			SetInventory("LeonardMotorcycleBikeAimY",0);
		}
		else
		{
			SetActorAngle(0, angle);
		}
		
		SetActorPitch(0, -(speedcounter * 25));
		
		if(CheckInventory("RRDrunkToken")) { forwardmove *= -1; }
		if(speedcounter && forwardmove > 0)
		{
			NoiseAlert(0, 0);

			if (CheckInventory("SamsaraHasSpread"))
			{
				if (pve) { LineAttack(0, Random(GetActorAngle(0) - 0.05, GetActorAngle(0) + 0.05), Random(GetActorPitch(0) - 0.15, GetActorPitch(0) + 0.15), Random((speedcounter * 0.9) >> 16, (speedcounter * 1.25) >> 16) * 3, "RRBikePuffCoop", "LeonardDamage2", 32.0, FHF_NORANDOMPUFFZ|FHF_NOIMPACTDECAL); }
				else { LineAttack(0, Random(GetActorAngle(0) - 0.05, GetActorAngle(0) + 0.05), Random(GetActorPitch(0) - 0.15, GetActorPitch(0) + 0.15), Random((speedcounter * 0.9) >> 16, (speedcounter * 1.25) >> 16) * 3, "RRBikePuff", "LeonardDamage2", 32.0, FHF_NORANDOMPUFFZ|FHF_NOIMPACTDECAL); }
			} else {
				if (pve) { LineAttack(0, Random(GetActorAngle(0) - 0.05, GetActorAngle(0) + 0.05), Random(GetActorPitch(0) - 0.15, GetActorPitch(0) + 0.15), Random((speedcounter * 0.9) >> 16, (speedcounter * 1.25) >> 16), "RRBikePuffCoop", "LeonardDamage2", 32.0, FHF_NORANDOMPUFFZ|FHF_NOIMPACTDECAL); }
				else { LineAttack(0, Random(GetActorAngle(0) - 0.05, GetActorAngle(0) + 0.05), Random(GetActorPitch(0) - 0.15, GetActorPitch(0) + 0.15), Random((speedcounter * 0.9) >> 16, (speedcounter * 1.25) >> 16), "RRBikePuff", "LeonardDamage2", 32.0, FHF_NORANDOMPUFFZ|FHF_NOIMPACTDECAL); }
			}
		}
		
		Delay(1);
			
		if(buttonPress & BT_Use)
		{
			if(oldpresscounter >= 10)
			{
				soundbox = ACS_NamedExecuteWithResult("RRMotorcycleSoundbox", 4, 0, 0, 0);
				soundbox = ACS_NamedExecuteWithResult("RRMotorcycleSoundbox", 5, 0, 0, 0);
				oldpresscounter = 0;
				speedcounter = 0;
				UnMorphActor(0, true);
				SetPlayerProperty(0,0,PROP_TOTALLYFROZEN);
				SetActorProperty(0, APROP_Health, health);
				SetActorProperty(0, APROP_Speed, 1.0);
				TakeInventory("RedneckMotorcycle", 1);
				TakeInventory("RRHasBike", 1);
				SetInventory("LeonardMotorcycleBikeAimX",320);
				SetInventory("LeonardMotorcycleBikeAimY",240);
				HudMessage(s:""; HUDMSG_PLAIN|HUDMSG_NOTWITHFULLMAP|HUDMSG_LAYER_UNDERHUD, 68, CR_UNTRANSLATED, 0.0, 0.0, 0.5);
				SpawnForced("LeonardMotorcycle", GetActorX(0) + (48 * cos(GetActorAngle(0))), GetActorY(0) + (48 * sin(GetActorAngle(0))), GetActorZ(0), 0, GetActorAngle(0) >> 8);
				terminate;
			}
			else
			{
				oldpresscounter++;
			}
		}
		else
		{
			oldpresscounter = 0;
		}
	}
	
	soundbox = ACS_NamedExecuteWithResult("RRMotorcycleSoundbox", 4, 0, 0, 0);
	soundbox = ACS_NamedExecuteWithResult("RRMotorcycleSoundbox", 5, 0, 0, 0);
	oldpresscounter = 0;
	init = false;
	speedcounter = 0;
	TakeInventory("RedneckMotorcycle", 1);
	TakeInventory("RRHasBike", 1);
}

script "RRMotorcycleHealthCounter" (void)
{
    int angle = GetActorAngle(0);
    SetActivator(0, AAPTR_TARGET);

    int oldtid = ActivatorTID();
    int usertid = UniqueTID();
    int dummytid = UniqueTID();

    SpawnSpotForced("TranslationDummy", 0, dummytid, 0);
    Thing_SetTranslation(dummytid, -1);

    int health = GetActorProperty(0, APROP_Health);
    int armorAmount = CheckInventory("BasicArmor");
    str armorType = GetArmorInfo(ARMORINFO_CLASSNAME);

    //Delay(1);

    GiveInventory("RedneckMotorCycle", 1);

    if (StrLen(armorType) > 0 && armorAmount > 0)
    {
        GiveInventory(armorType, 1);
        AdjustArmorDisplays();

        if (CheckInventory("BasicArmor") < armorAmount) { GiveInventory("InfiniteArmorBonus", armorAmount - CheckInventory("BasicArmor")); }
        else if (CheckInventory("BasicArmor") > armorAmount) { SetInventory("BasicArmor", armorAmount); }
    }

    Thing_ChangeTID(0, usertid);
    SetActivator(dummytid, AAPTR_DEFAULT);
    Thing_SetTranslation(usertid, -1);
    SetActivator(usertid, AAPTR_DEFAULT);
    Thing_ChangeTID(usertid, oldtid);

    SetWeapon("RedneckMotorcycle");
    SetActorAngle(0, angle);
    SetActorProperty(0, APROP_Health, health);
    ACS_NamedExecuteAlways("LeonardMotorCycle", 0, isSinglePlayer() || isCoop(), 0, 0);
}

// all of this to ensure everything works online
 
Script "RRDismountReal" (void)
{
	int buttonPress = GetPlayerInput (-1, INPUT_BUTTONS);
	int oldpresscounter;
	int speedmod;
	if(buttonPress & BT_Use)
	{
		if(oldpresscounter >= 10)
		{
			int health = GetActorProperty(0, APROP_Health);
			UnMorphActor(0, true);
			SetActorProperty(0, APROP_Health, health);
			SetActorProperty(0, APROP_Speed, 1.0);
			TakeInventory("RedneckMotorcycle", 1);
			TakeInventory("RRHasBike", 1);
			SpawnForced("LeonardMotorcycle", GetActorX(0) + (48 * cos(GetActorAngle(0))), GetActorY(0) + (48 * sin(GetActorAngle(0))), GetActorZ(0), 0, GetActorAngle(0) >> 8);
			terminate;
		}
		else
		{
			oldpresscounter++;
		}
	}
	else
	{
		oldpresscounter = 0;
	}
	
	Delay(1);
	restart;
}

//0 = none
//1 = loop idle
//2 = loop accelerate
//3 = loop skid
//4 = stop CHAN_BODY
//5 = stop CHAN_5

Script "RRMotorcycleSoundbox" (int sound) clientside
{
	switch(sound)
	{
		case 0:
			SetResultValue(0);
			break;
		case 1:
			PlaySound(0, "RRBike/Idle", CHAN_BODY, 1.0, true);
			SetResultValue(1);
			break;
		case 2:
			PlaySound(0, "RRBike/Loop", CHAN_BODY, 1.0, true);
			SetResultValue(1);
			break;
		case 3:
			PlaySound(0, "RRBike/Skid", CHAN_5, 1.0, true);	
			SetResultValue(1);
			break;
		case 4:
			StopSound(0, CHAN_BODY);
			SetResultValue(1);
			break;
		case 5:
			StopSound(0, CHAN_5);
			SetResultValue(1);
			break;
	}
}

Script "RRBubbaLevelEnd" (void)
{
	SetActivatorToTarget(0);
	GiveInventory("BubbaFreezer",1);
	GiveInventory("BubbaGivesYouMotorcycle",1);
	SetPlayerProperty(0,1,PROP_TOTALLYFROZEN);
	FadeTo(0,0,0,1.0,1.0);
	Delay(60);
	SetPlayerProperty(0,0,PROP_TOTALLYFROZEN);
	Exit_Normal(0);
}

Script "RRTeatGunRecoil" (int weapon) clientside
{
	int a;
	switch(weapon)
	{
		case 0:
			for(a = 1; a < 4; a++) { SetActorAngle(0, GetActorAngle(0) - 128*a); Delay(1); }
			break;
		case 1:
			for(a = 1; a < 4; a++) { SetActorAngle(0, GetActorAngle(0) + 128*a); Delay(1); }
			break;
	}
}

Script "RRBanjoConcert" (void)
{
	int newtid = UniqueTid();
	int angle = GetActorAngle(0);
	int cupx = GetActorX(0) + (-20 * cos(angle)) - (10 * sin(angle));
	int cupy = GetActorY(0) + (-20 * sin(angle)) + (10 * cos(angle));
	int cootx = GetActorX(0) + (-20 * cos(angle)) - (-16 * sin(angle));
	int cooty = GetActorY(0) + (-20 * sin(angle)) + (-16 * cos(angle));
	int billyx = GetActorX(0) + (20 * cos(angle)) - (-16 * sin(angle));
	int billyy = GetActorY(0) + (20 * sin(angle)) + (-16 * cos(angle));
	int signx = GetActorX(0) + (18 * cos(angle)) - (16 * sin(angle));
	int signy = GetActorY(0) + (18 * sin(angle)) + (16 * cos(angle));
	if(Spawn("RRBanjoConcertCup",cupx,cupy,GetActorZ(0),newtid))
	{
		if(!Spawn("RRBanjoCoot",cootx,cooty,GetActorZ(0),newtid))
		{
			Thing_Remove(newtid);
		}
		else
		{
			if(!Spawn("RRBanjoBillyRayJeeter",billyx,billyy,GetActorZ(0),newtid))
			{
				Thing_Remove(newtid);
			}
			else
			{
				if(!Spawn("RRBanjoSign",signx,signy,GetActorZ(0),newtid))
				{
					Thing_Remove(newtid);
				}
				else
				{
					SetActorAngle(newtid,angle);
					Thing_ChangeTid(newtid, 0);
				}
			}
		}
	}
}

Script "LeonardMotorcycleDecorate" (int type)
{
	int adjustment = 0;
	int adjustmentBase = 0;
	int adjustmentEnd = 0;
	int fov = GetUserCvar(PlayerNumber(),"fov");
	switch(type)
	{
		case 0: SetResultValue(CheckInventory("LeonardMotorcycleBikeVelocity")); break;
		case 1:
			
			adjustmentBase = FixedMul(1.45,(fov / 90));
			adjustmentEnd = FixedMul(0.3,(fov / 90));
			adjustment = abs(FixedMul((((CheckInventory("LeonardMotorcycleBikeAimX") - 320) * 1.0) / 320),adjustmentEnd));
			SetResultValue(-(CheckInventory("LeonardMotorcycleBikeAimX") - 320) * (adjustmentBase - adjustment)>>16);
			break;
		case 2:
			adjustmentBase = FixedMul(1.4,(fov / 90));
			adjustmentEnd = FixedMul(0.25,(fov / 90));
			adjustment = abs(FixedMul((((CheckInventory("LeonardMotorcycleBikeAimY") - 240) * 1.0) / 320),adjustmentEnd));
			SetResultValue(-(CheckInventory("LeonardMotorcycleBikeAimY") - 240) * (adjustmentBase - adjustment)>>16);
			break;
	}
}
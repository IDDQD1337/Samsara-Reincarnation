//======================================================================================================================
//													Compile this
//======================================================================================================================

#library "kinsara"
#include "zcommon.acs"
#include "commonFuncs.acs"

// A handy method of detecting what Source Port you're using and using appropriate
// scripts for it. Thanks to TheZombieKiller!
// [tv50] GetTimeProperty is a new function in Zandronum that is treated as a dummy
// [tv50] in ZDoom, returning 0 there (as opposed to 1970 in Zandronum with the
// [tv50] parameters chosen). Compared to previous methods, no side effects have
// [tv50] come from this, so this should be used for checking the current source port.

script "IsThisZandro" OPEN
{
	if (GetTimeProperty(0, 5, true) == 0) // TM_YEAR = 5
	{
        //Log(s:"Zandronum check unsuccessful, assuming ZDoom.");
        SetCVar("samsara_runninginzandro",0);
        SetCVar("samsara_runninginzdoom",1);
    } else {
        //Log(s:"Zandronum check successful.");
        SetCVar("samsara_runninginzandro",1);
        SetCVar("samsara_runninginzdoom",0);
    }
}

Script "CanUZScript" OPEN
{
	if(SpawnForced("SamsaraCanUZScript",0,0,0,0,0))
		SetCVAR("samsara_zscriptready",1);
	else
		SetCVAR("samsara_zscriptready",0);
}

Script "ReMixerLoaded" OPEN
{
	if(SpawnForced("SamsaraMixerLoadedToken",0,0,0,0,0))
		SetCVAR("samsara_mixerloaded",1);
	else
		SetCVAR("samsara_mixerloaded",0);
}

// If running in ZDoom, mirror Zandro options to the ZDoom cvars so I don't have
// to define them twice in the menu.
script "ZDoomOptionMirror" ENTER
{
	If (GetCVar("samsara_runninginzdoom") == 1)
	{
		SetCVar("samsara_zd_expparticles",GetCVar("samsara_cl_expparticles"));
		SetCVar("samsara_zd_pickupmode",GetCVar("samsara_cl_pickupmode"));
		SetCVar("samsara_zd_noadditivepickups",GetCVar("samsara_cl_noadditivepickups"));
		SetCVar("samsara_zd_bloodyhell",GetCVar("samsara_cl_bloodyhell"));
		SetCVar("samsara_zd_bloodypersistent",GetCVar("samsara_cl_bloodypersistent"));
		delay(1);
		restart;
	}
}

// Fancy per-class secret notifications
script "SecretNotifier" ENTER
{
	int stotal;
	int sfound;
	int sfound2;
	
	stotal = GetLevelInfo(LEVELINFO_TOTAL_SECRETS); // Dunno if secret number can increase, though.
	sfound2 = sfound;
	sfound = GetLevelInfo(LEVELINFO_FOUND_SECRETS);
	// Found a secret.
	if (sfound > sfound2)
	{
		if (CheckInventory("DoomguyClass"))
		{
            if (CheckInventory("DoomClassMode") == 1)
            {
                LocalAmbientSound("doom64guy/secret", 127);
                Log(l:"SECRETFOUND_DOOM64");
            } else {
                LocalAmbientSound("secretfound/doom", 127);
                Log(l:"SECRETFOUND_DOOM");
            }
		} else if (CheckInventory("WolfenClass"))
		{
			if(CheckInventory("WolfenClassMode") == 2)
			{
				LocalAmbientSound("Totenkopf/Bonus", 127);
				Log(l:"SECRETFOUND_TOTENKOPF");

				GiveInventory("TotenkopfSecretCounter", 1);
			}
			else
			{
				LocalAmbientSound("secretfound/wolf", 127);
				Log(l:"SECRETFOUND_WOLF");
			}
		} else if (CheckInventory("ChexClass"))
		{
			LocalAmbientSound("secretfound/chex", 127);
			Log(l:"SECRETFOUND_CHEX");

		} else if (CheckInventory("DukeClass"))
		{
			LocalAmbientSound("secretfound/duke", 127);
			SetHudSize(400, 300, 0);
				Hudmessage(l:"SECRETFOUND_DUKE";
				HUDMSG_PLAIN,1,CR_LIGHTBLUE,200.4,9.1,2.0);
			//Log(l:"SECRETFOUND_DUKE");
			delay(10);
			if (!CheckInventory("DukeBallgag"))
            {
                LocalAmbientSound("duke/secret",127);
                GiveInventory("DukeTauntCooldown",5);
                ACS_NamedExecuteAlways("DukeTauntCooldown",0,0);
            }

		} else if (CheckInventory("MarathonClass"))
		{
			LocalAmbientSound("secretfound/marathon", 127);
			Log(l:"SECRETFOUND_MARATHON");

		} else if (CheckInventory("HexenClass"))
		{
			if (sfound == stotal)
			{
			LocalAmbientSound("secretfound/PuzzleSuccess", 127);
			Print(s:"\cjYou have completed the puzzle of the secrets in this level.");
			} else {
			LocalAmbientSound("secretfound/SwitchOtherLevel", 127);
			Print(s:"\cjYou have found ",i:sfound,s:" of the ",i:stotal,s:" secrets in this level.");
			}
		} else if (CheckInventory("CorvusClass"))
		{
			LocalAmbientSound("secretfound/heretic", 127);
			Log(l:"SECRETFOUND_RAVEN");

		} else if (CheckInventory("QuakeClass"))
		{
			LocalAmbientSound("secretfound/quake", 127);
			Print(l:"SECRETFOUND_QUAKE");
			
		} else if (CheckInventory("CalebClass"))
		{
			LocalAmbientSound("Caleb/Secret", 127);
			Print(l:"SECRETFOUND_DEFAULT");
			if (!CheckInventory("CalebBallgag"))
            {
                LocalAmbientSound("Blood/Secret",127);
                GiveInventory("CalebTauntCooldown",5);
                ACS_NamedExecuteAlways("CalebTauntCooldown",0,0);
            }
			
		} else if (CheckInventory("SWClass"))
		{
			LocalAmbientSound("LoWang/Secret", 127);
			Print(l:"SECRETFOUND_DEFAULT");
			if (!CheckInventory("LoWangBallgag"))
            {
                LocalAmbientSound("SW/Secret",127);
                GiveInventory("LoWangTauntCooldown",5);
                ACS_NamedExecuteAlways("LoWangTauntCooldown",0,0);
            }

		} else if (CheckInventory("RRClass"))
		{
			LocalAmbientSound("Leonard/Secret", 127);
			Print(l:"SECRETFOUND_DEFAULT");
			if (!CheckInventory("LeonardBallgag"))
            {
                LocalAmbientSound("RR/Secret",127);
                GiveInventory("LeonardTauntCooldown",5);
                ACS_NamedExecuteAlways("LoWangTauntCooldown",0,0);
            }

		} else if (CheckInventory("EradClass"))
		{
			LocalAmbientSound("Eradicator/Secret", 127);
			Log(l:"SECRETFOUND_DEFAULT");
			if (!CheckInventory("EleenaBallgag"))
            {
                LocalAmbientSound("Eleena/Secret",127);
                GiveInventory("EleenaTauntCooldown",5);
                ACS_NamedExecuteAlways("EleenaTauntCooldown",0,0);
            }
			
		} else if (CheckInventory("RMRClass"))
		{
			LocalAmbientSound("RMR/Secret", 127);
			Log(l:"SECRETFOUND_DEFAULT");			
			
		} else if (CheckInventory("JonClass"))
		{
			LocalAmbientSound("Jon/KTaunt5", 127);
			Log(l:"SECRETFOUND_DEFAULT");

		} else if (CheckInventory("WitchavenClass"))
		{
			LocalAmbientSound("Grondoval/Secret", 127);
			Log(l:"SECRETFOUND_DEFAULT");

		} else if (CheckInventory("CMClass"))
		{
			LocalAmbientSound("CYBERM_SECRET1", 127);
			Log(l:"SECRETFOUND_DEFAULT");
			
		} else if (CheckInventory("DisruptorClass"))
		{
			LocalAmbientSound("Disruptor/Secret", 127);
			Log(l:"SECRETFOUND_DEFAULT");
			
		} else if (CheckInventory("StrifeClass"))
		{
			LocalAmbientSound("Strife/Secret", 127);
			Log(l:"SECRETFOUND_DEFAULT");
			
		} else if (CheckInventory("C7Class"))
		{
			LocalAmbientSound("C7/Secret", 127);
			Log(l:"SECRETFOUND_DEFAULT");

		} else if (CheckInventory("BlakeClass"))
		{
			LocalAmbientSound("Blake/Secret", 127);
			Log(l:"SECRETFOUND_DEFAULT");

		} else if (CheckInventory("RottClass"))
		{
			LocalAmbientSound("Freely/Secret", 127);
			Log(l:"SECRETFOUND_DEFAULT");

		} else if (CheckInventory("KatarnClass"))
		{
			LocalAmbientSound("Kyle/Secret", 127);
			Log(l:"SECRETFOUND_DEFAULT");
		} else if (CheckInventory("BittermanClass"))
		{
			LocalAmbientSound("Q2Misc/Secret", 127);
			Print(l:"SECRETFOUND_QUAKE2");
		} else if (CheckInventory("Hexen2Class"))
		{
			LocalAmbientSound("Hexen2/Secret", 127);
			Log(l:"SECRETFOUND_DEFAULT");		
		} else if (CheckInventory("CatacombClass"))
		{
			LocalAmbientSound("Catacomb/Secret", 127);
			Log(l:"SECRETFOUND_WOLF");				
		} else if (CheckInventory("PainkillerClass"))
		{
			LocalAmbientSound("Painkiller/Sekret", 127);
			Log(l:"SECRETFOUND_WOLF");		
		} else if (CheckInventory("UnrealClass"))
		{
			LocalAmbientSound("secretfound/unreal", 127);
			Log(l:"SECRETFOUND_DEFAULT");		
		} else if (CheckInventory("RTCWClass"))
		{
			LocalAmbientSound("RTCW/Secret", 127);
			Log(l:"SECRETFOUND_WOLF");					
		} else {
			LocalAmbientSound("secretfound/default", 127);
			Print(l:"SECRETFOUND_DEFAULT");
		}
	}
	delay(1);
	restart;
}

// class-specific item pickup messages
script "InvisPickupMessage" (void) clientside
{
	int colortemp = GetCvar("msg0color");
	str msgcolor = "";
	
	if (GetCvar("msg0color") == 0) { msgcolor = "\ca"; }
	else if (GetCvar("msg0color") == 1) { msgcolor = "\cb"; }
	else if (GetCvar("msg0color") == 2) { msgcolor = "\cc"; }
	else if (GetCvar("msg0color") == 3) { msgcolor = "\cd"; }
	else if (GetCvar("msg0color") == 4) { msgcolor = "\ce"; }
	else if (GetCvar("msg0color") == 5) { msgcolor = "\cf"; }
	else if (GetCvar("msg0color") == 6) { msgcolor = "\cg"; }
	else if (GetCvar("msg0color") == 7) { msgcolor = "\ch"; }
	else if (GetCvar("msg0color") == 8) { msgcolor = "\ci"; }
	else if (GetCvar("msg0color") == 9) { msgcolor = "\cj"; }
	else if (GetCvar("msg0color") == 10) { msgcolor = "\ck"; }
	else if (GetCvar("msg0color") == 11) { msgcolor = "\cl"; }
	else if (GetCvar("msg0color") == 12) { msgcolor = "\cm"; }
	else if (GetCvar("msg0color") == 13) { msgcolor = "\cn"; }
	else if (GetCvar("msg0color") == 14) { msgcolor = "\co"; }
	else if (GetCvar("msg0color") == 15) { msgcolor = "\cp"; }
	else if (GetCvar("msg0color") == 16) { msgcolor = "\cq"; }
	else if (GetCvar("msg0color") == 17) { msgcolor = "\cr"; }
	else if (GetCvar("msg0color") == 18) { msgcolor = "\cs"; }
	else if (GetCvar("msg0color") == 19) { msgcolor = "\ct"; }
	else if (GetCvar("msg0color") == 20) { msgcolor = "\cu"; }
	else if (GetCvar("msg0color") == 21) { msgcolor = "\cv"; }
	else if (GetCvar("msg0color") == 22) { msgcolor = "\cw"; }
	else if (GetCvar("msg0color") == 23) { msgcolor = "\cx"; }
	else if (GetCvar("msg0color") == 24) { msgcolor = "\cy"; }
	else if (GetCvar("msg0color") == 25) { msgcolor = "\cz"; }
	
	if (CheckInventory("DukeClass") == 1) { Log(s:msgcolor, l:"SAMSARA_POWERUP_HOLODUKE"); }
	else { Log(s:msgcolor, l:"SAMSARA_POWERUP_INVIS"); }
}

script "InvulnPickupMessage" (void) clientside
{
	int colortemp = GetCvar("msg0color");
	str msgcolor = "";
	
	if (GetCvar("msg0color") == 0) { msgcolor = "\ca"; }
	else if (GetCvar("msg0color") == 1) { msgcolor = "\cb"; }
	else if (GetCvar("msg0color") == 2) { msgcolor = "\cc"; }
	else if (GetCvar("msg0color") == 3) { msgcolor = "\cd"; }
	else if (GetCvar("msg0color") == 4) { msgcolor = "\ce"; }
	else if (GetCvar("msg0color") == 5) { msgcolor = "\cf"; }
	else if (GetCvar("msg0color") == 6) { msgcolor = "\cg"; }
	else if (GetCvar("msg0color") == 7) { msgcolor = "\ch"; }
	else if (GetCvar("msg0color") == 8) { msgcolor = "\ci"; }
	else if (GetCvar("msg0color") == 9) { msgcolor = "\cj"; }
	else if (GetCvar("msg0color") == 10) { msgcolor = "\ck"; }
	else if (GetCvar("msg0color") == 11) { msgcolor = "\cl"; }
	else if (GetCvar("msg0color") == 12) { msgcolor = "\cm"; }
	else if (GetCvar("msg0color") == 13) { msgcolor = "\cn"; }
	else if (GetCvar("msg0color") == 14) { msgcolor = "\co"; }
	else if (GetCvar("msg0color") == 15) { msgcolor = "\cp"; }
	else if (GetCvar("msg0color") == 16) { msgcolor = "\cq"; }
	else if (GetCvar("msg0color") == 17) { msgcolor = "\cr"; }
	else if (GetCvar("msg0color") == 18) { msgcolor = "\cs"; }
	else if (GetCvar("msg0color") == 19) { msgcolor = "\ct"; }
	else if (GetCvar("msg0color") == 20) { msgcolor = "\cu"; }
	else if (GetCvar("msg0color") == 21) { msgcolor = "\cv"; }
	else if (GetCvar("msg0color") == 22) { msgcolor = "\cw"; }
	else if (GetCvar("msg0color") == 23) { msgcolor = "\cx"; }
	else if (GetCvar("msg0color") == 24) { msgcolor = "\cy"; }
	else if (GetCvar("msg0color") == 25) { msgcolor = "\cz"; }
	
	Log(s:msgcolor, l:"SAMSARA_POWERUP_INVULN");
}

script "RadSuitPickupMessage" (void) clientside
{
	int colortemp = GetCvar("msg0color");
	str msgcolor = "";
	
	if (GetCvar("msg0color") == 0) { msgcolor = "\ca"; }
	else if (GetCvar("msg0color") == 1) { msgcolor = "\cb"; }
	else if (GetCvar("msg0color") == 2) { msgcolor = "\cc"; }
	else if (GetCvar("msg0color") == 3) { msgcolor = "\cd"; }
	else if (GetCvar("msg0color") == 4) { msgcolor = "\ce"; }
	else if (GetCvar("msg0color") == 5) { msgcolor = "\cf"; }
	else if (GetCvar("msg0color") == 6) { msgcolor = "\cg"; }
	else if (GetCvar("msg0color") == 7) { msgcolor = "\ch"; }
	else if (GetCvar("msg0color") == 8) { msgcolor = "\ci"; }
	else if (GetCvar("msg0color") == 9) { msgcolor = "\cj"; }
	else if (GetCvar("msg0color") == 10) { msgcolor = "\ck"; }
	else if (GetCvar("msg0color") == 11) { msgcolor = "\cl"; }
	else if (GetCvar("msg0color") == 12) { msgcolor = "\cm"; }
	else if (GetCvar("msg0color") == 13) { msgcolor = "\cn"; }
	else if (GetCvar("msg0color") == 14) { msgcolor = "\co"; }
	else if (GetCvar("msg0color") == 15) { msgcolor = "\cp"; }
	else if (GetCvar("msg0color") == 16) { msgcolor = "\cq"; }
	else if (GetCvar("msg0color") == 17) { msgcolor = "\cr"; }
	else if (GetCvar("msg0color") == 18) { msgcolor = "\cs"; }
	else if (GetCvar("msg0color") == 19) { msgcolor = "\ct"; }
	else if (GetCvar("msg0color") == 20) { msgcolor = "\cu"; }
	else if (GetCvar("msg0color") == 21) { msgcolor = "\cv"; }
	else if (GetCvar("msg0color") == 22) { msgcolor = "\cw"; }
	else if (GetCvar("msg0color") == 23) { msgcolor = "\cx"; }
	else if (GetCvar("msg0color") == 24) { msgcolor = "\cy"; }
	else if (GetCvar("msg0color") == 25) { msgcolor = "\cz"; }
	
	Log(s:msgcolor, l:"SAMSARA_POWERUP_RADSUIT");
}

script "VisorPickupMessage" (void) clientside
{
	int colortemp = GetCvar("msg0color");
	str msgcolor = "";
	
	if (GetCvar("msg0color") == 0) { msgcolor = "\ca"; }
	else if (GetCvar("msg0color") == 1) { msgcolor = "\cb"; }
	else if (GetCvar("msg0color") == 2) { msgcolor = "\cc"; }
	else if (GetCvar("msg0color") == 3) { msgcolor = "\cd"; }
	else if (GetCvar("msg0color") == 4) { msgcolor = "\ce"; }
	else if (GetCvar("msg0color") == 5) { msgcolor = "\cf"; }
	else if (GetCvar("msg0color") == 6) { msgcolor = "\cg"; }
	else if (GetCvar("msg0color") == 7) { msgcolor = "\ch"; }
	else if (GetCvar("msg0color") == 8) { msgcolor = "\ci"; }
	else if (GetCvar("msg0color") == 9) { msgcolor = "\cj"; }
	else if (GetCvar("msg0color") == 10) { msgcolor = "\ck"; }
	else if (GetCvar("msg0color") == 11) { msgcolor = "\cl"; }
	else if (GetCvar("msg0color") == 12) { msgcolor = "\cm"; }
	else if (GetCvar("msg0color") == 13) { msgcolor = "\cn"; }
	else if (GetCvar("msg0color") == 14) { msgcolor = "\co"; }
	else if (GetCvar("msg0color") == 15) { msgcolor = "\cp"; }
	else if (GetCvar("msg0color") == 16) { msgcolor = "\cq"; }
	else if (GetCvar("msg0color") == 17) { msgcolor = "\cr"; }
	else if (GetCvar("msg0color") == 18) { msgcolor = "\cs"; }
	else if (GetCvar("msg0color") == 19) { msgcolor = "\ct"; }
	else if (GetCvar("msg0color") == 20) { msgcolor = "\cu"; }
	else if (GetCvar("msg0color") == 21) { msgcolor = "\cv"; }
	else if (GetCvar("msg0color") == 22) { msgcolor = "\cw"; }
	else if (GetCvar("msg0color") == 23) { msgcolor = "\cx"; }
	else if (GetCvar("msg0color") == 24) { msgcolor = "\cy"; }
	else if (GetCvar("msg0color") == 25) { msgcolor = "\cz"; }
	
	Log(s:msgcolor, l:"SAMSARA_POWERUP_INFRARED");
}

// don't get too brutal, kid
script "BrutalChecker" ENTER
{
    int s = unusedTID(37000, 47000);

    if (SpawnForced("Brutal_Blood",0,0,0,s,0))
	{
		SetFont("BIGFONT");
		HudMessage(s:"Hello! You seem to have Brutal Doom\n
		loaded at the same time as Samsara.\n
		This may cause bugs and glitches.\n
		Please Understand.";
		HUDMSG_TYPEON | HUDMSG_LOG, 0, CR_TAN, 1.5, 0.8, 5.0,
		0.05, 2.0);
		PlaySound(0,"LLoyd/MostAnnoyingSound",CHAN_6,1.0,false,ATTN_NONE);
		Delay(13);
		PlaySound(0,"LLoyd/MostAnnoyingSoundLoop",CHAN_6,1.0,true,ATTN_NONE);
    }
}

// Pistol Start Stuff!

str pistolwit[30] =
{
	"PISTOLSTART_WIT1",
	"PISTOLSTART_WIT2",
	"PISTOLSTART_WIT3",
	"PISTOLSTART_WIT4",
	"PISTOLSTART_WIT5",
	"PISTOLSTART_WIT6",
	"PISTOLSTART_WIT7",
	"PISTOLSTART_WIT8",
	"PISTOLSTART_WIT9",
	"PISTOLSTART_WIT10",
	"PISTOLSTART_WIT11",
	"PISTOLSTART_WIT12",
	"PISTOLSTART_WIT13",
	"PISTOLSTART_WIT14",
	"PISTOLSTART_WIT15",
	"PISTOLSTART_WIT16",
	"PISTOLSTART_WIT17",
	"PISTOLSTART_WIT18",
	"PISTOLSTART_WIT19",
	"PISTOLSTART_WIT20",
	"PISTOLSTART_WIT21",
	"PISTOLSTART_WIT22",
	"PISTOLSTART_WIT23",
	"PISTOLSTART_WIT24",
	"PISTOLSTART_WIT25",
	"PISTOLSTART_WIT26",
	"PISTOLSTART_WIT27",
	"PISTOLSTART_WIT28",
	"PISTOLSTART_WIT29",
	"PISTOLSTART_WIT30"
};

script "PistolStart" ENTER
{
	if(GetCvar("samsara_pistolstart") == 1 && (GameType () != GAME_TITLE_MAP))
	{
		GiveInventory("PistolStartEnabled", 1);
		
		SetActorProperty (0, APROP_Health, 100);
		
		// Some classes such as Grondoval and Demoness require special
		// treatment for starting with the correct amount of health.
		int pln = PlayerNumber();
		switch(PlayerClass(pln))
		{
			case 18:
				SetActorProperty (0, APROP_Health, 250);
				break;
			case 25:
				SetActorProperty (0, APROP_Health, 70);
				break;
		}
		
		TakeInventory("GotWeapon0", 999);
		TakeInventory("GotWeapon2", 999);
		TakeInventory("GotWeapon3", 999);
		TakeInventory("GotWeapon4", 999);
		TakeInventory("GotWeapon5", 999);
		TakeInventory("GotWeapon6", 999);
		TakeInventory("GotWeapon7", 999);
		ACS_NamedExecuteWithResult("Samsara_ResetInventory",0,0,0,0);
		if (!(CheckInventory("QuakeClass") || CheckInventory("PainkillerClass")))
		{
			GiveInventory("Clip", 50);
		}
		
		LocalAmbientSound("misc/pistolstart", 127);
		Log(l:"PISTOLSTART_HEADER", s:" ", l:pistolwit[random(0,29)]);
	}
}

// Give IDKFA Users the proper inventory tokens for the top bar
// this is basically copypasted from metadoom sorry
script "InventoryCheat" (void)
{
	GiveInventory("GotWeapon0", 1);
	GiveInventory("GotWeapon2", 1);
	GiveInventory("GotWeapon3", 1);
	GiveInventory("GotWeapon4", 1);
	GiveInventory("GotWeapon5", 1);
	GiveInventory("GotWeapon6", 1);
	GiveInventory("GotWeapon7", 1);
	TakeInventory("MetaCheatDetector",1);
	ACS_NamedExecuteWithResult("Samsara_FillInventory",0,0,0,0);
}

// Instead of doing multiple scripts for item messages, we'll
// do all of them in one script
script "SamsaraPickupMessages" (int item) clientside
{
	int colortemp = GetCvar("msg0color");
	str msgcolor = "";
	str itemtemp = "";
	
	switch(item)
	{
	case 0:
		itemtemp = "SAMSARA_HEALPACK0";
		break;
	case 1:
		itemtemp = "SAMSARA_HEALPACK_HERETIC";
		break;
	case 2:
		itemtemp = "SAMSARA_HEALPACK1";
		break;
	case 3:
		itemtemp = "SAMSARA_HEALPACK1_STRIFE";
		break;
	case 4:
		itemtemp = "SAMSARA_HEALPACK2";
		break;
	case 5:
		itemtemp = "SAMSARA_HEALPACK2_RAVEN";
		break;
	case 6:
		itemtemp = "SAMSARA_HEALPACK2_STRIFE";
		break;
	case 7:
		itemtemp = "SAMSARA_HEALPACK2_IPOG";
		break;
	case 8:
		itemtemp = "SAMSARA_HEALPACK2_WITCHAVEN";
		break;
	case 9:
		itemtemp = "SAMSARA_HEALPACK2_CYBERMAGE";
		break;
	case 10:
		itemtemp = "SAMSARA_HEALPACK2_REDNECK";
		break;
	case 11:
		itemtemp = "SAMSARA_HEALPACK2_CATACOMB";
		break;
	case 12:
		itemtemp = "SAMSARA_HEALPACK3";
		break;
	case 13:
		itemtemp = "SAMSARA_HEALPACK3_RAVEN";
		break;
	case 14:
		itemtemp = "SAMSARA_HEALPACK3_DUKE";
		break;
	case 15:
		itemtemp = "SAMSARA_HEALPACK3_STRIFE";
		break;
	case 16:
		itemtemp = "SAMSARA_HEALPACK3_SHADOWWARRIOR";
		break;
	case 17:
		itemtemp = "SAMSARA_HEALPACK3_REDNECK";
		break;
	case 18:
		itemtemp = "SAMSARA_HEALPACK3_CATACOMB";
		break;
	case 19:
		itemtemp = "SAMSARA_MEGAPACK";
		break;
	case 20:
		itemtemp = "SAMSARA_MEGAPACK_CORVUS";
		break;
	case 21:
		itemtemp = "SAMSARA_MEGAPACK_MARATHON";
		break;
	case 22:
		itemtemp = "SAMSARA_ARMORSCRAP";
		break;
	case 23:
		itemtemp = "SAMSARA_ARMORSCRAP3";
		break;
	case 24:
		itemtemp = "SAMSARA_ARMOR0_1";
		break;
	case 25:
		itemtemp = "SAMSARA_ARMOR0_2";
		break;
	case 26:
		itemtemp = "SAMSARA_ARMOR0_3";
		break;
	case 27:
		itemtemp = "SAMSARA_ARMOR0_4";
		break;
	case 28:
		itemtemp = "SAMSARA_ARMOR12_1";
		break;
	case 29:
		itemtemp = "SAMSARA_ARMOR12_2";
		break;
	case 30:
		itemtemp = "SAMSARA_ARMOR12_3";
		break;
	case 31:
		itemtemp = "SAMSARA_ARMOR12_4";
		break;
	case 32:
		itemtemp = "SAMSARA_ARMOR3_1";
		break;
	case 33:
		itemtemp = "SAMSARA_ARMOR3_2";
		break;
	case 34:
		itemtemp = "SAMSARA_ARMOR3_3";
		break;
	case 35:
		itemtemp = "SAMSARA_ARMOR3_4";
		break;
	case 36:
		itemtemp = "SAMSARA_ARMORSCRAP_HERETIC";
		break;
	case 37:
		itemtemp = "SAMSARA_ARMORSCRAP3_HERETIC";
		break;
	case 38:
		itemtemp = "SAMSARA_ARMORHEXEN";
		break;
	case 39:
		itemtemp = "SAMSARA_ARMOR3HEXEN";
		break;
	case 40:
		itemtemp = "SAMSARA_POWERUP_ARMOR";
		break;
	case 41:
		itemtemp = "SAMSARA_POWERUP_ARMOR3";
		break;
	case 42:
		itemtemp = "SAMSARA_HEALPACK_TI";
		break;
	case 43:
		itemtemp = "SAMSARA_ARMORSCRAP_TI";
		break;
	case 44:
		itemtemp = "SAMSARA_ARMORSCRAP3_TI";
		break;
	case 45:
		itemtemp = "SAMSARA_POWERUP_INVIS";
		break;
	case 46:
		itemtemp = "SAMSARA_POWERUP_INVIS_RAVEN";
		break;
	case 47:
		itemtemp = "SAMSARA_POWERUP_INVIS_DUKE";
		break;
	case 48:
		itemtemp = "SAMSARA_POWERUP_INVIS_STRIFE";
		break;
	case 49:
		itemtemp = "SAMSARA_POWERUP_INVIS_WITCHAVEN";
		break;
	case 50:
		itemtemp = "SAMSARA_POWERUP_INVIS_EXHUMED";
		break;
	case 51:
		itemtemp = "SAMSARA_POWERUP_INVIS_QUAKE2";
		break;
	case 52:
		itemtemp = "SAMSARA_POWERUP_INVULN";
		break;
	case 53:
		itemtemp = "SAMSARA_POWERUP_INVULN_CORVUS";
		break;
	case 54:
		itemtemp = "SAMSARA_POWERUP_INVULN_HEXEN";
		break;
	case 55:
		itemtemp = "SAMSARA_POWERUP_INVULN_ROTT";
		break;
	case 56:
		itemtemp = "SAMSARA_POWERUP_INVULN_IPOG";
		break;
	case 57:
		itemtemp = "SAMSARA_POWERUP_INVULN_EXHUMED";
		break;
	case 58:
		itemtemp = "SAMSARA_POWERUP_INVULN_CATACOMB";
		break;
	case 59:
		itemtemp = "SAMSARA_POWERUP_RADSUIT";
		break;
	case 60:
		itemtemp = "SAMSARA_POWERUP_INFRARED";
		break;
	case 61:
		itemtemp = "SAMSARA_POWERUP_INFRARED_RAVEN";
		break;
	case 62:
		itemtemp = "SAMSARA_POWERUP_INFRARED_DUKE";
		break;
	case 63:
		itemtemp = "SAMSARA_POWERUP_INFRARED_BLOOD";
		break;
	case 64:
		itemtemp = "SAMSARA_POWERUP_INFRARED_EXHUMED";
		break;
	case 65:
		itemtemp = "SAMSARA_POWERUP_INVIS_QUAKE";
		break;
	case 66:
		itemtemp = "SAMSARA_POWERUP_INVULN_QUAKE";
		break;
	}
	
	if (GetCvar("msg0color") == 0) { msgcolor = "\ca"; }
	else if (GetCvar("msg0color") == 1) { msgcolor = "\cb"; }
	else if (GetCvar("msg0color") == 2) { msgcolor = "\cc"; }
	else if (GetCvar("msg0color") == 3) { msgcolor = "\cd"; }
	else if (GetCvar("msg0color") == 4) { msgcolor = "\ce"; }
	else if (GetCvar("msg0color") == 5) { msgcolor = "\cf"; }
	else if (GetCvar("msg0color") == 6) { msgcolor = "\cg"; }
	else if (GetCvar("msg0color") == 7) { msgcolor = "\ch"; }
	else if (GetCvar("msg0color") == 8) { msgcolor = "\ci"; }
	else if (GetCvar("msg0color") == 9) { msgcolor = "\cj"; }
	else if (GetCvar("msg0color") == 10) { msgcolor = "\ck"; }
	else if (GetCvar("msg0color") == 11) { msgcolor = "\cl"; }
	else if (GetCvar("msg0color") == 12) { msgcolor = "\cm"; }
	else if (GetCvar("msg0color") == 13) { msgcolor = "\cn"; }
	else if (GetCvar("msg0color") == 14) { msgcolor = "\co"; }
	else if (GetCvar("msg0color") == 15) { msgcolor = "\cp"; }
	else if (GetCvar("msg0color") == 16) { msgcolor = "\cq"; }
	else if (GetCvar("msg0color") == 17) { msgcolor = "\cr"; }
	else if (GetCvar("msg0color") == 18) { msgcolor = "\cs"; }
	else if (GetCvar("msg0color") == 19) { msgcolor = "\ct"; }
	else if (GetCvar("msg0color") == 20) { msgcolor = "\cu"; }
	else if (GetCvar("msg0color") == 21) { msgcolor = "\cv"; }
	else if (GetCvar("msg0color") == 22) { msgcolor = "\cw"; }
	else if (GetCvar("msg0color") == 23) { msgcolor = "\cx"; }
	else if (GetCvar("msg0color") == 24) { msgcolor = "\cy"; }
	else if (GetCvar("msg0color") == 25) { msgcolor = "\cz"; }
	
	if (IsNetworkGame()) { terminate; } 
	else { Log(s:msgcolor, l:itemtemp); }
}
script "EleenaTauntCooldown" (void) //610
{
    while (CheckInventory("EleenaTauntCooldown") > 0)
    {
        Delay(35);
        TakeInventory("EleenaTauntCooldown", 1);
    }
}

Script "EleenaDeathBallDamageTier" (void)
{
	SetActivator(0,AAPTR_Tracer);
	int health = GetActorProperty(0,APROP_SpawnHealth);
	int tier = 1;
	if(ClassifyActor(0) & ACTOR_PLAYER)
		tier = 5;
	else if(health < 400 && health >= 200)
		tier = 2;
	else if(health < 1000 && health >= 400)
		tier = 3;
	else if(health >= 1000)
		tier = 4;
		
	SetResultValue(health/(tier*2));
}

script "EradicatorDartGun" (int enhanced)
{
    int deathdarttimer = 0;

    GiveInventory("EradDartGunCounter", 1);

    while (CheckWeapon("  Dart Cannon  ") && !isDead(0) && CheckInventory("EradDartGunCounter"))
    {
        switch (deathdarttimer)
        {
          case 0: GiveInventory(enhanced ? "SamsaraEradicatorDeathDartEnhancedAttackHandler1" : "SamsaraEradicatorDeathDartUnenhancedAttackHandler1", 1); break;
          case 2: GiveInventory(enhanced ? "SamsaraEradicatorDeathDartEnhancedAttackHandler2" : "SamsaraEradicatorDeathDartUnenhancedAttackHandler2", 1); break;
          case 4: GiveInventory(enhanced ? "SamsaraEradicatorDeathDartEnhancedAttackHandler3" : "SamsaraEradicatorDeathDartUnenhancedAttackHandler3", 1); break;
        }

        if (deathdarttimer == 4)
        {
            TakeInventory("EradDartGunCounter", 1);
            terminate;
        }
        else { deathdarttimer++; }

        Delay(1);
    }

    SetInventory("EradDartGunCounter", 0);
}

script "EradicatorPipCameraHud" (void)
{
    bool pipcontrolling = false;
    int inputX = 0;
    int pipObject = 0;

    while (CheckInventory("EradClass"))
    {
        if (CheckInventory("EradicatorPipTid"))
        {
            pipObject = CheckInventory("EradicatorPipTid");

            if (CheckInventory("EradicatorPipControllable") && CheckInventory("EradicatorPipAllowControl") && !isDead(0))
            {
                ACS_NamedExecuteWithResult("EleenaPipCamera");

                inputX = -GetPlayerInput(-1, INPUT_SIDEMOVE);

                SetPlayerProperty(0, true, PROP_TOTALLYFROZEN); // constantly set this even if other things are happening
                if (!pipcontrolling) { pipcontrolling = true; }

                GiveActorInventory(pipObject, "SamsaraEradicatorSlot1Controlled", 1);

                if (CheckFlag(pipObject, "MISSILE"))
                {
                    SetActorAngle(pipObject, GetActorAngle(pipObject) + (inputX / 8));
                    SetActorVelocity(pipObject, 8 * cos(GetActorAngle(pipObject)), 8 * sin(GetActorAngle(pipObject)), 0, false, false);
                }
            } else {
                if (pipcontrolling)
                {
                    SetPlayerProperty(0, false, PROP_TOTALLYFROZEN);
                    pipcontrolling = false;
                }

                TakeActorInventory(pipObject, "SamsaraEradicatorSlot1Controlled", INTMAX);

                HudMessage(s:""; HUDMSG_LAYER_OVERHUD|HUDMSG_NOTWITHFULLMAP|HUDMSG_PLAIN, 7198, CR_UNTRANSLATED, 0, 0, 15.0);
                HudMessage(s:""; HUDMSG_LAYER_OVERHUD|HUDMSG_NOTWITHFULLMAP|HUDMSG_PLAIN, 7199, CR_UNTRANSLATED, 0, 0, 15.0);
            }
        } else {
            if (pipcontrolling)
            {
                SetPlayerProperty(0, false, PROP_TOTALLYFROZEN);
                pipcontrolling = false;
            }

            HudMessage(s:""; HUDMSG_LAYER_OVERHUD|HUDMSG_NOTWITHFULLMAP|HUDMSG_PLAIN, 7198, CR_UNTRANSLATED, 0, 0, 15.0);
            HudMessage(s:""; HUDMSG_LAYER_OVERHUD|HUDMSG_NOTWITHFULLMAP|HUDMSG_PLAIN, 7199, CR_UNTRANSLATED, 0, 0, 15.0);
        }

        Delay(1);
    }
}

script "EleenaPipCamera" (void) CLIENTSIDE
{
    if (CheckInventory("EradicatorPipTid"))
    {
        SetHudSize(320,200,1);
        SetFont("ERADPIPS");
        HudMessage(s:"A"; HUDMSG_LAYER_OVERHUD|HUDMSG_NOTWITHFULLMAP|HUDMSG_PLAIN, 7198, CR_UNTRANSLATED, 0.1, 0.1, 0.0);
        SetFont("ERADPIPA");
        HudMessage(s:"A"; HUDMSG_LAYER_OVERHUD|HUDMSG_NOTWITHFULLMAP|HUDMSG_PLAIN, 7199, CR_UNTRANSLATED, 0.1, 0.1, 0.0);
    } else {
        HudMessage(s:""; HUDMSG_LAYER_OVERHUD|HUDMSG_NOTWITHFULLMAP|HUDMSG_PLAIN, 7198, CR_UNTRANSLATED, 0, 0, 15.0);
        HudMessage(s:""; HUDMSG_LAYER_OVERHUD|HUDMSG_NOTWITHFULLMAP|HUDMSG_PLAIN, 7199, CR_UNTRANSLATED, 0, 0, 15.0);
    }
}

script "EradicatorPipObject" (int controllable)
{
    int pipTid = UniqueTID(1);
    Thing_ChangeTid(0, pipTid);

    int cameraTid = UniqueTID();
    bool camblocked = false;
    SpawnForced("AimingCamera", GetActorX(0), GetActorY(0), GetActorZ(0), cameraTid);
    SetInventory("EradicatorPipTid", pipTid);
    SetActivator(0, AAPTR_TARGET);

    int pln = PlayerNumber();

    int origpipTid = CheckInventory("EradicatorPipTid");

    if (origpipTid > 0) { TakeActorInventory(origpipTid, "SamsaraEradicatorSlot1Controlled", INTMAX); }

    SetInventory("EradicatorPipControllable", controllable);
    SetInventory("EradicatorPipTid", pipTid);
    ACS_NamedExecuteWithResult("EradicatorPipClient", cameraTid, PlayerNumber());
    SetActivator(pipTid, AAPTR_DEFAULT);

    SetPointer(AAPTR_MASTER, cameraTid);

    GiveInventory("SamsaraEradicatorSlot1Spawned", 1);

    while (ClassifyActor(pipTid) & ACTOR_MISSILE)
    {
        SetActivator(pipTid, AAPTR_TARGET);

        if (!CheckInventory("EradClass"))
        {
            TakeActorInventory(pipTid, "SamsaraEradicatorSlot1Controlled", INTMAX);

            if (!camblocked)
            {
                SetPlayerActivator(pln);

                if (CheckInventory("EradicatorPipTid") == pipTid)
                {
                    SetInventory("EradicatorPipControllable", 0);
                    SetInventory("EradicatorPipTid", 0);
                }

                Thing_Remove(cameraTid);

                camblocked = true;
            }
        }

        int horizontalVector = magnitudeTwo_f(GetActorVelX(pipTid), GetActorVelY(pipTid)) << 8;
        int velZ = GetActorVelZ(pipTid);
        int pitch = VectorAngle(horizontalVector, velZ);

        if (!camblocked)
        {
            SetActivator(pipTid, AAPTR_DEFAULT);
            Warp(AAPTR_MASTER, -80.0, 0, 32.0, 0, WARPF_NOCHECKPOSITION|WARPF_COPYINTERPOLATION|WARPF_USEPTR|WARPF_MOVEPTR);
        }

        SetActivator(pipTid, AAPTR_NULL);

        Delay(1);
    }

    while (CheckActorInventory(pipTid, "SamsaraEradicatorSlot1Spawned")) { Delay(1); }

    if (!camblocked)
    {
        SetPlayerActivator(pln);

        if (CheckInventory("EradicatorPipTid") == pipTid)
        {
            SetInventory("EradicatorPipControllable", 0);
            SetInventory("EradicatorPipTid", 0);
        }

        Thing_Remove(cameraTid);
    }
}

script "EradicatorPipClient" (int cameraTid, int player) CLIENTSIDE
{
    if (player != ConsolePlayerNumber()) { terminate; }

    SetCameraToTexture(cameraTid, "ERADPIPA", 90);
}

script "EleenaTauntCooldown" (void) //610
{
    while (CheckInventory("EleenaTauntCooldown") > 0)
    {
        Delay(35);
        TakeInventory("EleenaTauntCooldown", 1);
    }
}

Script "EleenaDeathBallDamageTier" (void)
{
	SetActivator(0,AAPTR_Tracer);
	int health = GetActorProperty(0,APROP_SpawnHealth);
	int damage = 20;
	
	if(ClassifyActor(0) & ACTOR_PLAYER)
		damage = 20;
	else if(health <= 250)
		damage = 50;
	else if(health <= 1000)
		damage = 35;
	else if(health >= 2000)
		damage = 20;
		
	SetResultValue(damage);
}

script "EradicatorDartGun" (int enhanced)
{
    int deathdarttimer = 0;

    GiveInventory("EradDartGunCounter", 1);

    while (CheckWeapon("  Dart Cannon  ") && !isDead(0) && CheckInventory("EradDartGunCounter"))
    {
        switch (deathdarttimer)
        {
          case 0: GiveInventory(enhanced ? "SamsaraEradicatorDeathDartEnhancedAttackHandler1" : "SamsaraEradicatorDeathDartUnenhancedAttackHandler1", 1); break;
          case 2: GiveInventory(enhanced ? "SamsaraEradicatorDeathDartEnhancedAttackHandler2" : "SamsaraEradicatorDeathDartUnenhancedAttackHandler2", 1); break;
          case 4: GiveInventory(enhanced ? "SamsaraEradicatorDeathDartEnhancedAttackHandler3" : "SamsaraEradicatorDeathDartUnenhancedAttackHandler3", 1); break;
        }

        if (deathdarttimer == 4)
        {
            TakeInventory("EradDartGunCounter", 1);
            terminate;
        }
        else { deathdarttimer++; }

        Delay(1);
    }

    SetInventory("EradDartGunCounter", 0);
}

script "EradicatorPipCameraHud" (void)
{
    bool pipcontrolling = false;
    int inputX = 0;
    int pipObject1, pipObject2, pipObject3;

    while (CheckInventory("EradClass"))
    {
        pipObject1 = CheckInventory("EradicatorPipTid1");
        pipObject2 = CheckInventory("EradicatorPipTid2");
        pipObject3 = CheckInventory("EradicatorPipTid3");

        if (pipObject1 > 0 || pipObject2 > 0 || pipObject3 > 0)
        {
            if (pipObject1 > 0 && CheckInventory("EradicatorPipControllable") && CheckInventory("EradicatorPipAllowControl") && !isDead(0))
            {
                ACS_NamedExecuteWithResult("EleenaPipCamera");

                inputX = -GetPlayerInput(-1, INPUT_SIDEMOVE);

                SetPlayerProperty(0, true, PROP_TOTALLYFROZEN); // constantly set this even if other things are happening
                if (!pipcontrolling) { pipcontrolling = true; }

                if (pipObject1 > 0)
                {
                    GiveActorInventory(pipObject1, "SamsaraEradicatorSlot1Controlled", 1);
                    GiveActorInventory(pipObject1, "SamsaraNoTimeFreezeEnabler", 1);

                    if (CheckFlag(pipObject1, "MISSILE"))
                    {
                        SetActorAngle(pipObject1, GetActorAngle(pipObject1) + (inputX / 8));
                        SetActorVelocity(pipObject1, 8 * cos(GetActorAngle(pipObject1)), 8 * sin(GetActorAngle(pipObject1)), 0, false, false);
                    }
                }

                if (pipObject2 > 0)
                {
                    GiveActorInventory(pipObject2, "SamsaraEradicatorSlot1Controlled", 1);
                    GiveActorInventory(pipObject2, "SamsaraNoTimeFreezeEnabler", 1);

                    if (CheckFlag(pipObject2, "MISSILE"))
                    {
                        SetActorAngle(pipObject2, GetActorAngle(pipObject2) + (inputX / 8));
                        SetActorVelocity(pipObject2, 8 * cos(GetActorAngle(pipObject2)), 8 * sin(GetActorAngle(pipObject2)), 0, false, false);
                    }
                }

                if (pipObject3 > 0)
                {
                    GiveActorInventory(pipObject3, "SamsaraEradicatorSlot1Controlled", 1);
                    GiveActorInventory(pipObject3, "SamsaraNoTimeFreezeEnabler", 1);

                    if (CheckFlag(pipObject3, "MISSILE"))
                    {
                        SetActorAngle(pipObject3, GetActorAngle(pipObject3) + (inputX / 8));
                        SetActorVelocity(pipObject3, 8 * cos(GetActorAngle(pipObject3)), 8 * sin(GetActorAngle(pipObject3)), 0, false, false);
                    }
                }
            } else {
                if (pipcontrolling)
                {
                    SetPlayerProperty(0, false, PROP_TOTALLYFROZEN);
                    pipcontrolling = false;
                }

                if (pipObject1 > 0)
                {
                    TakeActorInventory(pipObject1, "SamsaraEradicatorSlot1Controlled", INTMAX);
                    GiveActorInventory(pipObject1, "SamsaraNoTimeFreezeDisabler", 1);
                }

                if (pipObject2 > 0)
                {
                    TakeActorInventory(pipObject2, "SamsaraEradicatorSlot1Controlled", INTMAX);
                    GiveActorInventory(pipObject2, "SamsaraNoTimeFreezeDisabler", 1);
                }

                if (pipObject3 > 0)
                {
                    TakeActorInventory(pipObject3, "SamsaraEradicatorSlot1Controlled", INTMAX);
                    GiveActorInventory(pipObject3, "SamsaraNoTimeFreezeDisabler", 1);
                }

                HudMessage(s:""; HUDMSG_LAYER_OVERHUD|HUDMSG_NOTWITHFULLMAP|HUDMSG_PLAIN, 7198, CR_UNTRANSLATED, 0, 0, 15.0);
                HudMessage(s:""; HUDMSG_LAYER_OVERHUD|HUDMSG_NOTWITHFULLMAP|HUDMSG_PLAIN, 7199, CR_UNTRANSLATED, 0, 0, 15.0);
            }
        } else {
            if (pipcontrolling)
            {
                SetPlayerProperty(0, false, PROP_TOTALLYFROZEN);
                pipcontrolling = false;
            }

            HudMessage(s:""; HUDMSG_LAYER_OVERHUD|HUDMSG_NOTWITHFULLMAP|HUDMSG_PLAIN, 7198, CR_UNTRANSLATED, 0, 0, 15.0);
            HudMessage(s:""; HUDMSG_LAYER_OVERHUD|HUDMSG_NOTWITHFULLMAP|HUDMSG_PLAIN, 7199, CR_UNTRANSLATED, 0, 0, 15.0);
        }

        Delay(1);
    }
}

script "EleenaPipCamera" (void) CLIENTSIDE
{
    if (CheckInventory("EradicatorPipTid1"))
    {
        SetHudSize(320, 200, 1);
        SetFont("ERADPIPS");
        HudMessage(s:"A"; HUDMSG_LAYER_OVERHUD|HUDMSG_NOTWITHFULLMAP|HUDMSG_PLAIN, 7198, CR_UNTRANSLATED, 0.1, 0.1, 0.0);
        SetFont("ERADPIPA");
        HudMessage(s:"A"; HUDMSG_LAYER_OVERHUD|HUDMSG_NOTWITHFULLMAP|HUDMSG_PLAIN, 7199, CR_UNTRANSLATED, 0.1, 0.1, 0.0);
    } else {
        HudMessage(s:""; HUDMSG_LAYER_OVERHUD|HUDMSG_NOTWITHFULLMAP|HUDMSG_PLAIN, 7198, CR_UNTRANSLATED, 0, 0, 15.0);
        HudMessage(s:""; HUDMSG_LAYER_OVERHUD|HUDMSG_NOTWITHFULLMAP|HUDMSG_PLAIN, 7199, CR_UNTRANSLATED, 0, 0, 15.0);
    }
}

script "EradicatorPipObject" (int controllable)
{
    int pipTid = UniqueTID(1);
    int spreadproj = 0;

    Thing_ChangeTid(0, pipTid);

    int cameraTid = UniqueTID();
    bool camblocked = false;

    SpawnForced("AimingCamera", GetActorX(0), GetActorY(0), GetActorZ(0), cameraTid);

    SetActivator(0, AAPTR_TARGET);

    int pln = PlayerNumber();

    if (CheckInventory("SamsaraEradicatorSlot1ProjActive"))
    {
        Thing_Remove(cameraTid);

        spreadproj = CheckInventory("SamsaraEradicatorSlot1ProjActive");
    }

    if (spreadproj >= 2) { SetInventory("EradicatorPipTid3", pipTid); }
    else if (spreadproj == 1) { SetInventory("EradicatorPipTid2", pipTid); }
    else
    {
        int origpipTid1 = CheckInventory("EradicatorPipTid1");

        if (origpipTid1 > 0)
        {
            TakeActorInventory(origpipTid1, "SamsaraEradicatorSlot1Controlled", INTMAX);
            GiveActorInventory(origpipTid1, "SamsaraNoTimeFreezeDisabler", 1);
        }

        int origpipTid2 = CheckInventory("EradicatorPipTid2");

        if (origpipTid2 > 0)
        {
            TakeActorInventory(origpipTid2, "SamsaraEradicatorSlot1Controlled", INTMAX);
            GiveActorInventory(origpipTid2, "SamsaraNoTimeFreezeDisabler", 1);
        }

        int origpipTid3 = CheckInventory("EradicatorPipTid3");

        if (origpipTid3 > 0)
        {
            TakeActorInventory(origpipTid3, "SamsaraEradicatorSlot1Controlled", INTMAX);
            GiveActorInventory(origpipTid3, "SamsaraNoTimeFreezeDisabler", 1);
        }

        SetInventory("EradicatorPipControllable", controllable);
        SetInventory("EradicatorPipTid1", pipTid);
        SetInventory("EradicatorPipTid2", 0);
        SetInventory("EradicatorPipTid3", 0);
        ACS_NamedExecuteWithResult("EradicatorPipClient", cameraTid, pln);
    }

    GiveInventory("SamsaraEradicatorSlot1ProjActive", 1);

    SetActivator(pipTid, AAPTR_DEFAULT);

    if (spreadproj <= 0) { SetPointer(AAPTR_MASTER, cameraTid); }

    GiveInventory("SamsaraEradicatorSlot1Spawned", 1);

    while (ClassifyActor(pipTid) & ACTOR_MISSILE)
    {
        SetActivator(pipTid, AAPTR_TARGET);

        if (!CheckInventory("EradClass"))
        {
            TakeActorInventory(pipTid, "SamsaraEradicatorSlot1Controlled", INTMAX);
            GiveActorInventory(pipTid, "SamsaraNoTimeFreezeDisabler", 1);

            if (!camblocked)
            {
                SetPlayerActivator(pln);

                if (spreadproj >= 2)
                {
                    if (CheckInventory("EradicatorPipTid3") == pipTid) { SetInventory("EradicatorPipTid3", 0); }
                } else if (spreadproj == 1) {
                    if (CheckInventory("EradicatorPipTid2") == pipTid) { SetInventory("EradicatorPipTid2", 0); }
                } else {
                    if (CheckInventory("EradicatorPipTid1") == pipTid)
                    {
                        SetInventory("EradicatorPipControllable", 0);
                        SetInventory("EradicatorPipTid1", 0);
                    }

                    Thing_Remove(cameraTid);
                }

                camblocked = true;
            }
        }

        int horizontalVector = magnitudeTwo_f(GetActorVelX(pipTid), GetActorVelY(pipTid)) << 8;
        int velZ = GetActorVelZ(pipTid);
        int pitch = VectorAngle(horizontalVector, velZ);

        if (!camblocked && spreadproj <= 0)
        {
            SetActivator(pipTid, AAPTR_DEFAULT);
            Warp(AAPTR_MASTER, -80.0, 0, 32.0, 0, WARPF_NOCHECKPOSITION|WARPF_COPYINTERPOLATION|WARPF_USEPTR|WARPF_MOVEPTR);
        }

        SetActivator(pipTid, AAPTR_NULL);

        Delay(1);
    }

    while (CheckActorInventory(pipTid, "SamsaraEradicatorSlot1Spawned")) { Delay(1); }

    if (!camblocked)
    {
        SetPlayerActivator(pln);

        if (spreadproj >= 2)
        {
            if (CheckInventory("EradicatorPipTid3") == pipTid) { SetInventory("EradicatorPipTid3", 0); }
        } else if (spreadproj == 1) {
            if (CheckInventory("EradicatorPipTid2") == pipTid) { SetInventory("EradicatorPipTid2", 0); }
        } else {
            if (CheckInventory("EradicatorPipTid1") == pipTid)
            {
                SetInventory("EradicatorPipControllable", 0);
                SetInventory("EradicatorPipTid1", 0);
            }

            Thing_Remove(cameraTid);
        }
    }
}

script "EradicatorPipClient" (int cameraTid, int player) CLIENTSIDE
{
    if (player != ConsolePlayerNumber()) { terminate; }

    SetCameraToTexture(cameraTid, "ERADPIPA", 90);
}

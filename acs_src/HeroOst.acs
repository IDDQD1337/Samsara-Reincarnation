//======================================================================================================================
//													Compile this
//======================================================================================================================

#library "HeroOST"
#include "zcommon.acs"
#include "commonFuncs.acs"

#define musicCount 38

int musicActivated[musicCount] = {-1};
str musicSettings[musiccount] =
{
    "samsara_cl_heromusic_doom",
    "samsara_cl_heromusic_chex",
    "samsara_cl_heromusic_heretic",
    "samsara_cl_heromusic_wolf3d",
    "samsara_cl_heromusic_hexen1",
    "samsara_cl_heromusic_duke3d",
    "samsara_cl_heromusic_marathon",
    "samsara_cl_heromusic_quake1",
    "samsara_cl_heromusic_rott",
    "samsara_cl_heromusic_bstone",
    "samsara_cl_heromusic_blood",
    "samsara_cl_heromusic_strife",
    "samsara_cl_heromusic_doom64",
    "samsara_cl_heromusic_erad",
    "samsara_cl_heromusic_c7",
    "samsara_cl_heromusic_rmr",
    "samsara_cl_heromusic_darkf",
    "samsara_cl_heromusic_ipog",
    "samsara_cl_heromusic_disrup",
    "samsara_cl_heromusic_witch",
    "samsara_cl_heromusic_halflife",
    "samsara_cl_heromusic_sw",
    "samsara_cl_heromusic_cm",
    "samsara_cl_heromusic_ps",
    "samsara_cl_heromusic_rr",
    "samsara_cl_heromusic_quake2",
    "samsara_cl_heromusic_hexen2",
    "samsara_cl_heromusic_goldeneye",
    "samsara_cl_heromusic_dukelab",
    "samsara_cl_heromusic_hlop",
    "samsara_cl_heromusic_totenkopf",
    "samsara_cl_heromusic_catacomb",
    "samsara_cl_heromusic_painkiller",
    "samsara_cl_heromusic_unreal",
    "samsara_cl_heromusic_rtcw",
    "samsara_cl_heromusic_quake3",
    "samsara_cl_heromusic_descent",
    "samsara_cl_heromusic_deusex"
};

str DoomMusic[52] = {"DOOMTR01","DOOMTR02","DOOMTR03","DOOMTR04","DOOMTR05",
"DOOMTR06","DOOMTR07","DOOMTR08","DOOMTR09","DOOMTR10","DOOMTR11","DOOMTR12",
"DOOMTR13","DOOMTR14","DOOMTR15","DOOMTR16","DOOMTR17","DOOMTR18","DOOMTR19",
"DOOMTR20","DOOMTR21","DOOMTR22","DOOMTR23","DOOMTR24","DOOMTR25","DOOMTR26",
"DOOMTR27","DOOMTR28","DOOMTR29","DOOMTR30","DOOMTR31","DOOMTR32","DOOMTR33",
"DOOMTR34","DOOMTR35","DOOMTR36","DOOMTR37","DOOMTR38","DOOMTR39","DOOMTR40",
"DOOMTR41","DOOMTR42","DOOMTR43","DOOMTR44","DOOMTR45","DOOMTR46","DOOMTR47",
"DOOMTR48","DOOMTR49","DOOMTR50","DOOMTR51","DOOMTR52"};

str HereticMusic[19] = {"HERETR01","HERETR02","HERETR03","HERETR04","HERETR05",
"HERETR06","HERETR07","HERETR08","HERETR09","HERETR10","HERETR11","HERETR12",
"HERETR13","HERETR14","HERETR15","HERETR16","HERETR17","HERETR18","HERETR19"};

str HexenMusic[32] = {"HEXENT01","HEXENT02","HEXENT03","HEXENT04","HEXENT05",
"HEXENT06","HEXENT07","HEXENT08","HEXENT09","HEXENT10","HEXENT11","HEXENT12",
"HEXENT13","HEXENT14","HEXENT15","HEXENT16","HEXENT17","HEXENT18","HEXENT19",
"HEXENT20","HEXENT21","HEXENT22","HEXENT23","HEXENT24","HEXENT25","HEXENT26",
"HEXENT27","HEXENT28","HEXENT29","HEXENT30","HEXENT31","HEXENT32"};

str ChexMusic[15] = {"CHEXTR01","CHEXTR02","CHEXTR03","CHEXTR04","CHEXTR05",
"CHEXTR06","CHEXTR07","CHEXTR08","CHEXTR09","CHEXTR10","CHEXTR11","CHEXTR12",
"CHEXTR13","CHEXTR14","CHEXTR15"};

str WolfMusic[29] = {"WOLF3D01","WOLF3D02","WOLF3D03","WOLF3D03","WOLF3D05",
"WOLF3D06","WOLF3D07","WOLF3D08","WOLF3D09","WOLF3D10","WOLF3D11","WOLF3D12",
"WOLF3D13","WOLF3D14","WOLF3D15","WOLF3D16","WOLF3D17","WOLF3D18","WOLF3D19",
"WOLF3D20","WOLF3D21","WOLF3D22","WOLF3D23","WOLF3D24","WOLF3D25","WOLF3D26",
"WOLF3D27","WOLF3D28","WOLF3D29"};

str DukeMusic[46] = {"DUKE3D01","DUKE3D02","DUKE3D03","DUKE3D04","DUKE3D05",
"DUKE3D06","DUKE3D07","DUKE3D08","DUKE3D09","DUKE3D10","DUKE3D11","DUKE3D12",
"DUKE3D13","DUKE3D14","DUKE3D15","DUKE3D16","DUKE3D17","DUKE3D18","DUKE3D19",
"DUKE3D20","DUKE3D21","DUKE3D22","DUKE3D23","DUKE3D24","DUKE3D25",
"DUKE3D26","DUKE3D27","DUKE3D28","DUKE3D29","DUKE3D30","DUKE3D31","DUKE3D32",
"DUKE3D33","DUKE3D34","DUKE3D35","DUKE3D36","DUKE3D37","DUKE3D38","DUKE3D39",
"DUKE3D40","DUKE3D41","DUKE3D42","DUKE3D43","DUKE3D44","DUKE3D45","DUKE3D46"};

str MarathonMusic[16] = {"MARATR01","MARATR02","MARATR03","MARATR04","MARATR05",
"MARATR06","MARATR07","MARATR08","MARATR09","MARATR10","MARATR11","MARATR12",
"MARATR13","MARATR14","MARATR15","MARATR16"};

str QuakeMusic[9] = {"QKTRAK01","QKTRAK02","QKTRAK03","QKTRAK04","QKTRAK05",
"QKTRAK06","QKTRAK07","QKTRAK08","QKTRAK09"};

str RottMusic[21] = {"ROTTTR01","ROTTTR02","ROTTTR03","ROTTTR04","ROTTTR05"
,"ROTTTR06","ROTTTR07","ROTTTR08","ROTTTR09","ROTTTR10","ROTTTR11","ROTTTR12",
"ROTTTR13","ROTTTR14","ROTTTR15","ROTTTR16","ROTTTR17","ROTTTR18","ROTTTR19",
"ROTTTR20","ROTTTR21"};

str BlakeMusic[15] = {"BSTRAK01","BSTRAK02","BSTRAK03","BSTRAK04","BSTRAK05",
"BSTRAK06","BSTRAK07","BSTRAK08","BSTRAK09","BSTRAK10","BSTRAK11","BSTRAK12",
"BSTRAK13","BSTRAK14","BSTRAK15"};

str BloodMidi[12] = {"BLDMID01","BLDMID02","BLDMID03","BLDMID04","BLDMID05",
"BLDMID06","BLDMID07","BLDMID08","BLDMID09","BLDMID10","BLDMID11","BLDMID12"};

str BloodCDMusic[8] = {"BLOODT01","BLOODT02","BLOODT03","BLOODT04",
"BLOODT05","BLOODT06","BLOODT07","BLOODT08"};

str StrifeMusic[19] = {"STRIFT01","STRIFT02","STRIFT03","STRIFT04","STRIFT05",
"STRIFT06","STRIFT07","STRIFT08","STRIFT09","STRIFT10","STRIFT11","STRIFT12",
"STRIFT13","STRIFT14","STRIFT15","STRIFT16","STRIFT17","STRIFT18","STRIFT19"};

str Doom64Music[23] = {"D64TRK01","D64TRK02","D64TRK03","D64TRK04","D64TRK05",
"D64TRK06","D64TRK07","D64TRK08","D64TRK09","D64TRK10","D64TRK11","D64TRK12",
"D64TRK13","D64TRK14","D64TRK15","D64TRK16","D64TRK17","D64TRK18","D64TRK19",
"D64TRK20","D64TRK21","D64TRK22","D64TRK23"};

str EradMusic[2] = {"ERADTRK1","ERADTRK2"};

str Corridor7Music[31] = {"C7TRAK01","C7TRAK02","C7TRAK03","C7TRAK04","C7TRAK05",
"C7TRAK06","C7TRAK07","C7TRAK08","C7TRAK09","C7TRAK10","C7TRAK11","C7TRAK12",
"C7TRAK13","C7TRAK14","C7TRAK15","C7TRAK16","C7TRAK17","C7TRAK18","C7TRAK19",
"C7TRAK20","C7TRAK21","C7TRAK22","C7TRAK23","C7TRAK24","C7TRAK25","C7TRAK26",
"C7TRAK27","C7TRAK28","C7TRAK29","C7TRAK30","C7TRAK31"};

str RMRMusic[12] = {"RMRTRK01","RMRTRK02","RMRTRK03","RMRTRK04","RMRTRK05",
"RMRTRK06","RMRTRK07","RMRTRK08","RMRTRK09","RMRTRK10","RMRTRK11","RMRTRK12"};

str DarkForcesMusic[20] = {"DFTRAK01","DFTRAK02","DFTRAK03","DFTRAK04","DFTRAK05",
"DFTRAK06","DFTRAK07","DFTRAK08","DFTRAK09","DFTRAK10","DFTRAK11","DFTRAK12",
"DFTRAK13","DFTRAK14","DFTRAK15","DFTRAK16","DFTRAK17","DFTRAK18","DFTRAK19",
"DFTRAK20"};

str POGreedMusic[33] = {"POTRAK01","POTRAK02","POTRAK03","POTRAK04","POTRAK05",
"POTRAK06","POTRAK07","POTRAK08","POTRAK09","POTRAK10","POTRAK11","POTRAK12",
"POTRAK13","POTRAK14","POTRAK15","POTRAK16","POTRAK17", "POTRAK18", "POTRAK19",
"POTRAK20", "POTRAK21", "POTRAK22", "POTRAK23", "POTRAK24", "POTRAK25", "POTRAK26",
"POTRAK27", "POTRAK28", "POTRAK29", "POTRAK30", "POTRAK31", "POTRAK32","POTRAK33",};

str WitchMusic[17] = {"WITRAK01","WITRAK02","WITRAK03","WITRAK04","WITRAK05",
"WITRAK06","WITRAK07","WITRAK08","WITRAK09","WITRAK10","WITRAK11","WITRAK12",
"WITRAK13","WITRAK14","WITRAK15","WITRAK16","WITRAK17"};

str DisruptorMusic[37] = {"DISRTR01","DISRTR02","DISRTR03","DISRTR04","DISRTR05",
"DISRTR06","DISRTR07","DISRTR08","DISRTR09","DISRTR10","DISRTR11","DISRTR12",
"DISRTR13","DISRTR14","DISRTR15","DISRTR16","DISRTR17","DISRTR18",
"DISRTR19","DISRTR20","DISRTR21","DISRTR22","DISRTR23","DISRTR24","DISRTR25",
"DISRTR26","DISRTR27","DISRTR28","DISRTR29","DISRTR30","DISRTR31","DISRTR32",
"DISRTR33","DISRTR34","DISRTR35","DISRTR36","DISRTR37"};

str HLMusicStart[8] = { "HLTRAK26", "HLTRAK37", "HLTRAK38", "HLTRAK41", "HLTRAK01", "HLTRAK07", "HLTRAK12", "HLTRAK15" };
str HLMusicWeapon[6] = { "HLTRAK24", "HLTRAK31", "HLTRAK35", "HLTRAK03", "HLTRAK10", "HLTRAK14" };
str HLMusicKey[6] = { "HLTRAK28", "HLTRAK32", "HLTRAK33", "HLTRAK08", "HLTRAK09", "HLTRAK17" };
str HLMusicBoss[5] = { "HLTRAK25", "HLTRAK34", "HLTRAK39", "HLTRAK16", "HLTRAK18" };
str HLMusicRandom[13] = { "HLTRAK20", "HLTRAK21", "HLTRAK22", "HLTRAK23", "HLTRAK27", "HLTRAK29", "HLTRAK30", "HLTRAK40", "HLTRAK02", "HLTRAK04", "HLTRAK06", "HLTRAK11", "HLTRAK13" };

str SWMusic[9] = {"SWTRAK01","SWTRAK02","SWTRAK03","SWTRAK04","SWTRAK05",
"SWTRAK06","SWTRAK07","SWTRAK08","SWTRAK09"};

str CybermageMusic[27] = {"CMTRAK01","CMTRAK02","CMTRAK03","CMTRAK04","CMTRAK05",
"CMTRAK06","CMTRAK07","CMTRAK08","CMTRAK09","CMTRAK10","CMTRAK11","CMTRAK12",
"CMTRAK13","CMTRAK14","CMTRAK15","CMTRAK16","CMTRAK17","CMTRAK18",
"CMTRAK19","CMTRAK20","CMTRAK21","CMTRAK22","CMTRAK23","CMTRAK24","CMTRAK25",
"CMTRAK26","CMTRAK27"};

str PSMusic[10] = {"EXHUTR01","EXHUTR02","EXHUTR03","EXHUTR04","EXHUTR05",
"EXHUTR06","EXHUTR07","EXHUTR08","EXHUTR09","EXHUTR10"};

str RRMusic[16] = {"RRTRAK01","RRTRAK02","RRTRAK03","RRTRAK04","RRTRAK05",
"RRTRAK06","RRTRAK07","RRTRAK08","RRTRAK09","RRTRAK10","RRTRAK11","RRTRAK12",
"RRTRAK13","RRTRAK14","RRTRAK15","RRTRAK16"};

str Quake2Music[20] = {"Q2TRAK01","Q2TRAK02","Q2TRAK03","Q2TRAK04","Q2TRAK05",
"Q2TRAK06","Q2TRAK07","Q2TRAK08","Q2TRAK09","Q2TRAK10","Q2TRAK11","Q2TRAK12",
"Q2TRAK13","Q2TRAK14","Q2TRAK15","Q2TRAK16","Q2TRAK17","Q2TRAK18","Q2TRAK19",
"Q2TRAK20"};

str Hexen2Midi[26] = {"HX2MID01","HX2MID02","HX2MID03","HX2MID04","HX2MID05",
"HX2MID06","HX2MID07","HX2MID08","HX2MID09","HX2MID10","HX2MID11","HX2MID12",
"HX2MID13","HX2MID14","HX2MID15","HX2MID16","HX2MID17","HX2MID18","HX2MID19",
"HX2MID20","HX2MID21","HX2MID22","HX2MID23","HX2MID24","HX2MID25","HX2MID26"};

str Hexen2CDMusic[26] = {"H2TRAK01","H2TRAK02","H2TRAK03","H2TRAK04","H2TRAK05",
"H2TRAK06","H2TRAK07","H2TRAK08","H2TRAK09","H2TRAK10","H2TRAK11","H2TRAK12",
"H2TRAK13","H2TRAK14","H2TRAK15","H2TRAK16","H2TRAK17","H2TRAK18","H2TRAK19",
"H2TRAK20","H2TRAK21","H2TRAK22","H2TRAK23","H2TRAK24","H2TRAK25","H2TRAK26"};

str GoldeneyeMusic[26] = {"BONDTR01","BONDTR02","BONDTR03","BONDTR04","BONDTR05",
"BONDTR06","BONDTR07","BONDTR08","BONDTR09","BONDTR10","BONDTR11","BONDTR12",
"BONDTR13","BONDTR14","BONDTR15","BONDTR16","BONDTR17","BONDTR18","BONDTR19",
"BONDTR20","BONDTR21","BONDTR22","BONDTR23","BONDTR24","BONDTR25","BONDTR26"};

str TotenkopfMusic[15] = {"TKTRAK01", "TKTRAK02", "TKTRAK03","TKTRAK04","TKTRAK05",
"TKTRAK06","TKTRAK07","TKTRAK08","TKTRAK09","TKTRAK10","TKTRAK11","TKTRAK12", "TKTRAK13",
"TKTRAK14", "TKTRAK15"};

str ChristmasMusic[16] = {"CHRIST01","CHRIST02","CHRIST03","CHRIST04","CHRIST05",
"CHRIST06","CHRIST07","CHRIST08","CHRIST09","CHRIST10","CHRIST11","CHRIST12",
"CHRIST13","CHRIST14","CHRIST15","CHRIST16"};

int thememaxpk = 27;
int songseedmaxpk = 4;
//themes, song type, ambient songs
str PainkillerMusic[27][2][4] = 
{
	{{"PKAMB001","PKAMB001","PKAMB001","PKAMB001"},{"PKFIT001","PKFIT001","PKFIT001","PKFIT001"}},
	{{"PKAMB011","PKAMB012","PKAMB011","PKAMB012"},{"PKFIT011","PKFIT011","PKFIT011","PKFIT011"}},
	{{"PKAMB021","PKAMB022","PKAMB021","PKAMB022"},{"PKFIT021","PKFIT021","PKFIT021","PKFIT021"}},
	{{"PKAMB031","PKAMB032","PKAMB031","PKAMB032"},{"PKFIT031","PKFIT031","PKFIT031","PKFIT031"}},
	{{"PKAMB041","PKAMB042","PKAMB041","PKAMB042"},{"PKFIT041","PKFIT041","PKFIT041","PKFIT041"}},
	{{"PKAMB051","PKAMB051","PKAMB051","PKAMB051"},{"PKFIT051","PKFIT051","PKFIT051","PKFIT051"}},
	{{"PKAMB061","PKAMB061","PKAMB061","PKAMB061"},{"PKFIT061","PKFIT061","PKFIT061","PKFIT061"}},
	{{"PKAMB071","PKAMB071","PKAMB071","PKAMB071"},{"PKFIT071","PKFIT071","PKFIT071","PKFIT071"}},
	{{"PKAMB081","PKAMB081","PKAMB081","PKAMB081"},{"PKFIT081","PKFIT081","PKFIT081","PKFIT081"}},
	{{"PKAMB091","PKAMB092","PKAMB091","PKAMB092"},{"PKFIT091","PKFIT091","PKFIT091","PKFIT091"}},
	{{"PKAMB101","PKAMB102","PKAMB101","PKAMB102"},{"PKFIT101","PKFIT101","PKFIT101","PKFIT101"}},
	{{"PKAMB111","PKAMB112","PKAMB111","PKAMB112"},{"PKFIT011","PKFIT011","PKFIT011","PKFIT011"}},
	{{"PKAMB121","PKAMB122","PKAMB121","PKAMB122"},{"PKFIT051","PKFIT051","PKFIT051","PKFIT051"}},
	{{"PKAMB131","PKAMB131","PKAMB131","PKAMB131"},{"PKFIT131","PKFIT131","PKFIT131","PKFIT131"}},
	{{"PKAMB141","PKAMB141","PKAMB141","PKAMB141"},{"PKFIT141","PKFIT141","PKFIT141","PKFIT141"}},
	{{"PKAMB151","PKAMB151","PKAMB151","PKAMB151"},{"PKFIT151","PKFIT151","PKFIT151","PKFIT151"}},
	{{"PKAMB161","PKAMB162","PKAMB161","PKAMB162"},{"PKFIT041","PKFIT041","PKFIT041","PKFIT041"}},
	{{"PKAMB171","PKAMB172","PKAMB171","PKAMB172"},{"PKFIT071","PKFIT071","PKFIT071","PKFIT071"}},
	{{"PKAMB181","PKAMB181","PKAMB181","PKAMB181"},{"PKFIT181","PKFIT181","PKFIT181","PKFIT181"}},
	{{"PKAMB191","PKAMB192","PKAMB191","PKAMB192"},{"PKFIT191","PKFIT191","PKFIT191","PKFIT191"}},
	{{"PKAMB201","PKAMB201","PKAMB201","PKAMB201"},{"PKFIT201","PKFIT201","PKFIT201","PKFIT201"}},
	{{"PKAMB211","PKAMB212","PKAMB211","PKAMB212"},{"PKFIT211","PKFIT211","PKFIT211","PKFIT211"}},
	{{"PKAMB221","PKAMB221","PKAMB221","PKAMB221"},{"PKFIT221","PKFIT221","PKFIT221","PKFIT221"}},
	{{"PKAMB231","PKAMB231","PKAMB231","PKAMB231"},{"PKFIT231","PKFIT231","PKFIT231","PKFIT231"}},
	{{"PKAMB241","PKAMB241","PKAMB241","PKAMB241"},{"PKFIT241","PKFIT241","PKFIT241","PKFIT241"}},
	{{"PKAMB251","PKAMB251","PKAMB251","PKAMB251"},{"PKFIT251","PKFIT251","PKFIT251","PKFIT251"}},
	{{"PKAMB261","PKAMB261","PKAMB261","PKAMB261"},{"PKFIT261","PKFIT261","PKFIT261","PKFIT261"}},
};

str UnrealMusic[77] = 
{
	"U1TR00P1", "U1TR01P1", "U1TR02P1", "U1TR02P2", "U1TR03P1", "U1TR03P2", "U1TR03P3",
	"U1TR04P1", "U1TR05P1", "U1TR05P2", "U1TR05P3", "U1TR06P1", "U1TR06P2", "U1TR07P1", "U1TR07P2", "U1TR08P1",
	"U1TR08P2", "U1TR09P1", "U1TR09P2", "U1TR10P1", "U1TR11P1", "U1TR11P2", "U1TR11P3", "U1TR12P1", "U1TR12P2",
	"U1TR12P3", "U1TR13P1", "U1TR13P2", "U1TR14P1", "U1TR14P2", "U1TR15P1", "U1TR15P2", "U1TR16P1", "U1TR17P1",
	"U1TR17P2", "U1TR17P3", "U1TR18P1", "U1TR19P1", "U1TR19P2", "U1TR20P1", "U1TR20P2", "U1TR21P1", "U1TR21P2",
	"U1TR22P1", "U1TR23P1", "U1TR23P2", "U1TR24P1", "U1TR25P1", "U1TR25P2", "U1TR26P1", "U1TR26P2", "U1TR27P1",
	"U1TR27P2", "U1TR27P3", "U1TR28P1", "U1TR29P1", "U1TR29P2", "U1TR29P3", "NPTR01P1", "NPTR01P2", "NPTR01P3",
	"NPTR02P1", "NPTR03P1", "NPTR04P1", "NPTR04P2", "NPTR05P1", "NPTR06P1", "NPTR06P2", "NPTR07P1", "NPTR08P1",
	"NPTR08P2", "NPTR09P1", "NPTR10P1", "NPTR11P1", "NPTR11P2", "NPTR12P1", "NPTR12P2"  
};

str RTCWSongs[16] = { "RTCWTR01", "RTCWTR02", "RTCWTR03", "RTCWTR04", "RTCWTR05", "RTCWTR06", "RTCWTR07", "RTCWTR08", "RTCWTR09", "RTCWTR10", "RTCWTR11", "RTCWTR12", "RTCWTR13", 
	"RTCWTR14", "RTCWTR15", "RTCWTR16" };
	
str Quake3Songs[18] = { "Q3TRAK00", "Q3TRAK01", "Q3TRAK02", "Q3TRAK03", "Q3TRAK04", "Q3TRAK05", "Q3TRAK06", "Q3TRAK07", "Q3TRAK08", "Q3TRAK09", "Q3TRAK10", "Q3TRAK11", "Q3TRAK12", 
	"Q3TRAK13", "Q3TRAK14", "Q3TRAK15", "Q3TRAK16", "Q3TRAK17" };
	
str DescentMusic[26] = {"DSTRAK00","DSTRAK01","DSTRAK02","DSTRAK03","DSTRAK04",
"DSTRAK05","DSTRAK06","DSTRAK07","DSTRAK08","DSTRAK09","DSTRAK10","DSTRAK11",
"DSTRAK12","DSTRAK13","DSTRAK14","DSTRAK15","DSTRAK16","DSTRAK17","DSTRAK18",
"DSTRAK19","DSTRAK20","DSTRAK21","DSTRAK22","DSTRAK23","DSTRAK24","DSTRAK25"};

int thememaxdx = 22;
int songseedmaxdx = 4;
str DeusExMusic[22][2][4] = 
{
	{{"DXAMB01","DXAMB01","DXAMB01","DXAMB01"},{"DXFIT01","DXFIT01","DXFIT01","DXFIT01"}},
	{{"DXAMB02","DXAMB02","DXAMB02","DXAMB02"},{"DXFIT02","DXFIT02","DXFIT02","DXFIT02"}},
	{{"DXAMB03","DXAMB03","DXAMB03","DXAMB03"},{"DXFIT03","DXFIT03","DXFIT03","DXFIT03"}},
	{{"DXAMB04","DXAMB04","DXAMB04","DXAMB04"},{"DXFIT04","DXFIT04","DXFIT04","DXFIT04"}},
	{{"DXAMB05","DXAMB05","DXAMB05","DXAMB05"},{"DXFIT05","DXFIT05","DXFIT05","DXFIT05"}},
	{{"DXAMB06","DXAMB06","DXAMB06","DXAMB06"},{"DXFIT06","DXFIT06","DXFIT06","DXFIT06"}},
	{{"DXAMB07","DXAMB07","DXAMB07","DXAMB07"},{"DXFIT07","DXFIT07","DXFIT07","DXFIT07"}},
	{{"DXAMB08","DXAMB08","DXAMB08","DXAMB08"},{"DXFIT08","DXFIT08","DXFIT08","DXFIT08"}},
	{{"DXAMB09","DXAMB09","DXAMB09","DXAMB09"},{"DXFIT09","DXFIT09","DXFIT09","DXFIT09"}},
	{{"DXAMB10","DXAMB10","DXAMB10","DXAMB10"},{"DXFIT10","DXFIT10","DXFIT10","DXFIT10"}},
	{{"DXAMB11","DXAMB11","DXAMB11","DXAMB11"},{"DXFIT11","DXFIT11","DXFIT11","DXFIT11"}},
	{{"DXAMB12","DXAMB12","DXAMB12","DXAMB12"},{"DXFIT12","DXFIT12","DXFIT12","DXFIT12"}},
	{{"DXAMB13","DXAMB13","DXAMB13","DXAMB13"},{"DXFIT13","DXFIT13","DXFIT13","DXFIT13"}},
	{{"DXAMB14A","DXAMB14A","DXAMB14A","DXAMB14A"},{"DXFIT14","DXFIT14","DXFIT14","DXFIT14"}},
	{{"DXAMB14B","DXAMB14B","DXAMB14B","DXAMB14B"},{"DXFIT14","DXFIT14","DXFIT14","DXFIT14"}},	
	{{"DXAMB15","DXAMB15","DXAMB15","DXAMB15"},{"DXFIT15","DXFIT15","DXFIT15","DXFIT15"}},	
	{{"DXAMB16","DXAMB16","DXAMB16","DXAMB16"},{"DXFIT16","DXFIT16","DXFIT16","DXFIT16"}},		
	{{"DXAMB17","DXAMB17","DXAMB17","DXAMB17"},{"DXFIT17","DXFIT17","DXFIT17","DXFIT17"}},	
	{{"DXAMB18","DXAMB18","DXAMB18","DXAMB18"},{"DXFIT18","DXFIT18","DXFIT18","DXFIT18"}},		
	{{"DXAMB19","DXAMB19","DXAMB19","DXAMB19"},{"DXFIT19","DXFIT19","DXFIT19","DXFIT19"}},		
	{{"DXAMB20","DXAMB20","DXAMB20","DXAMB20"},{"DXFIT20","DXFIT20","DXFIT20","DXFIT20"}},			
	{{"DXAMB21","DXAMB21","DXAMB21","DXAMB21"},{"DXFIT21","DXFIT21","DXFIT21","DXFIT21"}},		
};	

str gameClassesSTR[34] = {
	"DoomguyClass", "ChexClass", "CorvusClass", "WolfenClass", "HexenClass", "DukeClass", "MarathonClass", "QuakeClass", "RottClass", "BlakeClass",
	"CalebClass", "StrifeClass", "EradClass", "C7Class", "RMRClass", "KatarnClass", "POGreedClass", "DisruptorClass", "WitchavenClass", 
	"HalfLifeClass", "SWClass", "CMClass", "JonClass", "RRClass", "BittermanClass", "Hexen2Class", "BondClass", "CatacombClass", "PainkillerClass", 
	"UnrealClass", "RTCWClass", "Q3Class", "DescentClass", "DeusExClass"
};

Script "SamsaraOST_Enter" Enter
{	
	if(GameType() == GAME_TITLE_MAP)
		terminate;

    int i;
    int choices;

	int altskin, settrack, lastmode, lastgame, lastblud, lasthex, pln = PlayerNumber();
	int herosoundtrack = GetUserCVAR(pln,"samsara_cl_heromusic");
	int gameoverride;
	int	bloodcd  = GetUserCVAR(pln,"samsara_cl_bloodcd");
	int hexen2cd = GetUserCVAR(pln,"samsara_cl_hex2cd");

	If(herosoundtrack > 0 && (GetUserCVAR(pln,"samsara_cl_xmasmusic") == false || GetCVAR("samsara_merrychristmas") == false))
	{
		if(herosoundtrack != lastmode || CheckInventory("SamsaraModeCounter") != altskin || bloodcd != lastblud || hexen2cd != lasthex || GetLevelInfo(LEVELINFO_LEVELNUM) != CheckInventory("HeroSoundTrackLevel") || CheckInventory("SamsaraHeroMusicSelectingNextTrack"))
		{
            LocalSetMusic("");

            choices = -1;
            gameoverride = 0; // default to doom when there are no other fallbacks in use

            if (herosoundtrack == 2)
            {
                for (i = 0; i < musicCount; i++)
                {
                    if (GetCVar(musicSettings[i]))
                    {
                        choices++;
                        musicActivated[choices] = i;
                    }
                }

                if (choices > -1) { gameoverride = musicActivated[Random(0, choices)]; }
            }

            if (herosoundtrack == 1 || (herosoundtrack == 2 && choices == -1))
            {
                if (CheckInventory("DoomguyClass"))
                {
                    if (GetUserCVar(pln,"samsara_cl_doommode") == 1) { gameoverride = 12; }
                    else { gameoverride = 0; }
                }
                else if (CheckInventory("ChexClass")) { gameoverride = 1; }
                else if (CheckInventory("CorvusClass")) { gameoverride = 2; }
                else if (CheckInventory("WolfenClass"))
                {
                    if (GetUserCVar(pln,"samsara_cl_wolfmode") == 2) { gameoverride = 30; }
                    else { gameoverride = 3; }
                }
                else if (CheckInventory("HexenClass")) { gameoverride = 4; }
                else if (CheckInventory("DukeClass"))
                {
                    if (GetUserCVar(pln,"samsara_cl_dkclab")) { gameoverride = 28; }
                    else { gameoverride = 5; }
                }
                else if (CheckInventory("MarathonClass")) { gameoverride = 6; }
                else if (CheckInventory("QuakeClass")) { gameoverride = 7; }
                else if (CheckInventory("RottClass")) { gameoverride = 8; }
                else if (CheckInventory("BlakeClass")) { gameoverride = 9; }
                else if (CheckInventory("CalebClass")) { gameoverride = 10; }
                else if (CheckInventory("StrifeClass")) { gameoverride = 11; }
                else if (CheckInventory("EradClass")) { gameoverride = 13; }
                else if (CheckInventory("C7Class")) { gameoverride = 14; }
                else if (CheckInventory("RMRClass")) { gameoverride = 15; }
                else if (CheckInventory("KatarnClass")) { gameoverride = 16; }
                else if (CheckInventory("POGreedClass")) { gameoverride = 17; }
                else if (CheckInventory("DisruptorClass")) { gameoverride = 18; }
                else if (CheckInventory("WitchavenClass")) { gameoverride = 19; }
                else if (CheckInventory("HalfLifeClass"))
                {
                    if (GetUserCVar(pln,"samsara_cl_shephardmode")) { gameoverride = 29; }
                    else { gameoverride = 20; }
                }
                else if (CheckInventory("SWClass")) { gameoverride = 21; }
                else if (CheckInventory("CMClass")) { gameoverride = 22; }
                else if (CheckInventory("JonClass")) { gameoverride = 23; }
                else if (CheckInventory("RRClass")) { gameoverride = 24; }
                else if (CheckInventory("BittermanClass")) { gameoverride = 25; }
                else if (CheckInventory("Hexen2Class")) { gameoverride = 26; }
                else if (CheckInventory("BondClass")) { gameoverride = 27; }
                else if (CheckInventory("CatacombClass")) { gameoverride = 31; }
                else if (CheckInventory("PainkillerClass")) { gameoverride = 32; }
                else if (CheckInventory("UnrealClass")) { gameoverride = 33; }
                else if (CheckInventory("RTCWClass")) { gameoverride = 34; }
                else if (CheckInventory("Q3Class")) { gameoverride = 35; }
                else if (CheckInventory("DescentClass")) { gameoverride = 36; }
                else if (CheckInventory("DeusExClass")) { gameoverride = 37; }
            }

            SetInventory("SamsaraHeroMusicGame", gameoverride + 1);

            if (gameoverride == 0)
            {
                SetTrack = Random(0, 51);
                LocalSetMusic(DoomMusic[SetTrack]);
            } else if (gameoverride == 1) {
                SetTrack = Random(0, 14);
                LocalSetMusic(ChexMusic[SetTrack]);
            } else if (gameoverride == 2) {
                SetTrack = Random(0, 9);
                LocalSetMusic(HereticMusic[SetTrack]);
            } else if (gameoverride == 3) {
                SetTrack = Random(0, 30);
                LocalSetMusic(WolfMusic[SetTrack]);
            } else if (gameoverride == 4) {
                SetTrack = Random(0, 31);
                LocalSetMusic(HexenMusic[SetTrack]);
            } else if (gameoverride == 5) {
                SetTrack = Random(0, 39);
                LocalSetMusic(DukeMusic[SetTrack]);
            } else if (gameoverride == 6) {
                SetTrack = Random(0, 15);
                LocalSetMusic(MarathonMusic[SetTrack]);
            } else if (gameoverride == 7) {
                SetTrack = Random(0, 8);
                LocalSetMusic(QuakeMusic[SetTrack]);
            } else if (gameoverride == 8) {
                SetTrack = Random(0, 20);
                LocalSetMusic(RottMusic[SetTrack]);
            } else if (gameoverride == 9) {
                SetTrack = Random(0, 14);
                LocalSetMusic(BlakeMusic[SetTrack]);
            } else if (gameoverride == 10) {
                if (GetUserCVar(pln, "samsara_cl_bloodcd"))
                {
                    SetTrack = Random(0, 7);
                    LocalSetMusic(BloodCDMusic[SetTrack]);
                } else {
                    SetTrack = Random(0, 11);
                    LocalSetMusic(BloodMidi[SetTrack]);
                }
            } else if (gameoverride == 11) {
                SetTrack = Random(0, 18);
                LocalSetMusic(StrifeMusic[SetTrack]);
            } else if (gameoverride == 12) {
                SetTrack = Random(0, 22);
                LocalSetMusic(Doom64Music[SetTrack]);
            } else if (gameoverride == 13) {
                SetTrack = Random(0, 1);
                LocalSetMusic(EradMusic[SetTrack]);
            } else if (gameoverride == 14) {
                SetTrack = Random(0, 30);
                LocalSetMusic(Corridor7Music[SetTrack]);
            } else if (gameoverride == 15) {
                SetTrack = Random(0, 11);
                LocalSetMusic(RMRMusic[SetTrack]);
            } else if (gameoverride == 16) {
                SetTrack = Random(0, 19);
                LocalSetMusic(DarkForcesMusic[SetTrack]);
            } else if (gameoverride == 17) {
                SetTrack = Random(0, 32);
                LocalSetMusic(POGreedMusic[SetTrack]);
            } else if (gameoverride == 18) {
                SetTrack = Random(0, 36);
                LocalSetMusic(DisruptorMusic[SetTrack]);
            } else if (gameoverride == 19) {
                SetTrack = Random(0, 16);
                LocalSetMusic(WitchMusic[SetTrack]);
            } else if (gameoverride == 20 || gameoverride == 29) {
                if (!CheckInventory("SamsaraHeroMusicHalfLifeActive")) { ACS_NamedExecuteWithResult("SamsaraOST_HalfLifeScriptedMusicLoop"); }
            } else if (gameoverride == 21) {
                SetTrack = Random(0, 8);
                LocalSetMusic(SWMusic[SetTrack]);
            } else if (gameoverride == 22) {
                SetTrack = Random(0, 27);
                LocalSetMusic(CybermageMusic[SetTrack]);
            } else if (gameoverride == 23) {
                SetTrack = Random(0, 9);
                LocalSetMusic(PSMusic[SetTrack]);
            } else if (gameoverride == 24) {
                SetTrack = Random(0, 15);
                LocalSetMusic(RRMusic[SetTrack]);
            } else if (gameoverride == 25) {
                SetTrack = Random(0, 19);
                LocalSetMusic(Quake2Music[SetTrack]);
            } else if (gameoverride == 26) {
                if (GetUserCVar(pln, "samsara_cl_hex2cd"))
                {
                    SetTrack = Random(0, 25);
                    LocalSetMusic(Hexen2CDMusic[SetTrack]);
                } else {
                    SetTrack = Random(0, 25);
                    LocalSetMusic(Hexen2Midi[SetTrack]);
                }
            } else if (gameoverride == 27) {
                SetTrack = Random(0, 25);
                LocalSetMusic(GoldeneyeMusic[SetTrack]);

                TakeInventory("BondMusicToken", 26);
                GiveInventory("BondMusicToken", SetTrack + 1);
            } else if (gameoverride == 28) {
                SetTrack = Random(40, 45);
                LocalSetMusic(DukeMusic[SetTrack]);
            } else if (gameoverride == 30) {
                SetTrack = Random(2, 14);
                LocalSetMusic(TotenkopfMusic[SetTrack]);
            }
            else if (gameoverride == 31) { LocalSetMusic("C3DTRACK"); }
            else if (gameoverride == 32)
            {
                if (!CheckInventory("SamsaraHeroMusicPainkillerActive")) { ACS_NamedExecuteWithResult("SamsaraOST_PainkillerScriptedMusic"); }
            } else if (gameoverride == 33) {
                SetTrack = Random(0, 76);
                LocalSetMusic(UnrealMusic[SetTrack]);
            } else if (gameoverride == 34) {
                SetTrack = Random(0, 15);
                LocalSetMusic(RTCWSongs[SetTrack]);
            } else if (gameoverride == 35) {
                SetTrack = Random(0, 17);
                LocalSetMusic(Quake3Songs[SetTrack]);
            } else if (gameoverride == 36) {
                SetTrack = Random(0, 25);
                LocalSetMusic(DescentMusic[SetTrack]);
            } else if (gameoverride == 37) {
                if (!CheckInventory("SamsaraHeroMusicDeusExActive")) { ACS_NamedExecuteWithResult("SamsaraOST_DeusExScriptedMusic"); }
            }

            GiveInventory("HeroSoundTrack", herosoundtrack);
            TakeInventory("HeroSoundTrackXmas", 1);
            TakeInventory("HeroSoundTrackLevel", 2048);
            GiveInventory("HeroSoundTrackLevel", GetLevelInfo(LEVELINFO_LEVELNUM));

            SetInventory("SamsaraHeroMusicSelectingNextTrack", 0);
		}
	}
	Else if(GetUserCvar(pln,"samsara_cl_xmasmusic") && GetCvar("samsara_merrychristmas") && herosoundtrack > 0)
	{
		if(CheckInventory("HeroSoundTrackXmas") < 1 || GetLevelInfo(LEVELINFO_LEVELNUM) != CheckInventory("HeroSoundTrackLevel") || CheckInventory("SamsaraHeroMusicSelectingNextTrack"))
		{
            LocalSetMusic("");

			SetTrack = random(0,15);
			LocalSetMusic(ChristmasMusic[SetTrack],0);
			GiveInventory("HeroSoundTrackXmas", 1);
			TakeInventory("HeroSoundTrack", 1);
			TakeInventory("HeroSoundTrackLevel", 2048);
			GiveInventory("HeroSoundTrackLevel", GetLevelInfo(LEVELINFO_LEVELNUM));
            SetInventory("SamsaraHeroMusicGame", 0);

            SetInventory("SamsaraHeroMusicSelectingNextTrack", 0);
		}
	}
	else
	{
		if(CheckInventory("HeroSoundTrack") > 0 || CheckInventory("HeroSoundTrackXMas") == 1)
		{
            LocalSetMusic("");

			LocalSetMusic("*",0);
			TakeInventory("HeroSoundTrack", 2);
			TakeInventory("HeroSoundTrackXmas", 1);
			TakeInventory("HeroSoundTrackLevel", 2048);
            SetInventory("SamsaraHeroMusicGame", 0);

            SetInventory("SamsaraHeroMusicSelectingNextTrack", 0);
		}
	}
    altskin = CheckInventory("SamsaraModeCounter");
	lastmode = GetUserCvar(pln,"samsara_cl_heromusic");
	lastblud = GetUserCvar(pln,"samsara_cl_bloodcd");
	lasthex  = GetUserCvar(pln,"samsara_cl_hex2cd");
	Delay(1);
	restart;
}

script "SamsaraOST_HalfLifeScriptedMusicLoop" (void)
{
    int settrack;
	int gameoverride = CheckInventory("SamsaraHeroMusicGame") - 1;
    int halflifeopposingforce = gameoverride == 29;
    int delaytimer = 0;

    while (gameoverride == 20 || gameoverride == 29)
    {
        gameoverride = CheckInventory("SamsaraHeroMusicGame") - 1;

        if (!(gameoverride == 20 || gameoverride == 29)) { break; }

        SetInventory("SamsaraHeroMusicHalfLifeActive", 1);

        if (CheckInventory("HalfLifeMusicPlayingToken"))
        {
            if (delaytimer >= 4200)
            {
                StopSound(0, CHAN_VOICE);
                SetInventory("HalfLifeMusicPlayingToken", 0);
                delaytimer = 0;
            }
            else { delaytimer++; }
        }

        if (!CheckInventory("HalfLifeMusicPlayingToken"))
        {
            if (Timer() == 0)
            {
                ACS_NamedExecuteAlways("SamsaraOST_HalfLifeScriptedMusic", 0, 3);
                SetInventory("HalfLifeMusicPlayingToken", 1);
            } else {
                settrack = Random(0, 2048);

                if (settrack == 1)
                {
                    ACS_NamedExecuteAlways("SamsaraOST_HalfLifeScriptedMusic", 0, 4); 
                    SetInventory("HalfLifeMusicPlayingToken", 1);
                }
            }
        }

        Delay(1);
    }

    if (CheckInventory("HalfLifeMusicPlayingToken"))
    {
        StopSound(0, CHAN_VOICE);
        SetInventory("HalfLifeMusicPlayingToken", 0);
    }

    SetInventory("SamsaraHeroMusicHalfLifeActive", 0);
}

Script "SamsaraOST_HalfLifeScriptedMusic" (int cause) clientside
{
	int settrack;
	int gameoverride = CheckInventory("SamsaraHeroMusicGame") - 1;
    int halflifeopposingforce = gameoverride == 29;

    if (gameoverride == 20 || gameoverride == 29)
	{
		StopSound(0, CHAN_VOICE);
		switch(cause)
		{
			case 1:
				settrack = random(0,2);
				PlaySound(0, HLMusicKey[settrack+(halflifeopposingforce*3)], CHAN_VOICE|CHAN_NOPAUSE, 1.0, ATTN_NONE);
				break;
			case 2:
				settrack = random(0,2);
				PlaySound(0, HLMusicWeapon[settrack+(halflifeopposingforce*3)], CHAN_VOICE|CHAN_NOPAUSE, 1.0, ATTN_NONE);
				break;
			case 3:
				settrack = random(0,3);
				PlaySound(0, HLMusicStart[settrack+(halflifeopposingforce*4)], CHAN_VOICE|CHAN_NOPAUSE, 1.0, ATTN_NONE);
				break;
			case 4:	
				if(!halflifeopposingforce)
				{
					settrack = random(0,7);
					PlaySound(0, HLMusicRandom[settrack], CHAN_VOICE|CHAN_NOPAUSE, 1.0, ATTN_NONE);
				}
				else
				{
					settrack = random(8,12);	
					PlaySound(0, HLMusicRandom[settrack], CHAN_VOICE|CHAN_NOPAUSE, 1.0, ATTN_NONE);
				}
				break;
			case 5:	
				if(!halflifeopposingforce)
				{
					settrack = random(0,2);
					PlaySound(0, HLMusicBoss[settrack], CHAN_VOICE|CHAN_NOPAUSE, 1.0, ATTN_NONE);
				}
				else
				{
					settrack = random(3,4);	
					PlaySound(0, HLMusicBoss[settrack], CHAN_VOICE|CHAN_NOPAUSE, 1.0, ATTN_NONE);
				}
				break;
		}
	}
}

Script "SamsaraOST_PainkillerScriptedMusic" (void)
{
	int musicvolume = 1.0;
	int themeseed = random(0,thememaxpk-1);
	int songseed = random(0,songseedmaxpk -1);
	int targetmusicvolume = musicvolume;
	int swapped, swaptofight, swaptoambient;
	int laststate = 0;
	int trigger = 1;
	int gameoverride = CheckInventory("SamsaraHeroMusicGame") - 1;

	while (gameoverride == 32)
	{
        gameoverride = CheckInventory("SamsaraHeroMusicGame") - 1;

        if (gameoverride != 32) { break; }

        if (CheckInventory("SamsaraHeroMusicSelectingNextTrack"))
        {
            LocalSetMusic("");

	        themeseed = random(0,thememaxpk-1);
	        songseed = random(0,songseedmaxpk -1);
        }

        SetInventory("SamsaraHeroMusicPainkillerActive", 1);

		int newtid = UniqueTid();
		SpawnSpotFacingForced("Painkiller_MusicDecider",0,newtid);
		SetPointerExt(AAPTR_TRACER,0,newtid);
		Thing_ChangeTid(newtid,0);

		if(GetCvar("sams_runninginzdoom"))
		{
			SetMusicVolume(musicvolume);
			if(CheckInventory("Painkiller_CombatMusic") || swaptofight == 1)
			{
				if(CheckInventory("Painkiller_CombatMusic") != swapped || swaptofight == 1)
				{
					swaptofight = 1;
					//PrintBold(s:"Combat ",f:musicvolume);
					if(laststate == 0)
					{
						trigger = 0;
						musicvolume -= 0.01;
					}
					if(musicvolume < 0.0 || trigger == 1)
					{
						trigger = 1;
						if(musicvolume < targetmusicvolume)
							musicvolume += 0.01;
						else
						{
							musicvolume = targetmusicvolume;
							swaptofight = 0;
							swaptoambient = 0;
							swapped = 1;
						}
							
						if(laststate == 0)
							LocalSetMusic(PainkillerMusic[themeseed][1][songseed],0);
						laststate = 1;
					}
				}
				else
				{
					SetMusicVolume(targetmusicvolume);
					LocalSetMusic(PainkillerMusic[themeseed][1][songseed],0);
				}
			}
			else if(CheckInventory("Painkiller_CombatMusic") == 0 || swaptoambient == 1)
			{
				if(CheckInventory("Painkiller_CombatMusic") != swapped || swaptoambient == 1)
				{
					swaptoambient = 1;
					//PrintBold(s:"Ambient ",f:musicvolume);
					if(laststate == 1)
					{
						trigger = 0;
						musicvolume -= 0.01;
					}
					if(musicvolume < 0.0 || trigger == 1)
					{
						trigger = 1;
						if(musicvolume < targetmusicvolume)
							musicvolume += 0.01;
						else
						{
							musicvolume = targetmusicvolume;
							swaptofight = 0;
							swaptoambient = 0;
							swapped = 0;
						}
							
						if(laststate == 1)
							LocalSetMusic(PainkillerMusic[themeseed][0][songseed],0);
						laststate = 0;
					}
				}
				else
				{
					SetMusicVolume(targetmusicvolume);
					LocalSetMusic(PainkillerMusic[themeseed][0][songseed],0);
				}
			}
		}
		else
		{
			if(!CheckWeapon("Painkiller_DemonMorph") && !CheckInventory("Painkiller_GoldActive"))
			{
				if(CheckInventory("Painkiller_CombatMusic"))
				{
					TakeInventory("Painkiller_AmbientMusic",65536);
					GiveInventory("Painkiller_CombatMusic",1);
					LocalSetMusic(PainkillerMusic[themeseed][1][songseed],0);
				}
				else if(!CheckInventory("Painkiller_AmbientMusic"))
				{
					GiveInventory("Painkiller_AmbientMusic",1);
					LocalSetMusic(PainkillerMusic[themeseed][0][songseed],0);
				}
			}
		}
		
		Delay(1);
	}
    SetInventory("SamsaraHeroMusicPainkillerActive", 0);
	TakeInventory("Painkiller_CombatMusic",1);
	TakeInventory("Painkiller_AmbientMusic",1);
}

Script "SamsaraOST_DeusExScriptedMusic" (void)
{
	int musicvolume = 1.0;
	int themeseed = random(0,thememaxdx-1);
	int songseed = random(0,songseedmaxdx -1);
	int targetmusicvolume = musicvolume;
	int swapped, swaptofight, swaptoambient;
	int laststate = 0;
	int trigger = 1;
	int gameoverride = CheckInventory("SamsaraHeroMusicGame") - 1;

	while (gameoverride == 37)
	{
        gameoverride = CheckInventory("SamsaraHeroMusicGame") - 1;

        if (gameoverride != 37) { break; }

        if (CheckInventory("SamsaraHeroMusicSelectingNextTrack"))
        {
            LocalSetMusic("");

	        themeseed = random(0,thememaxdx-1);
	        songseed = random(0,songseedmaxdx -1);
        }

        SetInventory("SamsaraHeroMusicDeusExActive", 1);

		int newtid = UniqueTid();
		SpawnSpotFacingForced("DeusEx_MusicDecider",0,newtid);
		SetPointerExt(AAPTR_TRACER,0,newtid);
		Thing_ChangeTid(newtid,0);

		if(GetCvar("sams_runninginzdoom"))
		{
			SetMusicVolume(musicvolume);
			if(CheckInventory("DeusEx_CombatMusic") || swaptofight == 1)
			{
				if(CheckInventory("DeusEx_CombatMusic") != swapped || swaptofight == 1)
				{
					swaptofight = 1;
					//PrintBold(s:"Combat ",f:musicvolume);
					if(laststate == 0)
					{
						trigger = 0;
						musicvolume -= 0.01;
					}
					if(musicvolume < 0.0 || trigger == 1)
					{
						trigger = 1;
						if(musicvolume < targetmusicvolume)
							musicvolume += 0.01;
						else
						{
							musicvolume = targetmusicvolume;
							swaptofight = 0;
							swaptoambient = 0;
							swapped = 1;
						}
							
						if(laststate == 0)
							LocalSetMusic(DeusExMusic[themeseed][1][songseed],0);
						laststate = 1;
					}
				}
				else
				{
					SetMusicVolume(targetmusicvolume);
					LocalSetMusic(DeusExMusic[themeseed][1][songseed],0);
				}
			}
			else if(CheckInventory("DeusEx_CombatMusic") == 0 || swaptoambient == 1)
			{
				if(CheckInventory("DeusEx_CombatMusic") != swapped || swaptoambient == 1)
				{
					swaptoambient = 1;
					//PrintBold(s:"Ambient ",f:musicvolume);
					if(laststate == 1)
					{
						trigger = 0;
						musicvolume -= 0.01;
					}
					if(musicvolume < 0.0 || trigger == 1)
					{
						trigger = 1;
						if(musicvolume < targetmusicvolume)
							musicvolume += 0.01;
						else
						{
							musicvolume = targetmusicvolume;
							swaptofight = 0;
							swaptoambient = 0;
							swapped = 0;
						}
							
						if(laststate == 1)
							LocalSetMusic(DeusExMusic[themeseed][0][songseed],0);
						laststate = 0;
					}
				}
				else
				{
					SetMusicVolume(targetmusicvolume);
					LocalSetMusic(DeusExMusic[themeseed][0][songseed],0);
				}
			}
		}
		else
		{
			if(!CheckWeapon("Painkiller_DemonMorph") && !CheckInventory("Painkiller_GoldActive"))
			{
				if(CheckInventory("DeusEx_CombatMusic"))
					LocalSetMusic(DeusExMusic[themeseed][1][songseed],0);
				else
					LocalSetMusic(DeusExMusic[themeseed][0][songseed],0);
			}
		}
		
		Delay(1);
	}
    SetInventory("SamsaraHeroMusicDeusExActive", 0);
    SetInventory("DeusEx_CombatMusic", 0);
}

script "SamsaraOST_NextSong" (void) NET
{
    int pln = PlayerNumber();

    if (PlayerIsSpectator(pln) > 0)
    {
        ACS_NamedExecuteWithResult("SamsaraOST_NextSong_Message", 0);
        terminate;
    } else if (GetUserCVar(pln, "samsara_cl_heromusic") <= 0) {
        ACS_NamedExecuteWithResult("SamsaraOST_NextSong_Message", 1);
        terminate;
    }

    SetInventory("SamsaraHeroMusicSelectingNextTrack", 1);
}

script "SamsaraOST_NextSong_Message" (int message) CLIENTSIDE
{
    int pln = PlayerNumber(); // ensure only the activator gets the messages
    int cpln = ConsolePlayerNumber();

    if (pln == cpln)
    {
        switch (message)
        {
            case 0:
                Log(s:"This cannot be used while spectating.");
                break;

            default:
                Log(s:"This can only be used with Hero Music enabled.");
                break;
        }
    }
}

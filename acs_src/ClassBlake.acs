script "SamsaraBStoneAmmoRefillFailMessage" (int messagetype) CLIENTSIDE
{
    str messagename = "Placeholder";

    switch (messagetype)
    {
      case 0:
        messagename = "BSTONE_AMMOREFILL_INCOMPATIBLE";
        break;

      case 1:
        messagename = "BSTONE_AMMOREFILL_AMMOFULL";
        break;

      default:
        terminate;
    }

    SetHudSize(320, 240, 0);
    HudMessage(l:messagename; 0, 578, CR_LIGHTBLUE, 160.0, 200.0, 1.0);
}

script "SamsaraBStoneAmmoRefill" (int ammotype)
{
    str ammoname = "Placeholder";
    int ammoamount = 0;

    int maxClip = GetCVar("samsara_max_clip");
    int maxShell = GetCVar("samsara_max_shell");
    int maxRocket = GetCVar("samsara_max_rockets");
    int maxCell = GetCVar("samsara_max_cell");
    int hasBackPack = 1 + (CheckInventory("Backpack") || CheckInventory("BagOfHolding") || CheckInventory("AmmoSatchel") || CheckInventory("Zorchpack"));

    if (maxClip < 0) { maxClip = 0; }
    if (maxShell < 0) { maxShell = 0; }
    if (maxRocket < 0) { maxRocket = 0; }
    if (maxCell < 0) { maxCell = 0; }

    int increasingClip = 0;
    int increasingShell = 0;
    int increasingRockets = 0;
    int increasingCell = 0;
    int increasingPerc = GetCVar("samsara_increasingammopercent");
    int increasingLimit = GetCVar("samsara_increasingammolimit");

    if (GetCVar("samsara_increasingammo") && increasingPerc > 0 && increasingLimit != 0)
    {
        int backPacks = max(0, CheckInventory("SamsaraBackpacksInInventory") - 1);

        if (backPacks > increasingLimit && increasingLimit >= 1) { backPacks = increasingLimit; }

        increasingClip = (maxClip * (increasingPerc * backPacks) / 100);
        increasingShell = (maxShell * (increasingPerc * backPacks) / 100);
        increasingRockets = (maxRocket * (increasingPerc * backPacks) / 100);
        increasingCell = (maxCell * (increasingPerc * backPacks) / 100);
    }

    switch (ammotype)
    {
      case 0:
        ammoname = "Clip";
        ammoamount = ((maxClip * hasBackPack) + increasingClip) / 4;
        break;

      case 1:
        ammoname = "Shell";
        ammoamount = ((maxShell * hasBackPack) + increasingShell) / 4;
        break;

      case 2:
        ammoname = "RocketAmmo";
        ammoamount = ((maxRocket * hasBackPack) + increasingRockets) / 4;
        break;

      case 3:
        ammoname = "Cell";
        ammoamount = ((maxCell * hasBackPack) + increasingCell) / 4;
        break;

      default:
        terminate;
    }

    SetInventory(ammoname, CheckInventory(ammoname) + ammoamount);
}

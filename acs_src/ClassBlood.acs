#define MAX_BLOOD_ANGLE        2047
#define BLOOD_ANGLE_TO_DEGREES 0.17578125

Script "CalebLoop" (void)
{
	while (CheckInventory("CalebClass"))
	{
		if (ClassifyActor(0) & ACTOR_Alive)
		{
			GiveInventory("BeastVisionController",1);
		}

		Delay(1);
	}
}

Script "CalebUnique" (void) //599
{
	int u = ActivatorTID();
	SetActivatorToTarget(0);
	Thing_ChangeTID(u, CheckInventory("Voodoo")/2+1);
}

script "CalebTauntCooldown" (void) //600
{
	while (CheckInventory("CalebTauntCooldown") > 0)
	{
		Delay(35);
		TakeInventory("CalebTauntCooldown", 1);
	}
}

Script "CalebBallGag" (int type) NET //601
{
	if(CheckInventory("CalebBallgag"))
	{
		TakeInventory("CalebBallgag", 1);
		Print(s:"Ballgag Off");
	}
	else
	{
		GiveInventory("CalebBallGag", 1);
		Print(s:"Ballgag On");
	}
}

Script "Caleb602" (void) //602
{
	if(CheckInventory("TeslaCounterX") > 7)
	{
		TakeInventory("TeslaCounterX", 24);
	}
}

Script "CalebLifeLeech" (void) //603
{
	int LifeLeechAmmo = CheckInventory("Cell");

	if(CheckWeapon("LifeLeech") && !GetCVar("sv_infiniteammo"))
	{
		if(LifeLeechAmmo >= 1)
		{
			TakeInventory("Cell", 2);
		}
		else
			Thing_Damage2(0, 1, "Suicide");
	}
}

Script "CalebCoopCheck" (void) //604
{
	SetResultValue(isCoop());
}

Script "CalebDeathmatchCheck" (void) //604
{
	SetResultValue(isDeathMatch());
}

Script "FlareGunPitch" (void)
{
	SetActivator(0, AAPTR_Target);
	int angle = GetActorPitch(0);
	SetResultValue(angle);
}

Script "Caleb_BurningManVoice" (int mode)
{
	str painsound, deathsound;
	int oldTID, master;
	int speed;
	oldTID = ActivatorTID();
	master = UniqueTID();
	Thing_ChangeTID(0, master);
	SetActivator(0, AAPTR_Master);

	if(GetCvar("samsara_CrashDebugger") == true)
	{
		Log(s:"Debugger: Burning Enemy: ", s:GetActorClass(0));
	}

	Switch(mode)
	{
		case 1:
			speed = GetActorProperty(0, APROP_Speed);

			painsound = GetActorProperty(0, APROP_PainSound);
			deathsound = GetActorProperty(0, APROP_DeathSound);
			SetActivator(master);

			if(painsound != "")
				SetActorProperty(0, APROP_PainSound, painsound);

			if(deathsound != "")
				SetActorProperty(0, APROP_DeathSound, deathsound);

			if(GetCvar("samsara_CrashDebugger") == true)
			{
				Log(s:"Debugger: Pass");
			}

			SetActorProperty(0, APROP_Speed, speed/2);
			break;

		case 2:
			speed = GetActorProperty(0, APROP_Speed);

			deathsound = GetActorProperty(0, APROP_DeathSound);
			SetActivator(master);

			if(deathsound != "")
				SetActorProperty(0, APROP_DeathSound, deathsound);

			if(GetCvar("samsara_CrashDebugger") == true)
			{
				Log(s:"Debugger: Pass");
			}

			SetActorProperty(0, APROP_Speed, speed/2);
			break;
	}
}

Script "BurningManSpeed" (void) // will just have to wait until 4.0 before you can use a_setspeed I guess
{
	SetActorProperty(0, APROP_Speed, 7 << 16);
}

Script "CalebAkimboCooldown" (void)
{
	if(CheckInventory("BloodGunsAkimboCooldown")) { GiveInventory("BloodGunsAkimboCooldown",120); terminate; }
	GiveInventory("BloodGunsAkimboCooldown",120);

	while(1)
	{
		if(CheckInventory("BloodGunsAkimboCooldown") > 0 && !GetCvar("samsara_permakimbo"))
		{
			GiveInventory("GunsAkimboP",1);
			TakeInventory("BloodGunsAkimboCooldown",1);
		}
		else if(CheckInventory("BloodGunsAkimboCooldown") == 0) { TakeInventory("GunsAkimboP",1); terminate; }
		delay(35);
	}
}

Script "CalebRetrieveLifeLeech" (void)
{
	int isAlive = ClassifyActor(0) & ACTOR_Alive;
	int lifeLeechTid = ActivatorTID();

	SetActivator(0,AAPTR_Master);

	if (CheckInventory("CalebClass") && isAlive)
	{
		GiveInventory("LifeLeech", 1);
		SetActorState(lifeLeechTid,"Death",1);
		GiveInventory("GotWeapon7",1);
	}
}

Script "CalebLifeLeechTurretMarkForDeath" (void)
{
	if (CheckInventory("LifeLeechMarkedForDeath"))
		terminate;

	int lifeLeechTid = ActivatorTID();

	SetActivator(0,AAPTR_Master);

	while (!(ClassifyActor(0) & ACTOR_Alive))
	{
		SetActivator(lifeLeechTid,AAPTR_Default);
		GiveInventory("LifeLeechMarkedForDeath",1);
		Delay(175);
		SetActorState(0,"Death",1);
	}
}

Script "CalebAltSpreadAngle" (void)
{
	int angle = -1 * ((8 * CheckInventory("CalebAltSpreadCounter") - 56) % MAX_BLOOD_ANGLE * BLOOD_ANGLE_TO_DEGREES);

	SetResultValue(angle);
}

Script "CalebFlamethrowerStrength" (void)
{
	SetActivator(0,AAPTR_Target);
	int power = CheckInventory("ThrowPower");
	TakeInventory("ThrowPower",65536);
	SetResultValue(power);
}

Script "CalebFlamethrowerDamage" (void)
{
	ACS_NamedExecuteWithResult("CalebBurner",1,5);
	Thing_Damage2(0,5,"CalebFire");
}

Script "CalebBurner" (int notracer, int extraburn)
{
	if(!notracer) SetActivator(0,AAPTR_TRACER);
	int height = GetActorProperty(0,APROP_Height);
	int radius = GetActorProperty(0,APROP_Radius);
	int flameCount = 0;
	
	if((ClassifyActor(0) & ACTOR_PLAYER) && CheckInventory("BloodBurnVFXHudFlames") == 0)
		ACS_NamedExecuteWithResult("CalebBurningHud");
		
	GiveInventory("BloodBurnVFXHudFlames",1+extraburn);
	
	while(GetActorProperty(0,APROP_Health) > 0 && flameCount <= 14)
	{
		flameCount++;
		Spawn("BloodBurnVFX",GetActorX(0)+random(-radius,radius),GetActorY(0)+random(-radius,radius),GetActorZ(0)+random(0,height));
		Delay(1);
	}
	
	TakeInventory("BloodBurnVFXHudFlames",1+extraburn);
}

Script "CalebBurningHud" (void) clientside
{
	str flameGraphic = "";
	int flameCount = 0;
	int graphicCounter = 0;
	int id = 0;
	SetHudSize(320,200,1);
	
	while(ClassifyActor(0) & ACTOR_PLAYER)
	{
		graphicCounter = (flameCount/2);
		if(graphicCounter > 13) graphicCounter -= 14;
		flameGraphic = strparam(s:"BF01",c:65+flameCount,d:0);
		SetFont(flameGraphic);
		for(id = 0; id < 12; id++) HudMessage(s:"a";HUDMSG_LAYER_UNDERHUD|HUDMSG_NOTWITHFULLMAP|HUDMSG_PLAIN,32750+id,CR_UNTRANSLATED,0.1+(id*56.0)-224.0,280.2-(8.0*abs((id-6)/2))-((CheckInventory("BloodBurnVFXHudFlames"))*2.0),0.0);
		Delay(1);
		flameCount++;
		if(CheckInventory("BloodBurnVFXHudFlames") < 1) break;
	}
	RemoveMessages(32750,32751);
}

Script "CalebTeslaSwitch" (void)
{
	if(ClassifyActor(0) & ACTOR_DEAD) terminate;
	int scaleX = GetActorProperty(0,APROP_ScaleX);
	int scaleY = GetActorProperty(0,APROP_ScaleY);
	int totalScale = (scaleX + scaleY) / 2; //We want the average, not the magnitude
	SetActorState(0,strparam(s:"CalebTesla",d:(((1.0-totalScale))/3275)+6),true);
}

Script "CalebTeslaBlink" (void)
{
	Thing_Stop(0);
	if((timer()%4) < 2) ACS_NamedExecuteWithResult("CalebTeslaTurnOffBrightness");
	SetResultValue((timer()%4) < 2);
}

Script "CalebTeslaBlinkNonHumanoid" (void)
{
	int stunTimer;
	int renderStyle = GetActorProperty(0,APROP_RenderStyle);
	SetActorProperty(0,APROP_Renderstyle,STYLE_STENCIL);
	while((ClassifyActor(0) & ACTOR_ALIVE) && stunTimer < 24)
	{
		switch(stunTimer%6)
		{
			case 0: SetActorProperty(0,APROP_StencilColor,0x2F324A); break;
			case 1: SetActorProperty(0,APROP_StencilColor,0x62677F); break;
			case 2: SetActorProperty(0,APROP_StencilColor,0x7784A8); break;
			case 3: SetActorProperty(0,APROP_StencilColor,0x62677F); break;
			case 4: SetActorProperty(0,APROP_StencilColor,0x2F324A); break;
			case 5: SetActorProperty(0,APROP_StencilColor,0x000000); break;
		}
		Thing_Stop(0);
		Delay(2);
		stunTimer++;
	}
	SetActorProperty(0,APROP_RenderStyle,renderStyle);
	GiveInventory("BloodTurnOffTeslaBrightness",1);
	
}

//In case a monster dies, ya know
Script "CalebTeslaTurnOffBrightness" (void)
{
	Delay(2);
	if(ClassifyActor(0) > 1) GiveInventory("BloodTurnOffTeslaBrightness",1);
}
actor Ranger_NailSelected : Boolean { Inventory.InterHubAmount 0 }
actor SamsaraQuakeNailgunSide : Boolean {}
actor SamsaraQuakeNailgunFrame : Counter { Inventory.MaxAmount 7 }

// Normal nails

actor "Nailgun" : SamsaraQuakeWeapon
{
    Inventory.PickupMessage "You got the Nailgun."
    Weapon.SlotPriority 0
    Weapon.SelectionOrder 5
    Weapon.Kickback 100
    Weapon.AmmoType "Clip"
    Weapon.AmmoGive 30
    Weapon.AmmoUse 1
    Obituary "$SAMSARA_RANGER_OB_SLOT4_1"
    Tag "Nailgun (Normal Nails)"
    States
    {
      Spawn:
        QNLG Z -1
        stop

      Ready:
        QNLG A 0 A_JumpIfInventory("Nailgun DOE",1,2)
        QNLG A 1 A_WeaponReady(WRF_NOSECONDARY)
        loop
        QNLG A 1 A_WeaponReady
        loop

      Select:
        TNT1 A 0 A_TakeInventory("Ranger_AxeSelected")
        TNT1 A 0 A_TakeInventory("Ranger_GunSelected")
        TNT1 A 0 A_TakeInventory("Ranger_ExplosiveSelected")
        TNT1 A 0 A_GiveInventory("Ranger_NailSelected")
        TNT1 A 0 A_TakeInventory("Ranger_PlasmaSelected")
        goto Super::Select

      Fire:
        QNLG C 0 A_TakeInventory("SamsaraQuakeNailgunSide")
        QNLG C 0 A_TakeInventory("SamsaraQuakeNailgunFrame")
      FireSideCheck:
        QNLG C 0 A_JumpIfInventory("SamsaraQuakeNailgunSide",1,"FireLeft")
        goto FireRight

      FireRight:
        QNLG C 0 A_GiveInventory("SamsaraQuakeWeaponAlert")
        QNLG C 0 A_GunFlash
        QNLG C 0 A_GiveInventory("SamsaraQuakeNailgunNormalAttackHandler")
        QNLG C 0 A_JumpIfInventory("SamsaraUsingSmoothAnims",1,"FireRightSmoothIncrement")
      FireRightVanilla:
        QNLG C 0 A_JumpIfInventory("SamsaraQuakeNailgunFrame",6,"FireRightVanillaFrame7")
        QNLG C 0 A_JumpIfInventory("SamsaraQuakeNailgunFrame",4,"FireRightVanillaFrame5")
        QNLG C 0 A_JumpIfInventory("SamsaraQuakeNailgunFrame",2,"FireRightVanillaFrame3")
      FireRightVanillaFrame1:
        QNLG C 0 A_GiveInventory("SamsaraQuakeNailgunFrame")
        QNLG C 4 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireRightVanillaFrame3:
      FireRightVanillaFrame5:
        QNLG B 0 A_GiveInventory("SamsaraQuakeNailgunFrame")
        QNLG B 4 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireRightVanillaFrame7:
        QNLG C 0 A_GiveInventory("SamsaraQuakeNailgunFrame")
        QNLG C 4 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireRightSmoothIncrement:
        QNLG B 0 A_JumpIfInventory("SamsaraQuakeNailgunFrame",0,2)
        QNLG B 0 A_GiveInventory("SamsaraQuakeNailgunFrame")
        goto FireRightSmooth
        QNLG B 0 A_TakeInventory("SamsaraQuakeNailgunFrame")
        goto FireRightSmooth

      FireRightSmooth:
        QNLG B 0 A_JumpIfInventory("SamsaraHasDoubleFiringSpeed",1,"FireRightSmoothRage")
        QNLG BC 1 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        QNLG A 2 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireRightSmoothRage:
        QNLG BA 2 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireLeft:
        QNLG D 0 A_GiveInventory("SamsaraQuakeWeaponAlert")
        QNLG D 0 A_GunFlash
        QNLG D 0 A_GiveInventory("SamsaraQuakeNailgunNormalAttackHandler")
        QNLG D 0 A_JumpIfInventory("SamsaraUsingSmoothAnims",1,"FireLeftSmoothIncrement")
      FireLeftVanilla:
        QNLG D 0 A_JumpIfInventory("SamsaraQuakeNailgunFrame",0,"FireLeftVanillaFrame8")
        QNLG D 0 A_JumpIfInventory("SamsaraQuakeNailgunFrame",5,"FireLeftVanillaFrame6")
        QNLG D 0 A_JumpIfInventory("SamsaraQuakeNailgunFrame",3,"FireLeftVanillaFrame4")
      FireLeftVanillaFrame2:
      FireLeftVanillaFrame4:
      FireLeftVanillaFrame6:
        QNLG D 0 A_GiveInventory("SamsaraQuakeNailgunFrame")
        QNLG D 0 A_JumpIfInventory("SamsaraHasDoubleFiringSpeed",1,2)
        QNLG D 3 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish
        QNLG D 2 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireLeftVanillaFrame8:
        QNLG E 0 A_TakeInventory("SamsaraQuakeNailgunFrame")
        QNLG E 0 A_JumpIfInventory("SamsaraHasDoubleFiringSpeed",1,2)
        QNLG E 3 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish
        QNLG E 2 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireLeftSmoothIncrement:
        QNLG D 0 A_JumpIfInventory("SamsaraQuakeNailgunFrame",0,2)
        QNLG D 0 A_GiveInventory("SamsaraQuakeNailgunFrame")
        goto FireLeftSmooth
        QNLG D 0 A_TakeInventory("SamsaraQuakeNailgunFrame")
        goto FireLeftSmooth

      FireLeftSmooth:
        QNLG D 0 A_JumpIfInventory("SamsaraHasDoubleFiringSpeed",1,"FireLeftSmoothRage")
        QNLG DEA 1 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireLeftSmoothRage:
        QNLG D 2 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireFinish:
        QNLG A 0 A_ReFire("FireSideCheck")
        goto Ready

      Flash:
        TNT1 A 2 A_Light2
        goto LightDone

	  AltFire:
        QNLG A 8 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        TNT1 A 0 A_SelectWeapon("Nailgun DOE")
        goto Deselect
    }
}

actor SamsaraQuakeNailgunNormalAttackHandler : Trigger // this is also used for the super nailgun
{
    States
    {
      // Ammo checking/taking stuff
      Pickup:
      PickupNG:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupPlaySoundNG")
        TNT1 A 0 A_JumpIfInventory("Clip",1,1)
        stop
        TNT1 A 0 A_TakeInventory("Clip",1)
        goto PickupPlaySoundNG

      // Sound stuff
      PickupPlaySoundNG:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",2,"PickupPlaySoundNGDMC")
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupPlaySoundNGRerelease")
      // Original sounds
      PickupPlaySoundNGOriginal:
        TNT1 A 0 A_PlaySound("quakeweps/nailgunfire",CHAN_WEAPON)
        goto PickupAttackNG

      // Rerelease sounds
      PickupPlaySoundNGRerelease:
        TNT1 A 0 A_PlaySound("quakeweps/rerelease/nailgunfire",CHAN_WEAPON)
        goto PickupAttackNG

      // Deathmatch Classic sounds
      PickupPlaySoundNGDMC:
        TNT1 A 0 A_PlaySound("quakeweps/dmc/nailgunfire",CHAN_WEAPON)
        goto PickupAttackNG

      // Attack stuff
      PickupAttackNG:
        TNT1 A 0 A_JumpIfInventory("SamsaraQuakeNailgunSide",1,"PickupAttackNGLeft")
      // Right
      PickupAttackNGRight:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",2,"PickupAttackNGRightDMC")
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupAttackNGRightRerelease")
      // Original sounds
      PickupAttackNGRightOriginal:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackNGRightOriginalCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackNGRightOriginalCoop")
      PickupAttackNGRightOriginalDM:
        TNT1 A 0 A_FireCustomMissile("QuakeNail",0,false,3)
        goto PickupFinishNGRight

      PickupAttackNGRightOriginalCoop:
        TNT1 A 0 A_FireCustomMissile("QuakeNailCoop",0,false,3)
        goto PickupFinishNGRight

      // Rerelease sounds
      PickupAttackNGRightRerelease:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackNGRightRereleaseCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackNGRightRereleaseCoop")
      PickupAttackNGRightRereleaseDM:
        TNT1 A 0 A_FireCustomMissile("QuakeNailSoundRerelease",0,false,3)
        goto PickupFinishNGRight

      PickupAttackNGRightRereleaseCoop:
        TNT1 A 0 A_FireCustomMissile("QuakeNailCoopSoundRerelease",0,false,3)
        goto PickupFinishNGRight

      // Deathmatch Classic sounds
      PickupAttackNGRightDMC:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackNGRightDMCCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackNGRightDMCCoop")
      PickupAttackNGRightDMCDM:
        TNT1 A 0 A_FireCustomMissile("QuakeNailSoundDMC",0,false,3)
        goto PickupFinishNGRight

      PickupAttackNGRightDMCCoop:
        TNT1 A 0 A_FireCustomMissile("QuakeNailCoopSoundDMC",0,false,3)
        goto PickupFinishNGRight

      // Left
      PickupAttackNGLeft:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",2,"PickupAttackNGLeftDMC")
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupAttackNGLeftRerelease")
      // Original sounds
      PickupAttackNGLeftOriginal:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackNGLeftOriginalCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackNGLeftOriginalCoop")
      PickupAttackNGLeftOriginalDM:
        TNT1 A 0 A_FireCustomMissile("QuakeNail",0,false,-3)
        goto PickupFinishNGLeft

      PickupAttackNGLeftOriginalCoop:
        TNT1 A 0 A_FireCustomMissile("QuakeNailCoop",0,false,-3)
        goto PickupFinishNGLeft

      // Rerelease sounds
      PickupAttackNGLeftRerelease:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackNGLeftRereleaseCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackNGLeftRereleaseCoop")
      PickupAttackNGLeftRereleaseDM:
        TNT1 A 0 A_FireCustomMissile("QuakeNailSoundRerelease",0,false,-3)
        goto PickupFinishNGLeft

      PickupAttackNGLeftRereleaseCoop:
        TNT1 A 0 A_FireCustomMissile("QuakeNailCoopSoundRerelease",0,false,-3)
        goto PickupFinishNGLeft

      // Deathmatch Classic sounds
      PickupAttackNGLeftDMC:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackNGLeftDMCCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackNGLeftDMCCoop")
      PickupAttackNGLeftDMCDM:
        TNT1 A 0 A_FireCustomMissile("QuakeNailSoundDMC",0,false,-3)
        goto PickupFinishNGLeft

      PickupAttackNGLeftDMCCoop:
        TNT1 A 0 A_FireCustomMissile("QuakeNailCoopSoundDMC",0,false,-3)
        goto PickupFinishNGLeft

      // Finishing stuff
      // Right
      PickupFinishNGRight:
        TNT1 A 0 A_GiveInventory("SamsaraQuakeNailgunSide")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasDoubleFiringSpeed",1,2)
        TNT1 A 0 ACS_NamedExecuteAlways("SamsaraRecoil", 0, -33, 1, 3)
        stop
        TNT1 A 0 ACS_NamedExecuteAlways("SamsaraRecoil", 0, -73, 0, 2)
        stop

      // Left
      PickupFinishNGLeft:
        TNT1 A 0 A_TakeInventory("SamsaraQuakeNailgunSide")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasDoubleFiringSpeed",1,2)
        TNT1 A 0 ACS_NamedExecuteAlways("SamsaraRecoil", 0, -33, 1, 2)
        stop
        TNT1 A 0 ACS_NamedExecuteAlways("SamsaraRecoil", 0, -33, 0, 1)
        stop
    }
}

actor QNTrail1
{
    Speed 54
    Projectile
    +CLIENTSIDEONLY
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 ACS_NamedExecuteAlways("QuakeParticle", 0, 1, 38, 88)
        goto SpawnLoop

      SpawnLoop:
        TNT1 A 1 A_SpawnItemEx("QuakeNailTrail", 0,0,0, random(-3,3)/10.0,random(-3,3)/10.0,random(-3, 3)/10.0)
        loop

    }
}

actor QNTrail2: QNTrail1
{
    Speed 37
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 ACS_NamedExecuteAlways("QuakeParticle", 0, 2, 02, 7)
        goto SpawnLoop
    }
}

actor QNTrail3: QNTrail1
{
    Speed 18
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 ACS_NamedExecuteAlways("QuakeParticle", 0, 4, 16, 66)
        goto SpawnLoop
    }
}

actor QuakeNail: FastProjectile
{
    Radius 1
    Height 2
    Speed 75
	DamageType "QuakeNail"
    Projectile
    Damage (9)
    +BLOODSPLATTER
    +THRUGHOST
	+NOEXTREMEDEATH
	Scale 1.5
    //Decal BulletChip
    States
    {
      Spawn:
        QKNL A 0
        goto SpawnLoop

      SpawnLoop:
        QKNL A 1 Bright //A_SpawnItemEx("QuakeNailTrail", 0,0,0, random(-3,3)/10.0,random(-3,3)/10.0,random(-3, 3)/10.0)
        loop

      XDeath:
        TNT1 A 1
        stop

      Crash:
      Death:
        TNT1 A 1 A_PlaySound("quakeweps/nailricochet",CHAN_VOICE)
      DeathFinish:
        TNT1 AAAAA 0 A_SpawnItemEx("QuakeBulletPuff2",random(-5,5),random(-5,5),random(-5,-5),0,0,random(-10,1)/10)
        TNT1 AAAAAAAAAA 0 A_SpawnItemEx("QuakeBulletPuff3",random(-5,5),random(-5,5),random(-5,5),0,0,random(-10,1)/10)
        TNT1 AAAAA 0 A_SpawnItemEx("QuakeBulletPuff4",random(-5,5),random(-5,5),random(-5,5),0,0,random(-10,1)/10)
        stop
    }
}

actor QuakeNailCoop: QuakeNail
{
    +THRUSPECIES
    Species "Player"
    Damage (10)
}

actor QuakeNailSoundRerelease : QuakeNail
{
    States
    {
      Crash:
      Death:
        TNT1 A 1 A_PlaySound("quakeweps/rerelease/nailricochet",CHAN_VOICE)
        goto DeathFinish
    }
}

actor QuakeNailCoopSoundRerelease : QuakeNailSoundRerelease
{
    +THRUSPECIES
    Species "Player"
    Damage (10)
}

actor QuakeNailSoundDMC : QuakeNail
{
    States
    {
      Crash:
      Death:
        TNT1 A 1 A_PlaySound("quakeweps/dmc/nailricochet",CHAN_VOICE)
        goto DeathFinish
    }
}

actor QuakeNailCoopSoundDMC : QuakeNailSoundDMC
{
    +THRUSPECIES
    Species "Player"
    Damage (10)
}

actor NailBounce
{
    +CLIENTSIDEONLY
    +NOCLIP
    ReactionTime 24
    States
    {
      Spawn:
        TNT1 A 0 A_Countdown
        TNT1 A 1 A_SpawnItemEx("QuakeNailTrail2")
        loop
    }
}

actor QuakeNailTrail: DoomBulletPuff
{
    Alpha 0.1
    Scale 0.5
    +CLIENTSIDEONLY
    +NOINTERACTION
}

actor QuakeNailTrail2: BulletPuff
{
    Alpha 0.5
    Scale 0.5
    +CLIENTSIDEONLY
    +NOINTERACTION
    States
    {
      Spawn:
        DPUF A 2
        DPUF A 2 A_FadeOut(0.4)
        DPUF BCD 4
        stop
    }
}

// Lava nails

actor "Nailgun DOE" : "Nailgun"
{
    Weapon.SlotPriority 1
    Weapon.AmmoType "LavaNails"
    Weapon.AmmoGive 0
    Tag "Nailgun (Lava Nails)"
    States
    {
      Ready:
        QLNG A 0 A_JumpIfInventory("Nailgun",1,2)
        QLNG A 1 A_WeaponReady(WRF_NOSECONDARY)
        loop
        QLNG A 1 A_WeaponReady
        loop

      Fire:
        QLNG C 0 A_TakeInventory("SamsaraQuakeNailgunSide")
        QLNG C 0 A_TakeInventory("SamsaraQuakeNailgunFrame")
      FireSideCheck:
        QLNG C 0 A_JumpIfInventory("SamsaraQuakeNailgunSide",1,"FireLeft")
        goto FireRight

      FireRight:
        QLNG C 0 A_GiveInventory("SamsaraQuakeWeaponAlert")
        QLNG C 0 A_GunFlash
        QLNG C 0 A_GiveInventory("SamsaraQuakeNailgunLavaAttackHandler")
        QLNG C 0 A_JumpIfInventory("SamsaraUsingSmoothAnims",1,"FireRightSmoothIncrement")
      FireRightVanilla:
        QLNG C 0 A_JumpIfInventory("SamsaraQuakeNailgunFrame",6,"FireRightVanillaFrame7")
        QLNG C 0 A_JumpIfInventory("SamsaraQuakeNailgunFrame",4,"FireRightVanillaFrame5")
        QLNG C 0 A_JumpIfInventory("SamsaraQuakeNailgunFrame",2,"FireRightVanillaFrame3")
      FireRightVanillaFrame1:
        QLNG C 0 A_GiveInventory("SamsaraQuakeNailgunFrame")
        QLNG C 4 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireRightVanillaFrame3:
      FireRightVanillaFrame5:
        QLNG B 0 A_GiveInventory("SamsaraQuakeNailgunFrame")
        QLNG B 4 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireRightVanillaFrame7:
        QLNG C 0 A_GiveInventory("SamsaraQuakeNailgunFrame")
        QLNG C 4 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireRightSmoothIncrement:
        QLNG B 0 A_JumpIfInventory("SamsaraQuakeNailgunFrame",0,2)
        QLNG B 0 A_GiveInventory("SamsaraQuakeNailgunFrame")
        goto FireRightSmooth
        QLNG B 0 A_TakeInventory("SamsaraQuakeNailgunFrame")
        goto FireRightSmooth

      FireRightSmooth:
        QLNG B 0 A_JumpIfInventory("SamsaraHasDoubleFiringSpeed",1,"FireRightSmoothRage")
        QLNG BC 1 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        QLNG A 2 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireRightSmoothRage:
        QLNG BA 2 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireLeft:
        QLNG D 0 A_GiveInventory("SamsaraQuakeWeaponAlert")
        QLNG D 0 A_GunFlash
        QLNG D 0 A_GiveInventory("SamsaraQuakeNailgunLavaAttackHandler")
        QLNG D 0 A_JumpIfInventory("SamsaraUsingSmoothAnims",1,"FireLeftSmoothIncrement")
      FireLeftVanilla:
        QLNG D 0 A_JumpIfInventory("SamsaraQuakeNailgunFrame",0,"FireLeftVanillaFrame8")
        QLNG D 0 A_JumpIfInventory("SamsaraQuakeNailgunFrame",5,"FireLeftVanillaFrame6")
        QLNG D 0 A_JumpIfInventory("SamsaraQuakeNailgunFrame",3,"FireLeftVanillaFrame4")
      FireLeftVanillaFrame2:
      FireLeftVanillaFrame4:
      FireLeftVanillaFrame6:
        QLNG D 0 A_GiveInventory("SamsaraQuakeNailgunFrame")
        QLNG D 0 A_JumpIfInventory("SamsaraHasDoubleFiringSpeed",1,2)
        QLNG D 3 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish
        QLNG D 2 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireLeftVanillaFrame8:
        QLNG E 0 A_TakeInventory("SamsaraQuakeNailgunFrame")
        QLNG E 0 A_JumpIfInventory("SamsaraHasDoubleFiringSpeed",1,2)
        QLNG E 3 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish
        QLNG E 2 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireLeftSmoothIncrement:
        QLNG D 0 A_JumpIfInventory("SamsaraQuakeNailgunFrame",0,2)
        QLNG D 0 A_GiveInventory("SamsaraQuakeNailgunFrame")
        goto FireLeftSmooth
        QLNG D 0 A_TakeInventory("SamsaraQuakeNailgunFrame")
        goto FireLeftSmooth

      FireLeftSmooth:
        QLNG D 0 A_JumpIfInventory("SamsaraHasDoubleFiringSpeed",1,"FireLeftSmoothRage")
        QLNG DEA 1 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireLeftSmoothRage:
        QLNG D 2 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireFinish:
        QLNG A 0 A_ReFire("FireSideCheck")
        QLNG A 0 A_GiveInventory("SamsaraQuakeDOELavaEndSoundPlayer")
        goto Ready

	  AltFire:
        QLNG A 8 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        TNT1 A 0 A_SelectWeapon("Nailgun")
        goto Deselect
    }
}

actor SamsaraQuakeNailgunLavaAttackHandler : Trigger // this is also used for the super nailgun
{
    States
    {
      // Ammo checking/taking stuff
      Pickup:
      PickupNG:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupPlaySoundNG")
        TNT1 A 0 A_JumpIfInventory("LavaNails",1,1)
        stop
        TNT1 A 0 A_TakeInventory("LavaNails",1)
        goto PickupPlaySoundNG

      // Sound stuff
      PickupPlaySoundNG:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",2,"PickupPlaySoundNGDMC")
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupPlaySoundNGRerelease")
      // Original sounds
      PickupPlaySoundNGOriginal:
        TNT1 A 0 A_PlaySound("quakeweps/nailgunfire",CHAN_WEAPON)
        goto PickupAttackNG

      // Rerelease sounds
      PickupPlaySoundNGRerelease:
        TNT1 A 0 A_PlaySound("quakeweps/rerelease/nailgunfire",CHAN_WEAPON)
        goto PickupAttackNG

      // Deathmatch Classic sounds
      PickupPlaySoundNGDMC:
        TNT1 A 0 A_PlaySound("quakeweps/dmc/nailgunfire",CHAN_WEAPON)
        goto PickupAttackNG

      // Attack stuff
      PickupAttackNG:
        TNT1 A 0 A_JumpIfInventory("SamsaraQuakeNailgunSide",1,"PickupAttackNGLeft")
      // Right
      PickupAttackNGRight:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",2,"PickupAttackNGRightDMC")
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupAttackNGRightRerelease")
      // Original sounds
      PickupAttackNGRightOriginal:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackNGRightOriginalCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackNGRightOriginalCoop")
      PickupAttackNGRightOriginalDM:
        TNT1 A 0 A_FireCustomMissile("QuakeLavaNail",0,false,3)
        goto PickupFinishNGRight

      PickupAttackNGRightOriginalCoop:
        TNT1 A 0 A_FireCustomMissile("QuakeLavaNailCoop",0,false,3)
        goto PickupFinishNGRight

      // Rerelease sounds
      PickupAttackNGRightRerelease:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackNGRightRereleaseCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackNGRightRereleaseCoop")
      PickupAttackNGRightRereleaseDM:
        TNT1 A 0 A_FireCustomMissile("QuakeLavaNailSoundRerelease",0,false,3)
        goto PickupFinishNGRight

      PickupAttackNGRightRereleaseCoop:
        TNT1 A 0 A_FireCustomMissile("QuakeLavaNailCoopSoundRerelease",0,false,3)
        goto PickupFinishNGRight

      // Deathmatch Classic sounds
      PickupAttackNGRightDMC:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackNGRightDMCCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackNGRightDMCCoop")
      PickupAttackNGRightDMCDM:
        TNT1 A 0 A_FireCustomMissile("QuakeLavaNailSoundDMC",0,false,3)
        goto PickupFinishNGRight

      PickupAttackNGRightDMCCoop:
        TNT1 A 0 A_FireCustomMissile("QuakeLavaNailCoopSoundDMC",0,false,3)
        goto PickupFinishNGRight

      // Left
      PickupAttackNGLeft:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",2,"PickupAttackNGLeftDMC")
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupAttackNGLeftRerelease")
      // Original sounds
      PickupAttackNGLeftOriginal:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackNGLeftOriginalCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackNGLeftOriginalCoop")
      PickupAttackNGLeftOriginalDM:
        TNT1 A 0 A_FireCustomMissile("QuakeLavaNail",0,false,-3)
        goto PickupFinishNGLeft

      PickupAttackNGLeftOriginalCoop:
        TNT1 A 0 A_FireCustomMissile("QuakeLavaNailCoop",0,false,-3)
        goto PickupFinishNGLeft

      // Rerelease sounds
      PickupAttackNGLeftRerelease:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackNGLeftRereleaseCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackNGLeftRereleaseCoop")
      PickupAttackNGLeftRereleaseDM:
        TNT1 A 0 A_FireCustomMissile("QuakeLavaNailSoundRerelease",0,false,-3)
        goto PickupFinishNGLeft

      PickupAttackNGLeftRereleaseCoop:
        TNT1 A 0 A_FireCustomMissile("QuakeLavaNailCoopSoundRerelease",0,false,-3)
        goto PickupFinishNGLeft

      // Deathmatch Classic sounds
      PickupAttackNGLeftDMC:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackNGLeftDMCCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackNGLeftDMCCoop")
      PickupAttackNGLeftDMCDM:
        TNT1 A 0 A_FireCustomMissile("QuakeLavaNailSoundDMC",0,false,-3)
        goto PickupFinishNGLeft

      PickupAttackNGLeftDMCCoop:
        TNT1 A 0 A_FireCustomMissile("QuakeLavaNailCoopSoundDMC",0,false,-3)
        goto PickupFinishNGLeft

      // Finishing stuff
      // Right
      PickupFinishNGRight:
        TNT1 A 0 A_GiveInventory("SamsaraQuakeNailgunSide")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasDoubleFiringSpeed",1,2)
        TNT1 A 0 ACS_NamedExecuteAlways("SamsaraRecoil", 0, -50, 1, 4)
        stop
        TNT1 A 0 ACS_NamedExecuteAlways("SamsaraRecoil", 0, 1, 0, 2)
        stop

      // Left
      PickupFinishNGLeft:
        TNT1 A 0 A_TakeInventory("SamsaraQuakeNailgunSide")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasDoubleFiringSpeed",1,2)
        TNT1 A 0 ACS_NamedExecuteAlways("SamsaraRecoil", 0, -50, 1, 3)
        stop
        TNT1 A 0 ACS_NamedExecuteAlways("SamsaraRecoil", 0, -50, 0, 1)
        stop
    }
}

actor SamsaraQuakeDOELavaEndSoundPlayer : Trigger
{
    States
    {
      // Sound playing stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",2,"PickupDMC")
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupRerelease")
      // Original sounds
      PickupOriginal:
        TNT1 A 0 A_PlaySound("quakeweps/lavaend",CHAN_5)
        stop

      // Rerelease sounds
      PickupRerelease:
        TNT1 A 0 A_PlaySound("quakeweps/rerelease/lavaend",CHAN_5)
        stop

      // Deathmatch Classic sounds
      PickupDMC:
        TNT1 A 0 A_PlaySound("quakeweps/dmc/lavaend",CHAN_5)
        stop
    }
}

actor QuakeLavaNail: QuakeNail
{
    Damage (14)
    +PIERCEARMOR
    DamageType "QuakeFire"
    Translation "80:111=208:223"
    Obituary "$SAMSARA_RANGER_OB_SLOT4_2"
    States
    {
      Spawn:
        QKNL A 0
        goto SpawnLoop

      SpawnLoop:
        QKNL A 1 Bright //A_SpawnItemEx("QuakeLavaTrail", 0,0,0, random(-3,3)/10.0,random(-3,3)/10.0,random(-3, 3)/10.0)
        loop

      Crash:
      Death:
        TNT1 A 1 A_PlaySound("quakeweps/nailricochet",CHAN_VOICE)
      DeathFinish:
        TNT1 AAAAA 0 A_SpawnItemEx("QuakeBulletPuff2",random(-5,5),random(-5,5),random(-5,-5),0,0,random(-10,1)/10)
        TNT1 AAAAAAAAAA 0 A_SpawnItemEx("QuakeBulletPuff3",random(-5,5),random(-5,5),random(-5,5),0,0,random(-10,1)/10)
        TNT1 AAAAA 0 A_SpawnItemEx("QuakeBulletPuff4",random(-5,5),random(-5,5),random(-5,5),0,0,random(-10,1)/10)
        //TNT1 A 0 A_SpawnItemEx("LavaNailBounce")
        stop
    }
}

actor QuakeLavaNailCoop: QuakeLavaNail
{
    +THRUSPECIES
    Species "Player"
}

actor QuakeLavaNailSoundRerelease : QuakeLavaNail
{
    States
    {
      Crash:
      Death:
        TNT1 A 1 A_PlaySound("quakeweps/rerelease/nailricochet",CHAN_VOICE)
        goto DeathFinish
    }
}

actor QuakeLavaNailCoopSoundRerelease : QuakeLavaNailSoundRerelease
{
    +THRUSPECIES
    Species "Player"
}

actor QuakeLavaNailSoundDMC : QuakeLavaNail
{
    States
    {
      Crash:
      Death:
        TNT1 A 1 A_PlaySound("quakeweps/dmc/nailricochet",CHAN_VOICE)
        goto DeathFinish
    }
}

actor QuakeLavaNailCoopSoundDMC : QuakeLavaNailSoundDMC
{
    +THRUSPECIES
    Species "Player"
}

actor QLTrail1
{
    Speed 54
    Projectile
    +CLIENTSIDEONLY
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 ACS_NamedExecuteAlways("QuakeParticle", 0, 1, 38, 88)
        goto SpawnLoop

      SpawnLoop:
        TNT1 A 1 A_SpawnItemEx("QuakeLavaTrail", 0,0,0, random(-3,3)/10.0,random(-3,3)/10.0,random(-3, 3)/10.0)
        loop

    }
}

actor QLTrail2: QLTrail1
{
    Speed 37
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 ACS_NamedExecuteAlways("QuakeParticle", 0, 2, 02, 7)
        goto SpawnLoop
    }
}

actor QLTrail3: QLTrail1
{
    Speed 18
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 ACS_NamedExecuteAlways("QuakeParticle", 0, 4, 16, 66)
        goto SpawnLoop
    }
}

actor LavaNailBounce
{
    +NOINTERACTION
    +CLIENTSIDEONLY
    RenderStyle Add
    Alpha 0.8
    Scale 0.5
    States
    {
      Spawn:
        CFCF ACEGIKNOP 2 bright
        stop
    }
}

actor QuakeLavaTrail
{
    Alpha 0.3
    Scale 0.5
    RenderStyle Add
    +CLIENTSIDEONLY
    +NOINTERACTION
    States
    {
      Spawn:
        CFFX NOP 2 bright
        stop
    }
}

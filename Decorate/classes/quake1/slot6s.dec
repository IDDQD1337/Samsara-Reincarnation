actor "Rocket Powered Impaler" : SamsaraQuakeWeapon
{
    Inventory.PickupMessage "You got the Rocket Powered Impaler."
    Weapon.SlotPriority 2
    Weapon.SelectionOrder 2
    Weapon.AmmoType "RocketAmmo"
    Weapon.AmmoGive 5
    Weapon.AmmoUse 1
    Obituary "$SAMSARA_RANGER_OB_SLOT6S"
    Tag "Rocket Powered Impaler"
    +EXPLOSIVE
    +NOAUTOFIRE
    States
    {
      Spawn:
        QDBS Z -1
        stop

      Ready:
        QIMP A 1 A_WeaponReady
        loop

      Select:
        TNT1 A 0 A_TakeInventory("Ranger_AxeSelected")
        TNT1 A 0 A_GiveInventory("Ranger_GunSelected")
        TNT1 A 0 A_TakeInventory("Ranger_ExplosiveSelected")
        TNT1 A 0 A_TakeInventory("Ranger_NailSelected")
        TNT1 A 0 A_TakeInventory("Ranger_PlasmaSelected")
        goto Super::Select

      // 42 tics
      Fire:
        QIMP B 0 A_GiveInventory("SamsaraQuakeWeaponAlert")
        QIMP B 0 A_PlaySound("quake/impalefire",CHAN_WEAPON)
        QIMP BCDEF 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        QIMP G 0 A_GunFlash
        QIMP G 0 A_GiveInventory("SamsaraQuakeRocketPoweredImpalerAttackHandler")
        QIMP G 10 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        QIMP H 0 A_PlaySound("quake/impaload")
        QIMP HI 4 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        QIMP JKLMA 3 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        QIMP A 0 A_ReFire
        goto Ready
    }
}

actor SamsaraQuakeRocketPoweredImpalerAttackHandler : Trigger
{
    States
    {
      // Ammo checking/taking stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,1)
        stop
        TNT1 A 0 A_TakeInventory("RocketAmmo",1)
        goto PickupAttack

      // Attack stuff
      PickupAttack:
        TNT1 A 0 A_JumpIfInventory("QuadDamagePower",1,"PickupQuad")
      // Normal
      PickupNormal:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupNormalCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupNormalCoop")
      PickupNormalDM:
        TNT1 A 0 A_FireBullets(0,0,1,160,"QuakeImpalerPuff",FBF_NORANDOM|FBF_NOFLASH)
        goto PickupFinish

      PickupNormalCoop:
        TNT1 A 0 A_FireBullets(0,0,1,160,"QuakeImpalerPuffCoop",FBF_NORANDOM|FBF_NOFLASH)
        goto PickupFinish

      // Quad
      PickupQuad:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupQuadCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupQuadCoop")
      PickupQuadDM:
        TNT1 A 0 A_FireBullets(0,0,1,640,"QuakeImpalerPuffQuadded",FBF_NORANDOM|FBF_NOFLASH)
        goto PickupFinish

      PickupQuadCoop:
        TNT1 A 0 A_FireBullets(0,0,1,640,"QuakeImpalerPuffQuaddedCoop",FBF_NORANDOM|FBF_NOFLASH)
        goto PickupFinish

      // Finishing stuff
      PickupFinish:
        TNT1 A 0 A_Recoil(10)
        TNT1 A 0 ACS_NamedExecuteAlways("SamsaraRecoil", 0, 10, 8, 20)
        stop
    }
}

actor QuakeImpalerPuff : BulletPuff
{
    Scale 0.5
    VSpeed 0
    DamageType "QuakeExplosive"
    -SOLID
    +PUFFONACTORS
    +ALWAYSPUFF
    +PUFFGETSOWNER
    States
    {
    Crash:
        TNT1 A 0
        TNT1 A 1 A_PlaySound("quake/impalwall")
        TNT1 AAAAA 0 A_SpawnItemEx("QuakeBulletPuff2",random(-7,7),random(-7,7),random(-3,1),0,0,random(-10,1)/10)
        TNT1 AAAAAAAAAA 0 A_SpawnItemEx("QuakeBulletPuff3",random(-7,7),random(-7,7),random(-3,1),0,0,random(-10,1)/10)
        TNT1 AAAAA 0 A_SpawnItemEx("QuakeBulletPuff4",random(-7,7),random(-7,7),random(-3,1),0,0,random(-10,1)/10)
        TNT1 A 0 A_Explode(80,128,0)
        TNT1 A 0 A_ChangeFlag("FORCERADIUSDMG",true)
        TNT1 A 0 A_Explode(80,128)
        TNT1 A 0 A_SpawnItemEx("QuakeImpalerExplosion",0,0,0,0,0,0,0,32)
        TNT1 A 1
        Stop
    Spawn:
    Melee:
        TNT1 A 0
        TNT1 A 1 A_PlaySound("quake/impalehit")
        TNT1 A 0 A_Explode(80,128,0)
        TNT1 A 0 A_ChangeFlag("FORCERADIUSDMG",true)
        TNT1 A 0 A_Explode(80,128)
        TNT1 A 0 A_SpawnItemEx("QuakeImpalerExplosion",0,0,0,0,0,0,0,32)
        TNT1 A 1
        Stop
   }
}

actor QuakeImpalerPuffCoop : QuakeImpalerPuff { +MTHRUSPECIES }

actor QuakeImpalerPuffQuadded : QuakeImpalerPuff
{
    DamageType "NotQuadded"
    States
    {
    Crash:
        TNT1 A 0
        TNT1 A 1 A_PlaySound("quake/impalwall")
        TNT1 AAAAA 0 A_SpawnItemEx("QuakeBulletPuff2",random(-7,7),random(-7,7),random(-3,1),0,0,random(-10,1)/10)
        TNT1 AAAAAAAAAA 0 A_SpawnItemEx("QuakeBulletPuff3",random(-7,7),random(-7,7),random(-3,1),0,0,random(-10,1)/10)
        TNT1 AAAAA 0 A_SpawnItemEx("QuakeBulletPuff4",random(-7,7),random(-7,7),random(-3,1),0,0,random(-10,1)/10)
        TNT1 A 0 A_Explode(320,128,0)
        TNT1 A 0 A_ChangeFlag("FORCERADIUSDMG",true)
        TNT1 A 0 A_Explode(320,128)
        TNT1 A 0 A_SpawnItemEx("QuakeImpalerExplosion",0,0,0,0,0,0,0,32)
        TNT1 A 1
        Stop
    Spawn:
    Melee:
        TNT1 A 0
        TNT1 A 1 A_PlaySound("quake/impalehit")
        TNT1 A 0 A_Explode(320,128,0)
        TNT1 A 0 A_ChangeFlag("FORCERADIUSDMG",true)
        TNT1 A 0 A_Explode(320,128)
        TNT1 A 0 A_SpawnItemEx("QuakeImpalerExplosion",0,0,0,0,0,0,0,32)
        TNT1 A 1
        Stop
   }
}

actor QuakeImpalerPuffQuaddedCoop : QuakeImpalerPuffQuadded { +MTHRUSPECIES }

actor QuakeImpalerExplosion : QuakeExplosion
{
    States
    {
      Spawn:
        QEXP A 0 bright
        QEXP A 0 ACS_NamedExecuteWithResult("SamsaraDecorate", 8)
        goto SpawnLoop

      SpawnLoop:
        QEXP A 0 A_JumpIfInventory("QuakeExplosionCounter", 1, 1)
        goto Death
        QEXP A 0 A_CustomMissile("QuakeExplosionParticle",  0, 0, random(-180, 180), 2, random(-180, 180))
        QEXP A 0 A_CustomMissile("QuakeExplosionParticle2", 0, 0, random(-180, 180), 2, random(-180, 180))
        QEXP A 0 A_CustomMissile("QuakeExplosionParticle3", 0, 0, random(-180, 180), 2, random(-180, 180))
        QEXP A 0 ACS_NamedExecuteWithResult("SamsaraDecorate", 10, 1)
        loop

      Death:
        QEXP A 4 bright A_PlaySound("quake/impalsplod")
        QEXP B 4 bright
        QEXP CD 3 bright
        QEXP EF 2 bright
        stop
    }
}

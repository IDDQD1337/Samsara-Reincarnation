actor Ranger_AxeSelected : Boolean { Inventory.InterHubAmount 0 }

actor "Axe" : SamsaraQuakeWeapon
{
    Weapon.SelectionOrder 8
    Weapon.Kickback 100
    Obituary "$SAMSARA_RANGER_OB_FALLBACKMELEE"
    Tag "Axe"
    +MELEEWEAPON
    +WIMPY_WEAPON
    States
    {
      Ready:
        QAXE A 1 A_WeaponReady
        loop

      Select:
        TNT1 A 0 A_GiveInventory("Ranger_AxeSelected")
        TNT1 A 0 A_TakeInventory("Ranger_GunSelected")
        TNT1 A 0 A_TakeInventory("Ranger_ExplosiveSelected")
        TNT1 A 0 A_TakeInventory("Ranger_NailSelected")
        TNT1 A 0 A_TakeInventory("Ranger_PlasmaSelected")
        goto Super::Select

      // 18 tics
      Fire:
        QAXE B 0 A_GiveInventory("SamsaraQuakeAxeSwingSoundPlayer")
        QAXE B 0 A_Jump(256,"Fire1","Fire2")
      Fire1:
        QAXE B 4 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        QAXE C 2 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        QAXE D 0 A_GiveInventory("SamsaraQuakeAxeAttackHandler")
        QAXE D 2 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        QAXE E 4 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      Fire2:
        QAXE F 4 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        QAXE G 2 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        QAXE H 0 A_GiveInventory("SamsaraQuakeAxeAttackHandler")
        QAXE H 2 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        QAXE I 4 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireFinish

      FireFinish:
        QAXE A 6 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        QAXE A 0 A_ReFire
        goto Ready
    }
}

actor SamsaraQuakeAxeAttackHandler : Trigger
{
    States
    {
      // Attack stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",2,"PickupDMC")
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupRerelease")
      // Quake I (Original) sounds
      PickupOriginal:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupOriginalCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupOriginalCoop")
      PickupOriginalDM:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasSpread",1,"PickupOriginalDMSpread")
        TNT1 A 0 A_CustomPunch(20,true,0,"QuakeAxePuff")
        stop

      PickupOriginalDMSpread:
        TNT1 A 0 A_CustomPunch(20*3,true,0,"QuakeAxePuff")
        stop

      PickupOriginalCoop:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasSpread",1,"PickupOriginalCoopSpread")
        TNT1 A 0 A_CustomPunch(20,true,0,"QuakeAxePuffCoop")
        stop

      PickupOriginalCoopSpread:
        TNT1 A 0 A_CustomPunch(20*3,true,0,"QuakeAxePuffCoop")
        stop

      // Quake I (Rerelease) sounds
      PickupRerelease:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupRereleaseCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupRereleaseCoop")
      PickupRereleaseDM:
        TNT1 A 0 A_CustomPunch(20,true,0,"QuakeAxePuffSoundRerelease")
        stop

      PickupRereleaseDMSpread:
        TNT1 A 0 A_CustomPunch(20*3,true,0,"QuakeAxePuffSoundRerelease")
        stop

      PickupRereleaseCoop:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasSpread",1,"PickupRereleaseCoopSpread")
        TNT1 A 0 A_CustomPunch(20,true,0,"QuakeAxePuffCoopSoundRerelease")
        stop

      PickupRereleaseCoopSpread:
        TNT1 A 0 A_CustomPunch(20*3,true,0,"QuakeAxePuffCoopSoundRerelease")
        stop

      // Deathmatch Classic sounds
      PickupDMC:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupDMCCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupDMCCoop")
      PickupDMCDM:
        TNT1 A 0 A_CustomPunch(20,true,0,"QuakeAxePuffSoundDMC")
        stop

      PickupDMCDMSpread:
        TNT1 A 0 A_CustomPunch(20*3,true,0,"QuakeAxePuffSoundDMC")
        stop

      PickupDMCCoop:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasSpread",1,"PickupDMCCoopSpread")
        TNT1 A 0 A_CustomPunch(20,true,0,"QuakeAxePuffCoopSoundDMC")
        stop

      PickupDMCCoopSpread:
        TNT1 A 0 A_CustomPunch(20*3,true,0,"QuakeAxePuffCoopSoundDMC")
        stop
    }
}

actor SamsaraQuakeAxeSwingSoundPlayer : Trigger
{
    States
    {
      // Sound playing stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",2,"PickupDMC")
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupRerelease")
      // Quake I (Original) sounds
      PickupOriginal:
        TNT1 A 0 A_PlaySound("quakeweps/axe",CHAN_WEAPON)
        stop

      // Quake I (Rerelease) sounds
      PickupRerelease:
        TNT1 A 0 A_PlaySound("quakeweps/rerelease/axe",CHAN_WEAPON)
        stop

      // Deathmatch Classic sounds
      PickupDMC:
        TNT1 A 0 A_PlaySound("quakeweps/dmc/axe",CHAN_WEAPON)
        stop
    }
}

actor QuakeAxePuff: QuakeBulletPuff
{
    +PUFFONACTORS
    DamageType "QuakeExplosive"
    AttackSound "quakeweps/axewall"
    SeeSound "quakeweps/axehit"
    MeleeSound "quakeweps/axehit"
    States
    {
      Spawn:
      Crash:
        TNT1 A 0
        TNT1 A 0 A_PlaySound("quakeweps/axewall")
        goto Super::Spawn

      Melee:
        TNT1 A 1 A_PlaySound("quakeweps/axehit")
        stop
    }
}

actor QuakeAxePuffCoop : QuakeAxePuff { +MTHRUSPECIES }

actor QuakeAxePuffSoundRerelease : QuakeAxePuff
{
    AttackSound "quakeweps/rerelease/axewall"
    States
    {
      Spawn:
      Crash:
        TNT1 A 0
        TNT1 A 0 A_PlaySound("quakeweps/rerelease/axewall")
        goto Super::Spawn
    }
}

actor QuakeAxePuffCoopSoundRerelease : QuakeAxePuffSoundRerelease { +MTHRUSPECIES }

actor QuakeAxePuffSoundDMC : QuakeAxePuff
{
    SeeSound "quakeweps/dmc/axehit"
    MeleeSound "quakeweps/dmc/axehit"
    States
    {
      Melee:
        TNT1 A 1 A_PlaySound("quakeweps/dmc/axehit")
        stop
    }
}

actor QuakeAxePuffCoopSoundDMC : QuakeAxePuffSoundDMC { +MTHRUSPECIES }

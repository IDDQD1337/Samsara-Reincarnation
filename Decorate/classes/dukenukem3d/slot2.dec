actor DBSHOT : Counter { Inventory.MaxAmount 99 }
actor DBSHOT1 : DBSHOT {}
actor DB1 : Boolean {}
actor DB2 : DB1 {}
actor DB3 : DB1 {}
actor DB4 : DB1 {}
actor DB5 : DB1 {}
actor DB6 : DB1 {}
actor DB7 : DB1 {}
actor DB8 : DB1 {}
actor DB9 : DB1 {}
actor DB10 : DB1 {}
actor DB11 : DB1 {}
actor DB12 : DB1 {}
actor DB13 : DB1 {}
actor DB14 : DB1 {}
actor DB15 : DB1 {}
actor DB16 : DB1 {}
actor DB17 : DB1 {}
actor DB18 : DB1 {}
actor DB19 : DB1 {}
actor SamsaraDukeShotgunAmmoCheckFailed : Boolean {}
actor Duke64UsingExplosiveShells : Boolean {}

actor "  Shotgun  " : DukeWeapon
{
	Weapon.SlotNumber 2
	Weapon.SelectionOrder 400
	Weapon.AmmoUse 0
	Weapon.AmmoGive 10
	Weapon.AmmoType "Shell"
	DamageType "DukeDamage"
	+NOALERT
	+INVENTORY.UNDROPPABLE
	Obituary "$SAMSARA_DUKE_OB_SLOT2"
	Inventory.Pickupmessage "You got the Shotgun!"
	Inventory.PickupSound "duke/mosspump2"
	Weapon.UpSound ""
	Scale 0.5
	Tag "Shotgun"
	States
	{
	Spawn:
		SHTP A -1
		Stop

	Ready:
		TNT1 A 0 A_JumpIfInventory("DBSHOT",1,"ReadyA")
		TNT1 A 0 A_JumpIfInventory("DukeReady",1,"IntroTaunt")
		TNT1 A 0 A_JumpIfInventory("DukeWaiting",0,"WaitingTaunt")
		TNT1 A 0 A_JumpIfInventory("DukeGiveMoney",1,"GiveMoney")
		TNT1 A 0 A_JumpIfInventory("DukeStomp", 1, "Stomp")
		TNT1 A 0 A_JumpIfInventory("DukeClassMode", 2, 4)
		TNT1 A 0 A_JumpIfInventory("DukeClassMode", 1, 2)
		DKSG A 1 A_WeaponReady
		Loop
		DKSG F 1 A_WeaponReady
		Loop
		D6SG A 1 A_WeaponReady
		Loop

	Deselect:
		TNT1 A 0 A_GunFlash("FlashBlank",GFF_NOEXTCHANGE)
		DKSG A 0 A_JumpIfInventory("DukeClassMode", 2, "Deselect64")
		DKSG A 0 A_JumpIfInventory("DukeClassMode", 1, "DeselectLAB")
		Goto Super::Deselect
	Deselect64:
		D6SG A 0
		Goto Super::Deselect
	DeselectLAB:
		DKSG F 0
		Goto Super::Deselect

	Select:
		TNT1 A 0 A_JumpIfInventory("DukeReady",1,"IntroTaunt1")
		TNT1 A 0 A_GunFlash("FlashBlank",GFF_NOEXTCHANGE)
		DKSG A 0 A_JumpIfInventory("DukeClassMode", 2, "Select64")
		DKSG A 0 A_PlayWeaponSound("duke/mosspump2")
		DKSG A 0 A_JumpIfInventory("DukeClassMode", 1, "SelectLAB")
		Goto Super::Select
	Select64:
        TNT1 A 0 A_JumpIfInventory("Duke64UsingExplosiveShells",1,2)
        TNT1 A 0 A_PlayWeaponSound("duke64/spas12up1")
        goto Select64+3
        TNT1 A 0 A_PlayWeaponSound("duke64/spas12up2")
        D6SG A 0
        goto Super::Select
	SelectLAB:
		DKSG F 0
		Goto Super::Select

	Fire:
		TNT1 A 0 A_JumpIfInventory("DukeStomp", 1, "Stomp")
		TNT1 A 0 A_GiveInventory("DBSHOT",60)
		TNT1 A 0 A_GunFlash("Flash",GFF_NOEXTCHANGE)
		Goto ReadyA

	Flash:
		TNT1 A 0 A_JumpIfInventory("DBSHOT",1,"FlashA")
		stop
	FlashA:
		TNT1 A 0 A_TakeInventory("DukeWaiting")
		TNT1 A 0 A_JumpIfInventory("DukeClassMode",2,"FlashA64")
		TNT1 A 0 A_JumpIfInventory("DukeClassMode", 1, "FlashALAB")
		TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
		TNT1 A 0 A_JumpIfInventory("Shell",1,1)
		goto OutOfAmmo
		TNT1 A 0 A_AlertMonsters
		DKSH A 2 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		TNT1 A 0 A_GiveInventory("SamsaraDukeShotgunAttackHandler")
	FlashAEnd:
		TNT1 A 0 A_Light1
		DKSH B 1 BRIGHT A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		TNT1 A 0 A_Light0
		DKSH B 1 BRIGHT A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		DKSH CDA 2 BRIGHT A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		DKSH A 2 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
		TNT1 A 0 A_JumpIfInventory("Shell",1,1)
		goto OutOfAmmo
		DKSG BC 4 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		TNT1 A 0 A_PlaySound("duke/mosspump",CHAN_5)
		DKSG DE 4 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
        TNT1 A 0 A_JumpIfInventory("SamsaraDukeShotgunAmmoCheckFailed",1,2)
		TNT1 A 0 A_FireCustomMissile("ShellCasingSpawner2",0,0,2)
		DKSG E 1 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		DKSG D 3 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		DKSG C 2 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		TNT1 A 0 A_TakeInventory("DBSHOT",99)
		DKSG CA 1 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		stop
	FlashALAB:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
		TNT1 A 0 A_JumpIfInventory("Shell",1,1)
		goto OutOfAmmoLAB
		TNT1 A 0 A_AlertMonsters
		DKSH E 2 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		TNT1 A 0 A_GiveInventory("SamsaraDukeLABShotgunAttackHandler")
	FlashALABEnd:
		TNT1 A 0 A_Light1
		DKSH F 1 BRIGHT A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		TNT1 A 0 A_Light0
		DKSH F 1 BRIGHT A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		DKSH GHE 2 BRIGHT A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		DKSH E 2 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
		TNT1 A 0 A_JumpIfInventory("Shell",1,1)
		goto OutOfAmmoLAB
		DKSG GH 4 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		TNT1 A 0 A_PlaySound("duke/mosspump",CHAN_5)
		DKSG IJ 4 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
        // no casing, but we still maintain DoubleFiringSpeed parity
		DKSG J 1 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		DKSG I 3 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		DKSG H 2 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		TNT1 A 0 A_TakeInventory("DBSHOT",99)
		DKSG HF 1 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		stop
	FlashA64:
		TNT1 A 0 A_JumpIfInventory("Duke64UsingExplosiveShells",1,"FlashA64Explosive")
		TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
		TNT1 A 0 A_JumpIfInventory("Shell",1,1)
		goto OutOfAmmo64
		TNT1 A 0 A_AlertMonsters
		TNT1 A 0 A_GiveInventory("SamsaraDuke64ShotgunAttackHandler")
		TNT1 A 0 A_Light1
		D6SG B 4 Bright A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		TNT1 A 0 A_Light0
		D6SG A 2 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		D6SG CD 4 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		D6SG E 2 A_PlaySound("duke64/spas12pump",5)
		D6SG F 5 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
        TNT1 A 0 A_JumpIfInventory("SamsaraDukeShotgunAmmoCheckFailed",1,2)
        TNT1 A 0 A_FireCustomMissile("ShellCasingSpawner2",0,0,2)
		D6SG E 3
		D6SG DA 4 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		TNT1 A 0 A_TakeInventory("DBSHOT",99)
		D6SG A 2 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		Stop
	FlashA64Explosive:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
		TNT1 A 0 A_JumpIfInventory("Duke64ExplosiveShells",1,1)
		goto OutOfAmmo64
		TNT1 A 0 A_AlertMonsters
		TNT1 A 0 A_GiveInventory("SamsaraDuke64ShotgunAttackHandler")
		TNT1 A 0 A_Light1
		D6SG B 4 Bright A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		TNT1 A 0 A_Light0
		D6SG A 2 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		D6SG CD 4 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		D6SG E 2 A_PlaySound("duke64/spas12pump",5)
		D6SG F 5 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
        TNT1 A 0 A_JumpIfInventory("SamsaraDukeShotgunAmmoCheckFailed",1,2)
        TNT1 A 0 A_FireCustomMissile("ShellCasingSpawner2",0,0,2)
		D6SG E 3
		D6SG DA 4 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		TNT1 A 0 A_TakeInventory("DBSHOT",99)
		D6SG A 2 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
		Stop

	AltFire:
		TNT1 A 0 A_JumpIfInventory("DukeClassMode", 2, "Duke64SwitchAmmo")
		Goto Super::AltFire

	AltFlash:
		TNT1 A 0 A_JumpIfInventory("DukeClassMode", 2, "AltFlash64")
		DKSG A 8 A_JumpIfInventory("DukeClassMode", 1, 1)
		stop
		DKSG F 8
		stop

	AltFlash64:
		TNT1 A 0
		stop

	Duke64SwitchAmmo:
		TNT1 A 0 A_JumpIfInventory("DBSHOT",1,"Ready")
		TNT1 A 0 A_JumpIfInventory("Duke64UsingExplosiveShells",1,"Duke64SwitchAmmo2")
		TNT1 A 0 A_GiveInventory("Duke64UsingExplosiveShells",1)
	Duke64SwitchAmmoAnim:
		TNT1 A 0 A_PlayWeaponSound("duke64/spas12up2")
		D6SG GHIJKL 1
		TNT1 A 4
		D6SG LKJIHG 1
		goto Ready

	Duke64SwitchAmmo2:
		TNT1 A 0 A_TakeInventory("Duke64UsingExplosiveShells",1)
	Duke64SwitchAmmoAnim2:
		TNT1 A 0 A_PlayWeaponSound("duke64/spas12up1")
		D6SG GHIJKL 1
		TNT1 A 4
		D6SG LKJIHG 1
		goto Ready

	TauntWeaponSound:
		TNT1 A 0 A_JumpIfInventory("DukeClassMode", 2, "TauntWeaponSound64")
		TNT1 A 0 A_PlayWeaponSound("duke/mosspump2")
		Goto Select

	TauntWeaponSound64:
        TNT1 A 0 A_JumpIfInventory("Duke64UsingExplosiveShells",1,2)
        TNT1 A 0 A_PlayWeaponSound("duke64/spas12up1")
        goto Select
        TNT1 A 0 A_PlayWeaponSound("duke64/spas12up2")
        goto Select

	IntroTaunt:
		DKSG A 0 A_JumpIfInventory("DukeClassMode", 2, "IntroTaunt64")
		DKSG A 0 A_JumpIfInventory("DukeClassMode", 1, "IntroTauntLAB")
		Goto Super::IntroTaunt
	IntroTaunt64:
		D6SG A 0
		Goto Super::IntroTaunt
	IntroTauntLAB:
		DKSG F 0
		Goto Super::IntroTaunt

	WaitingTaunt:
		DKSG A 0 A_JumpIfInventory("DukeClassMode", 2, "WaitingTaunt64")
		DKSG A 0 A_JumpIfInventory("DukeClassMode", 1, "WaitingTauntLAB")
		Goto Super::WaitingTaunt
	WaitingTaunt64:
		D6SG A 0
		Goto Super::WaitingTaunt
	WaitingTauntLAB:
		DKSG F 0
		Goto Super::WaitingTaunt

	GiveMoney:
		DKSG A 0 A_JumpIfInventory("DukeClassMode", 2, "GiveMoney64")
		DKSG A 0 A_JumpIfInventory("DukeClassMode", 1, "GiveMoneyLAB")
		Goto Super::GiveMoney
	GiveMoney64:
		D6SG A 0
		Goto Super::GiveMoney
	GiveMoneyLAB:
		DKSG F 0
		Goto Super::GiveMoney

	OutOfAmmo:
		DKSH A 2 A_TakeInventory("DBSHOT",99)
		TNT1 A 0 A_SelectWeapon("Glock 17")
		Goto Deselect

	OutOfAmmoLAB:
		DKSH E 2 A_TakeInventory("DBSHOT",99)
		TNT1 A 0 A_SelectWeapon("Glock 17")
		Goto Deselect

	OutOfAmmo64:
		D6SG A 2 A_TakeInventory("DBSHOT",99)
		TNT1 A 0 A_SelectWeapon("Glock 17")
		Goto Deselect
	}
}

// Original

actor SamsaraDukeShotgunAttackHandler : Trigger
{
    States
    {
      // Ammo checking/taking stuff
      Pickup:
        TNT1 A 0 A_TakeInventory("SamsaraDukeShotgunAmmoCheckFailed")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("Shell",1,1)
        goto PickupAmmoCheckFailed
        TNT1 A 0 A_TakeInventory("Shell",1)
        goto PickupAttack

      // Ammo checking failure stuff
      PickupAmmoCheckFailed:
        TNT1 A 0 A_GiveInventory("SamsaraDukeShotgunAmmoCheckFailed")
        stop

      // Attack stuff
      PickupAttack:
        TNT1 A 0 A_PlaySound("duke/mossberg",CHAN_WEAPON)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackCoop")
      PickupAttackDM:
        TNT1 A 0 A_FireBullets(3.5,2.5,7,10,"DukeBulletPuff",FBF_NORANDOM|FBF_NOFLASH)
        stop

      PickupAttackCoop:
        TNT1 A 0 A_FireBullets(3.5,2.5,7,10,"DukeBulletPuffCoop",FBF_NORANDOM|FBF_NOFLASH)
        stop
    }
}

actor ShellCasingSpawner2 : FastProjectile
{
	Radius 6
	Height 6
	Projectile
	Damage 0
	Speed 5
	SeeSound "none"
	DeathSound "none"
	Decal "none"
	+CLIENTSIDEONLY
	States
	{
	Spawn:
		TNT1 A 1
		TNT1 A 1 A_SpawnItemEx("DukeCasing2",0,3,4,random(1,3),0,random(-1,1),random(85,90),0)
		Stop
	}
}

actor DukeCasing2
{
	Speed 1
	Scale 0.075
	Height 1
	Radius 0
	Gravity 0.8
	-SOLID
	+MISSILE
	+MOVEWITHSECTOR
	+CLIENTSIDEONLY
	+NOBLOCKMAP
	+NOTELEPORT
	States
	{
	Spawn:
		SHTX A -1 BRIGHT
		Loop

	Death:
		SHTX B 0
		Stop
	}
}

// Life's A Beach

actor SamsaraDukeLABShotgunAttackHandler : Trigger
{
    States
    {
      // Ammo checking/taking stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("Shell",1,1)
        stop
        TNT1 A 0 A_TakeInventory("Shell",1)
        goto PickupAttack

      // Attack stuff
      PickupAttack:
        TNT1 A 0 A_PlaySound("duke/mossberg2",CHAN_WEAPON)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackCoop")
      PickupAttackDM:
        TNT1 A 0 A_FireBullets(3.5,2.5,7,10,"DukeBulletPuffBeach",FBF_NORANDOM|FBF_NOFLASH)
        stop

      PickupAttackCoop:
        TNT1 A 0 A_FireBullets(3.5,2.5,7,10,"DukeBulletPuffBeachCoop",FBF_NORANDOM|FBF_NOFLASH)
        stop
    }
}

// Duke Nukem 64

actor SamsaraDuke64ShotgunAttackHandler : Trigger
{
    States
    {
      // Ammo mode checking stuff
      Pickup:
        TNT1 A 0 A_TakeInventory("SamsaraDukeShotgunAmmoCheckFailed")
        TNT1 A 0 A_JumpIfInventory("Duke64UsingExplosiveShells",1,"PickupExplosiveShell")
      // Shotgun shells
      PickupShell:
      // Ammo checking/taking stuff
      PickupAmmoCheckShell:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupAttackShell")
        TNT1 A 0 A_JumpIfInventory("Shell",1,1)
        goto PickupAmmoCheckFailedShell
        TNT1 A 0 A_TakeInventory("Shell",1)
        goto PickupAttackShell

      // Ammo checking failure stuff
      PickupAmmoCheckFailedShell:
        TNT1 A 0 A_GiveInventory("SamsaraDukeShotgunAmmoCheckFailed")
        stop

      // Attack stuff
      PickupAttackShell:
        TNT1 A 0 A_PlaySound("duke64/spas12",CHAN_WEAPON)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackShellCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackShellCoop")
      PickupAttackShellDM:
        TNT1 A 0 A_FireBullets(3.5,2.5,7,random(10,14),"Duke64BulletPuff",FBF_NORANDOM|FBF_NOFLASH)
        goto PickupFinish

      PickupAttackShellCoop:
        TNT1 A 0 A_FireBullets(3.5,2.5,7,random(10,14),"Duke64BulletPuffCoop",FBF_NORANDOM|FBF_NOFLASH)
        goto PickupFinish

      // Explosive shotgun shells
      PickupExplosiveShell:
      // Ammo checking/taking stuff
      PickupAmmoCheckExplosiveShell:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupAttackExplosiveShell")
        TNT1 A 0 A_JumpIfInventory("Duke64ExplosiveShells",1,1)
        goto PickupAmmoCheckFailedExplosiveShell
        TNT1 A 0 A_TakeInventory("Duke64ExplosiveShells",1)
        goto PickupAttackExplosiveShell

      // Ammo checking failure stuff
      PickupAmmoCheckFailedExplosiveShell:
        goto PickupAmmoCheckFailedShell

      // Attack stuff
      PickupAttackExplosiveShell:
        TNT1 A 0 A_PlaySound("duke64/spas12",CHAN_WEAPON)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackExplosiveShellCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackExplosiveShellCoop")
      PickupAttackExplosiveShellDM:
        TNT1 A 0 A_FireBullets(0,0,1,0,"Duke64ExplosiveShotgunPuff",FBF_NOFLASH)
        goto PickupFinish

      PickupAttackExplosiveShellCoop:
        TNT1 A 0 A_FireBullets(0,0,1,0,"Duke64ExplosiveShotgunPuffCoop",FBF_NOFLASH)
        goto PickupFinish

      // Finishing stuff
      PickupFinish:
        TNT1 A 0 ACS_NamedExecuteAlways("SamsaraRecoil", 0, 6, 3, 17)
        stop
    }
}

// Shotgun shells

actor Duke64BulletPuff : Duke64PistolPuff { DamageType "DukeDamage" }

actor Duke64BulletPuffCoop : Duke64BulletPuff { +MTHRUSPECIES }

// Explosive shotgun shells

actor Duke64ExplosiveShells : Ammo
{
    Inventory.MaxAmount 5
    Ammo.BackpackMaxAmount 10
    Inventory.Icon "AMSMP0"
    Tag "Explosive Shotgun Shells"
}

actor Duke64ExplosiveShotgunPuff : BulletPuffSettingless
{
	Renderstyle Translucent
	Alpha 0.9
	DamageType "DukeExplosive"
	Scale 0.5
	VSpeed 0
    -ALLOWPARTICLES
	-SOLID
	+PUFFONACTORS
	+ALWAYSPUFF
	+PUFFGETSOWNER
	+FORCERADIUSDMG
	Decal DoomImpScorch
	States
	{
	Spawn:
	Melee:
	Crash:
	   TNT1 A 0
	   TNT1 A 1 A_PlaySound("duke/xshotgunxplod")
	   TNT1 A 0 A_Explode((175),128) // Seven x 20 = 140 damage. 140+35 = 175 damage total.
	   TNT1 A 0 A_SpawnItemEx("Duke64ExplosiveShotgunSmoke")
	   DKSX ABCDEFGH 2 BRIGHT
	   DKSX IJKLMNOPQ 2 BRIGHT
	   stop
   }
}

actor Duke64ExplosiveShotgunPuffCoop : Duke64ExplosiveShotgunPuff { +MTHRUSPECIES }

actor Duke64ExplosiveShotgunSmoke
{
	Height 2
	Radius 2
	Renderstyle Translucent
	Scale 0.5
	+NOINTERACTION
	+NOGRAVITY
	States
	{
		Spawn:
			DKSX R 0
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			DKSX R 0 A_Fadeout(0.025) DKSX R 2 A_SetScale(scalex+0.125)
			Stop
	}
}

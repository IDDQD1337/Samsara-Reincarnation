actor SamsaraUnrealStingerPrimaryHolding : Boolean {}
actor SamsaraUnrealStingerPrimaryFiringSoundCheck : Boolean {}
actor SamsaraUnrealStingerSecondaryAttackAmount : Counter { Inventory.MaxAmount 5 }
actor SamsaraUnrealStingerSecondaryAttackSuccess : Boolean {}

Actor Unreal_Stinger : UnrealWeapon
{
	Weapon.SelectionOrder 1800
	Weapon.SlotNumber 4
	Weapon.SlotPriority 1
	Weapon.AmmoType "Clip"
	Weapon.AmmoGive 40
	Weapon.AmmoUse 1
	Tag "Stinger"
	Inventory.PickupMessage "You picked up the Stinger."
	Obituary "%o was perforated by %k's Stinger."
	+ALT_USES_BOTH // only one ammo type with same ammo amount use, so this makes alt fire behave as intended
	States
	{
	Spawn:
		UN00 A 10 Bright
		UN00 A 10
		loop

	ReadyActual:
		UN01 W 0 A_TakeInventory("SamsaraUnrealStingerPrimaryFiringSoundCheck")
		UN01 W 3 A_WeaponReady
		loop

	Deselect:
		UN01 W 0 A_JumpIfInventory("SamsaraUnrealStingerPrimaryFiringSoundCheck",1,1)
		goto DeselectStart
		UN01 W 0 A_PlaySound("silence",CHAN_WEAPON)
		UN01 W 0 A_StopSound(CHAN_WEAPON)
		UN01 W 0 A_TakeInventory("SamsaraUnrealStingerPrimaryFiringSoundCheck")
		goto DeselectStart

	DeselectStart:
		UN01 W 0 A_TakeInventory("Unreal_StingerSelected")
		UN01 W 1 A_JumpIfHealthLower(1,"DeselectInstant")
		UN02 ABCDEFGH 1
        UN02 I 0
		goto DeselectInstant

	Ready: // our "Select" state
		UN01 A 0 A_GiveInventory("Unreal_StingerSelected")
		UN01 A 0 A_GiveInventory("SamsaraUnrealStingerLoadSoundPlayer")
		UN01 A 0 A_TakeInventory("SamsaraUnrealStingerPrimaryFiringSoundCheck") // map change hack
		UN01 A 1 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE)
		UN01 B 0 A_TakeInventory("SamsaraUnrealStingerPrimaryFiringSoundCheck") // map change hack
		UN01 BCDEFGHIJKLMNOPQRSTUV 1 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE)
		goto ReadyActual

	Fire:
		UN03 A 0 A_TakeInventory("SamsaraUnrealStingerPrimaryHolding")
		goto FireStart

	Hold:
		UN03 A 0 A_GiveInventory("SamsaraUnrealStingerPrimaryHolding")
		goto FireStart

	FireStart:
		UN03 B 0 A_GiveInventory("SamsaraUnrealStingerPrimaryAttackHandler")
		UN03 B 2 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
		UN03 C 1 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
		UN03 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
		UN03 A 0 A_JumpIfInventory("Clip",1,1)
		goto FireContinue
		UN03 A 0 A_ReFire
		goto FireContinue

	FireContinue:
		UN03 A 0 A_ClearReFire
		UN03 A 1 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
		UN01 W 0 A_JumpIfInventory("SamsaraUnrealStingerPrimaryFiringSoundCheck",1,1)
		goto FireFinish
		UN01 W 0 A_GiveInventory("SamsaraUnrealStingerEndFireSoundPlayer")
		UN01 W 0 A_TakeInventory("SamsaraUnrealStingerPrimaryFiringSoundCheck")
		goto FireFinish

	FireFinish:
		UN01 W 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
		UN01 W 0 A_CheckReload
		goto ReadyActual

	AltFire:
		UN03 B 0 A_GiveInventory("SamsaraUnrealStingerSecondaryAttackHandler")
		UN03 B 6 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
		UN03 C 2 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
		UN03 A 6 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
		UN03 D 12 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
		UN01 W 0 A_CheckReload
		goto ReadyActual
	}
}

actor SamsaraUnrealStingerPrimaryAttackHandler : Trigger
{
	States
	{
	// Ammo checking/taking stuff
	Pickup:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupPlaySound")
		TNT1 A 0 A_JumpIfInventory("Clip",1,1)
		stop
		TNT1 A 0 A_TakeInventory("Clip",1)
		goto PickupPlaySound

	// Sound stuff
	PickupPlaySound:
		TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupPlaySoundUnreal")
	// Unreal Gold sounds
	PickupPlaySoundUnrealGold:
		TNT1 A 0 A_JumpIfInventory("SamsaraUnrealStingerPrimaryHolding",1,2)
		TNT1 A 0 A_PlaySound("Unreal/Stinger/Fire",CHAN_WEAPON)
		goto PickupAttack
		TNT1 A 0 A_PlaySound("Unreal/Stinger/Fire2",CHAN_WEAPON,1.0,true)
		TNT1 A 0 A_GiveInventory("SamsaraUnrealStingerPrimaryFiringSoundCheck")
		goto PickupAttack

	// Unreal sounds
	PickupPlaySoundUnreal:
		TNT1 A 0 A_JumpIfInventory("SamsaraUnrealStingerPrimaryHolding",1,2)
		TNT1 A 0 A_PlaySound("UnrealOld/Stinger/Fire",CHAN_WEAPON)
		goto PickupAttack
		TNT1 A 0 A_PlaySound("UnrealOld/Stinger/Fire2",CHAN_WEAPON,1.0,true)
		TNT1 A 0 A_GiveInventory("SamsaraUnrealStingerPrimaryFiringSoundCheck")
		goto PickupAttack

	// Attack stuff
	PickupAttack:
		TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackCoop")
		TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackCoop")
		TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupAttackDMSoundUnreal")
	PickupAttackDM:
		TNT1 A 0 A_FireCustomMissile("UnrealStingerShot",frandom(-1,1),false,13,4,0,frandom(-1,1))
		goto PickupFinish
	PickupAttackDMSoundUnreal:
		TNT1 A 0 A_FireCustomMissile("UnrealStingerShotSoundUnreal",frandom(-1,1),false,13,4,0,frandom(-1,1))
		goto PickupFinish
	PickupAttackCoop:
		TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupAttackCoopSoundUnreal")
		TNT1 A 0 A_FireCustomMissile("UnrealStingerShotCoop",frandom(-1,1),false,13,4,0,frandom(-1,1))
		goto PickupFinish
	PickupAttackCoopSoundUnreal:
		TNT1 A 0 A_FireCustomMissile("UnrealStingerShotCoopSoundUnreal",frandom(-1,1),false,13,4,0,frandom(-1,1))
		goto PickupFinish

	// Finishing stuff
	PickupFinish:
		TNT1 A 0 ACS_NamedExecuteWithResult("Unreal_Recoil")
		stop
	}
}

actor SamsaraUnrealStingerSecondaryAttackHandler : Trigger
{
	States
	{
	// Loop clearing/initializing stuff
	Pickup:
		TNT1 A 0 A_TakeInventory("SamsaraUnrealStingerSecondaryAttackAmount") // reset
		TNT1 A 0 A_TakeInventory("SamsaraUnrealStingerSecondaryAttackSuccess")
	PickupInit:
		TNT1 A 0 A_GiveInventory("SamsaraUnrealStingerSecondaryAttackAmount")
		goto PickupAmmoCheck

	// Ammo checking/taking stuff
	PickupAmmoCheck:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupPlaySound")
		TNT1 A 0 A_JumpIfInventory("Clip",1,1)
		goto PickupFinish
		TNT1 A 0 A_TakeInventory("Clip",1)
		goto PickupPlaySound

	// Sound stuff
	PickupPlaySound:
		TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupPlaySoundUnreal")
	// Unreal Gold sounds
	PickupPlaySoundUnrealGold:
		TNT1 A 0 A_PlaySound("Unreal/Stinger/AltFire",CHAN_WEAPON)
		goto PickupAttack

	// Unreal sounds
	PickupPlaySoundUnreal:
		TNT1 A 0 A_PlaySound("UnrealOld/Stinger/AltFire",CHAN_WEAPON)
		goto PickupAttack

	// Attack stuff
	PickupAttack:
		TNT1 A 0 A_GiveInventory("SamsaraUnrealStingerSecondaryAttackSuccess")
		TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackCoop")
		TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackCoop")
		TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupAttackDMSoundUnreal")
	PickupAttackDM:
		TNT1 A 0 A_FireCustomMissile("UnrealStingerShot",frandom(-10,10),false,13,4,0,frandom(-10,10))
		goto PickupFinish
	PickupAttackDMSoundUnreal:
		TNT1 A 0 A_FireCustomMissile("UnrealStingerShotSoundUnreal",frandom(-10,10),false,13,4,0,frandom(-10,10))
		goto PickupFinish
	PickupAttackCoop:
		TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupAttackCoopSoundUnreal")
		TNT1 A 0 A_FireCustomMissile("UnrealStingerShotCoop",frandom(-10,10),false,13,4,0,frandom(-10,10))
		goto PickupFinish
	PickupAttackCoopSoundUnreal:
		TNT1 A 0 A_FireCustomMissile("UnrealStingerShotCoopSoundUnreal",frandom(-10,10),false,13,4,0,frandom(-10,10))
		goto PickupFinish

	// Finishing stuff
	PickupFinish:
		TNT1 A 0 A_JumpIfInventory("SamsaraUnrealStingerSecondaryAttackAmount",0,1)
		goto PickupInit
		TNT1 A 0 A_JumpIfInventory("SamsaraUnrealStingerSecondaryAttackSuccess",1,1)
		stop
		TNT1 A 0 ACS_NamedExecuteWithResult("Unreal_Recoil")
		stop
	}
}

actor SamsaraUnrealStingerLoadSoundPlayer : Trigger
{
    States
    {
      // Sound playing stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupUnreal")
      // Unreal Gold sounds
      PickupUnrealGold:
        TNT1 A 0 A_PlaySound("Unreal/Stinger/Load")
        stop

      // Unreal sounds
      PickupUnreal:
        TNT1 A 0 A_PlaySound("UnrealOld/Stinger/Load")
        stop
    }
}

actor SamsaraUnrealStingerEndFireSoundPlayer : Trigger
{
    States
    {
      // Sound playing stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupUnreal")
      // Unreal Gold sounds
      PickupUnrealGold:
        TNT1 A 0 A_PlaySound("Unreal/Stinger/EndFire",CHAN_WEAPON)
        stop

      // Unreal sounds
      PickupUnreal:
        TNT1 A 0 A_PlaySound("UnrealOld/Stinger/EndFire",CHAN_WEAPON)
        stop
    }
}

Actor UnrealStingerShot : FastProjectile
{
	Radius 1
	Height 1
	Projectile
	Damage (14)
	Scale 0.10
	+HITTRACER
	+NODAMAGETHRUST
	+THRUGHOST
	+BRIGHT
	Speed 32
	Obituary "%o was perforated by %k's Stinger."
	States
	{
	Spawn:
		UN00 A 2
		Loop
	XDeath:
		TNT1 A 1 ACS_NamedExecuteWithResult("Unreal_BloodGenerator_Offsets")
		TNT1 A 0 A_GiveInventory("UnrealBloodyPuffGenerator",1,AAPTR_TRACER)
		TNT1 A 1 A_PlaySound("Unreal/RazorJack/HitFlesh",CHAN_VOICE)
		Stop
	Death:
	Crash:
		TNT1 A 0 A_Jump(77,2)
		TNT1 A 0 A_PlaySound("Unreal/Stinger/Ricochet",CHAN_VOICE)
		Goto DeathEnd
		TNT1 A 0 A_PlaySound("Unreal/RazorJack/HitWall",CHAN_VOICE)
		Goto DeathEnd
	DeathEnd:
		TNT1 A 1 A_SpawnItemEx("UnrealStingerBurst",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION)
		Stop
	}
}

Actor UnrealStingerShotCoop : UnrealStingerShot { +THRUSPECIES Species "Player" }

Actor UnrealStingerShotSoundUnreal : UnrealStingerShot
{
	States
	{
	XDeath:
		TNT1 A 1 ACS_NamedExecuteWithResult("Unreal_BloodGenerator_Offsets")
		TNT1 A 0 A_GiveInventory("UnrealBloodyPuffGenerator",1,AAPTR_TRACER)
		TNT1 A 1 A_PlaySound("UnrealOld/RazorJack/HitFlesh",CHAN_VOICE)
		Stop
	Death:
	Crash:
		TNT1 A 0 A_Jump(77,2)
		TNT1 A 0 A_PlaySound("UnrealOld/Stinger/Ricochet",CHAN_VOICE)
		Goto DeathEnd
		TNT1 A 0 A_PlaySound("UnrealOld/RazorJack/HitWall",CHAN_VOICE)
		Goto DeathEnd
	}
}

Actor UnrealStingerShotCoopSoundUnreal : UnrealStingerShotSoundUnreal { +THRUSPECIES Species "Player" }

Actor UnrealStingerBurst
{
	+CLIENTSIDEONLY
	+NOINTERACTION
	+NOTONAUTOMAP
	+BRIGHT
	Radius 1
	Height 1
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_Jump(256, "Type1", "Type2", "Type3", "Type4", "Type5", "Type6", "Type7", "Type8")
		Goto Type1
	Type1:
		UN00 ABCDEF 2
		Stop
	Type2:
		UN01 ABCDEF 2
		Stop
	Type3:
		UN02 ABCDEF 2
		Stop
	Type4:
		UN03 ABCDEF 2
		Stop
	Type5:
		UN04 ABCDEF 2
		Stop
	Type6:
		UN05 ABCDEF 2
		Stop
	Type7:
		UN06 ABCDEF 2
		Stop
	Type8:
		UN07 ABCDEF 2
		Stop
	}
}

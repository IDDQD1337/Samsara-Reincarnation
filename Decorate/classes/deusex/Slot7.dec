//actor MJ12PlasmaDirectHitToken : Counter { Inventory.MaxAmount 20 }
actor SamsaraDeusExPlasmaRifleAmmoType : Boolean {}

Actor DeusEx_MJ12PlasmaRifle : DeusExWeapon
{
	Weapon.SelectionOrder 1600
	Weapon.SlotNumber 7
	Weapon.SlotPriority 1
	Weapon.AmmoType1 "DeusEx_PlasmaRifleMagazine"
	Weapon.AmmoType2 "Cell"
	Weapon.AmmoUse1 1
	Weapon.AmmoGive2 80
	+WEAPON.BFG
	+WEAPON.EXPLOSIVE
	Tag "Majestic 12 Plasma Rifle"
	Inventory.PickupMessage "You found a Plasma Rifle."
	Obituary "%o was disintegrated with %k's Plasma Rifle."
	States
	{
		Spawn:
			DX99 A -1
			stop

		ReadyActual:
			//DX00 A 0 A_TakeInventory("DeusEx_PlasmaRifleSpread",16)
			DX00 A 0 A_GunFlash("ReadyActualGlow",GFF_NOEXTCHANGE)
			DX00 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReadyActualReloadable")
		ReadyActualNonReloadable:
			DX00 AAAAAAAA 2 A_WeaponReady
			goto ReadyActualJump

		ReadyActualReloadable:
			DX00 AAAAAAAA 2 A_WeaponReady(WRF_ALLOWRELOAD)
			goto ReadyActualJump

		ReadyActualGlow:
			DX03 ABCDEFGH 2 Bright
			stop

		ReadyActualJump:
			DX00 A 0 A_Jump(64,"ReadyActualIdle1","ReadyActualIdle2","ReadyActualIdle3")
			goto ReadyActualAmmoCheck

		ReadyActualIdle1:
			DX00 A 0 A_GunFlash("ReadyActualIdle1Glow",GFF_NOEXTCHANGE)
			DX00 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReadyActualIdle1Reloadable")
		ReadyActualIdle1NonReloadable:
			DX00 A 6 A_WeaponReady
			DX01 MNOPQRST 6 A_WeaponReady
			goto ReadyActual

		ReadyActualIdle1Reloadable:
			DX00 A 6 A_WeaponReady(WRF_ALLOWRELOAD)
			DX01 MNOPQRST 6 A_WeaponReady(WRF_ALLOWRELOAD)
			goto ReadyActual

		ReadyActualIdle1Glow:
			DX03 A 6 Bright
			DX04 ABCDEFGH 6 Bright
			stop

		ReadyActualIdle2:
			DX00 A 0 A_GunFlash("ReadyActualIdle2Glow",GFF_NOEXTCHANGE)
			DX00 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReadyActualIdle2Reloadable")
		ReadyActualIdle2NonReloadable:
			DX00 A 6 A_WeaponReady
			DX01 "UVWXYZ[\" 6 A_WeaponReady
			goto ReadyActual

		ReadyActualIdle2Reloadable:
			DX00 A 6 A_WeaponReady(WRF_ALLOWRELOAD)
			DX01 "UVWXYZ[\" 6 A_WeaponReady(WRF_ALLOWRELOAD)
			goto ReadyActual

		ReadyActualIdle2Glow:
			DX03 A 6 Bright
			DX05 ABCDEFGH 6 Bright
			stop

		ReadyActualIdle3:
			DX00 A 0 A_GunFlash("ReadyActualIdle3Glow",GFF_NOEXTCHANGE)
			DX00 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReadyActualIdle3Reloadable")
		ReadyActualIdle3NonReloadable:
			DX00 A 6 A_WeaponReady
			DX01 "]" 6 A_WeaponReady
			DX02 ABCDEFG 6 A_WeaponReady
			goto ReadyActual

		ReadyActualIdle3Reloadable:
			DX00 A 6 A_WeaponReady(WRF_ALLOWRELOAD)
			DX01 "]" 6 A_WeaponReady(WRF_ALLOWRELOAD)
			DX02 ABCDEFG 6 A_WeaponReady(WRF_ALLOWRELOAD)
			goto ReadyActual

		ReadyActualIdle3Glow:
			DX03 A 6 Bright
			DX06 ABCDEFGH 6 Bright
			stop

		ReadyActualAmmoCheck:
			DX00 A 0 A_JumpIfInventory("SamsaraReloadMode",1,1)
			goto ReadyActual
			DX00 A 0 A_JumpIfInventory("SamsaraReloadOffPlus",1,"ReadyActual")
			DX00 A 0 A_JumpIfInventory("SamsaraDeusExPlasmaRifleAmmoType",1,2)
			DX00 A 0 A_JumpIfInventory("DeusEx_PlasmaRifleMagazine",1,"ReadyActual") // Plasma Clip
			goto ReloadCheck
			DX00 A 0 A_JumpIfInventory("DeusEx_PlasmaRifleMagazine",6,"ReadyActual") // Nanophage Clip
			goto ReloadCheck

		Deselect:
			DX00 A 0 A_TakeInventory("DeusEx_PlasmaRifleSpread")
			//DX00 A 0 A_TakeInventory("MJ12PlasmaDirectHitToken")
			DX00 A 0 A_GiveInventory("DeusEx_Reloading")
			DX00 A 0 A_JumpIfHealthLower(1,"DeathDeselect")
			DX00 A 3 A_GunFlash("DeselectGlow",GFF_NOEXTCHANGE)
			DX00 RSTUVWX 3
			DX00 Y 0
			TNT1 A 3
			goto DeselectFinish

		DeselectGlow:
			DX03 A 3 Bright
			DX08 ABCDEFG 3 Bright
			DX08 H 0 Bright
			stop

		DeathDeselect:
			TNT1 A 3 A_GunFlash("DeathDeselectGlow",GFF_NOEXTCHANGE)
			TNT1 AAAAAAAA 3
			goto DeselectFinish

		DeathDeselectGlow:
			TNT1 A 0
			stop

		DeselectFinish:
			TNT1 A 0 A_TakeInventory("DeusEx_PREquipped")
			goto DeselectInstant

		Ready: // our "Select" state
			DX00 B 0 A_PlaySound("DeusEx/PlasmaRifle/Select")
			DX00 B 0 A_GiveInventory("DeusEx_PREquipped")
			DX00 B 3 A_GunFlash("ReadyGlow",GFF_NOEXTCHANGE)
			DX00 CDEFGHI 3
			DX00 A 0 A_TakeInventory("DeusEx_Reloading")
			goto ReadyActual

		ReadyGlow:
			DX07 ABCDEFGH 3 Bright
			stop

		Fire:
			DX00 J 0 A_JumpIfInventory("SamsaraDeusExPlasmaRifleAmmoType",1,"FireNanophage")
		FirePlasma:
			DX00 J 0 A_JumpIfInventory("SamsaraReloadMode",1,"FirePlasmaReloadable")
		FirePlasmaNonReloadable:
			DX00 J 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"FirePlasmaWaterCheck")
			DX00 J 0 A_JumpIfInventory("Cell",5,"FirePlasmaWaterCheck")
			goto FireDry

		FirePlasmaReloadable:
			DX00 J 0 A_JumpIfInventory("SamsaraReloadOffPlus",1,"FirePlasmaWaterCheck")
			DX00 J 0 A_JumpIfInventory("DeusEx_PlasmaRifleMagazine",1,"FirePlasmaWaterCheck")
		FirePlasmaReloadableDryCheck:
			DX00 J 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
			DX00 J 0 A_JumpIfInventory("Cell",5,1)
			goto FireDry
			DX00 Z 0 A_TakeInventory("SamsaraDeusExSwappedAmmo")
			goto ReloadStart

		FirePlasmaWaterCheck:
			DX00 J 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"FireDry")
			goto FirePlasmaStart

		FireDry:
			DX00 A 0 A_PlaySound("DeusEx/DryFire",CHAN_6)
			DX00 A 0 A_ClearReFire
			DX00 A 0 A_GunFlash("FireDryGlow",GFF_NOEXTCHANGE)
			DX00 A 4 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			goto ReadyActualAmmoCheck

		FireDryGlow:
			DX03 A 4 Bright
			stop

		FirePlasmaStart:
			DX00 J 0 A_GiveInventory("DeusEx_Firing")
			DX00 J 0 A_AlertMonsters(2100)
			DX00 J 0 A_GunFlash("FireGlow",GFF_NOEXTCHANGE)
			DX00 J 0 A_GiveInventory("SamsaraDeusExPlasmaRiflePlasmaAttackHandler")
			DX00 JKLMN 3 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			DX00 OP 3 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			DX00 Q 0 A_ReFire
			DX00 Q 3 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			goto ReadyActual

		FireGlow:
			TNT1 A 0
			stop

		FireNanophage:
			DX00 J 0 A_JumpIfInventory("SamsaraReloadMode",1,"FireNanophageReloadable")
		FireNanophageNonReloadable:
			DX00 J 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"FireNanophageWaterCheck")
			DX00 J 0 A_JumpIfInventory("Cell",30,"FireNanophageWaterCheck")
			goto FireDry

		FireNanophageReloadable:
			DX00 J 0 A_JumpIfInventory("SamsaraReloadOffPlus",1,"FireNanophageWaterCheck")
			DX00 J 0 A_JumpIfInventory("DeusEx_PlasmaRifleMagazine",6,"FireNanophageWaterCheck")
			goto FirePlasmaReloadableDryCheck

		FireNanophageWaterCheck:
			DX00 J 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"FireDry")
			goto FireNanophageStart

		FireNanophageStart:
			DX00 J 0 A_GiveInventory("DeusEx_Firing")
			DX00 J 0 A_AlertMonsters(2100)
			DX00 J 0 A_GunFlash("FireGlow",GFF_NOEXTCHANGE)
			DX00 J 0 A_GiveInventory("SamsaraDeusExPlasmaRifleNanophageAttackHandler")
			DX00 JKLMN 4 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			DX00 OP 4 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			DX00 Q 0 A_ReFire
			DX00 Q 4 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			goto ReadyActual

		AltFire:
			DX00 Z 0 A_JumpIfInventory("SamsaraDeusExPlasmaRifleAmmoType",1,"AltFirePlasma")
		AltFireNanophage:
			DX00 Z 0 A_JumpIfInventory("SamsaraReloadMode",1,"AltFireNanophageReloadable")
		AltFireNanophageNonReloadable:
			DX00 Z 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"AltFireSwap")
			DX00 Z 0 A_JumpIfInventory("Cell",30,"AltFireSwap")
			goto ReadyActual

		AltFireNanophageReloadable:
			DX00 Z 0 A_JumpIfInventory("SamsaraReloadOffPlus",1,"AltFireSwap")
			DX00 Z 0 A_JumpIfInventory("DeusEx_PlasmaRifleMagazine",6,"AltFireSwap")
		AltFireNanophageReloadableDryCheck:
			DX00 Z 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
			DX00 Z 0 A_JumpIfInventory("Cell",5,1)
			goto ReadyActual
			DX00 Z 0 A_TakeInventory("SamsaraDeusExSwappedAmmo")
			goto ReloadStart

		AltFireSwap:
			DX00 Z 0 A_GiveInventory("SamsaraDeusExSwappedAmmo")
			DX00 Z 0 A_JumpIfInventory("SamsaraDeusExPlasmaRifleAmmoType",1,"AltFireSwapPlasma")
		AltFireSwapNanophage:
			DX00 Z 0 A_GiveInventory("SamsaraDeusExPlasmaRifleAmmoType")
			DX00 Z 0 A_Print("Plasma Rifle now has Nanophage Clip loaded.",2)
			goto ReloadStart

		AltFirePlasma:
			DX00 Z 0 A_JumpIfInventory("SamsaraReloadMode",1,"AltFirePlasmaReloadable")
		AltFirePlasmaNonReloadable:
			DX00 Z 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"AltFireSwap")
			DX00 Z 0 A_JumpIfInventory("Cell",5,"AltFireSwap")
			goto ReadyActual

		AltFirePlasmaReloadable:
			DX00 Z 0 A_JumpIfInventory("SamsaraReloadOffPlus",1,"AltFireSwap")
			DX00 Z 0 A_JumpIfInventory("DeusEx_PlasmaRifleMagazine",1,"AltFireSwap")
			goto AltFireNanophageReloadableDryCheck

		AltFireSwapPlasma:
			DX00 Z 0 A_TakeInventory("SamsaraDeusExPlasmaRifleAmmoType")
			DX00 Z 0 A_Print("Plasma Rifle now has Plasma Clip loaded.",2)
			goto ReloadStart

		Reload:
		ReloadCheck:
			DX00 A 0 A_JumpIfInventory("DeusEx_PlasmaRifleMagazine",0,"ReadyActual")
			DX00 A 0 A_JumpIfInventory("SamsaraReloadOffPlus",1,2)
			DX00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
			DX00 A 0 A_JumpIfInventory("Cell",5,1)
			goto ReadyActual
			DX00 Z 0 A_TakeInventory("SamsaraDeusExSwappedAmmo")
			goto ReloadStart

		ReloadStart:
			//DX00 Z 0 A_TakeInventory("MJ12PlasmaDirectHitToken")
			DX00 Z 0 A_GiveInventory("DeusEx_Reloading")
			DX00 Z 0 A_GunFlash("ReloadGlow",GFF_NOEXTCHANGE)
			DX00 Z 0 A_PlaySound("DeusEx/PlasmaRifle/Reload1")
			DX00 "Z[\]" 3 A_WeaponReady(WRF_NOFIRE)
			DX01 A 0 A_JumpIfInventory("SPModeOn",1,2)
			DX01 A 0 A_JumpIfInventory("CoopModeOn",1,1)
			goto ReloadContinueAdvanced
			DX01 A 0 A_JumpIfInventory("DeusEx_HeavyWeaponSkill",0,"ReloadContinueMaster")
			DX01 A 0 A_JumpIfInventory("DeusEx_HeavyWeaponSkill",3,"ReloadContinueAdvanced")
			DX01 A 0 A_JumpIfInventory("DeusEx_HeavyWeaponSkill",2,"ReloadContinueProficient")
			DX01 A 0 A_JumpIfInventory("DeusEx_HeavyWeaponSkill",1,"ReloadContinueTrained")
		ReloadContinueUntrained:
			DX01 ABCDEFGHI 3 A_WeaponReady(WRF_NOFIRE)
		ReloadContinueTrained:
			DX01 ABCDEFGHI 3 A_WeaponReady(WRF_NOFIRE)
		ReloadContinueProficient:
			DX01 ABCDEFGHI 3 A_WeaponReady(WRF_NOFIRE)
		ReloadContinueAdvanced:
			DX01 ABCDEFGHI 3 A_WeaponReady(WRF_NOFIRE)
		ReloadContinueMaster:
			DX01 J 0 A_TakeInventory("DeusEx_Reloading")
			DX01 J 0 A_PlaySound("DeusEx/PlasmaRifle/Reload2")
			DX01 JKL 3 A_WeaponReady(WRF_NOFIRE)
			DX00 A 0 A_JumpIfInventory("SamsaraDeusExSwappedAmmo",1,"ReloadDone")
			DX00 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReloadAmmo")
			goto ReloadDone

		ReloadDone:
			DX00 A 0
			goto ReadyActual

		ReloadAmmo:
			DX00 A 0 A_JumpIfInventory("DeusEx_PlasmaRifleMagazine",0,"ReloadDone")
			DX00 A 0 A_JumpIfInventory("SamsaraReloadOffPlus",1,2)
			DX00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
			DX00 A 0 A_JumpIfInventory("Cell",5,1)
			goto ReloadDone
			DX00 A 0 A_JumpIfInventory("SamsaraReloadOffPlus",1,2)
			DX00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
			DX00 A 0 A_TakeInventory("Cell",5)
			DX00 A 0 A_GiveInventory("DeusEx_PlasmaRifleMagazine")
			loop

		ReloadGlow:
			DX10 ABCD 3 Bright
			DX10 E 0 A_JumpIfInventory("SPModeOn",1,2)
			DX10 E 0 A_JumpIfInventory("CoopModeOn",1,1)
			goto ReloadContinueAdvancedGlow
			DX10 E 0 A_JumpIfInventory("DeusEx_HeavyWeaponSkill",0,"ReloadContinueMasterGlow")
			DX10 E 0 A_JumpIfInventory("DeusEx_HeavyWeaponSkill",3,"ReloadContinueAdvancedGlow")
			DX10 E 0 A_JumpIfInventory("DeusEx_HeavyWeaponSkill",2,"ReloadContinueProficientGlow")
			DX10 E 0 A_JumpIfInventory("DeusEx_HeavyWeaponSkill",1,"ReloadContinueTrainedGlow")
		ReloadContinueUntrainedGlow:
			DX10 EFGHIJKLM 3 Bright
		ReloadContinueTrainedGlow:
			DX10 EFGHIJKLM 3 Bright
		ReloadContinueProficientGlow:
			DX10 EFGHIJKLM 3 Bright
		ReloadContinueAdvancedGlow:
			DX10 EFGHIJKLM 3 Bright
		ReloadContinueMasterGlow:
			DX10 NOP 3 Bright
			stop
	}
}

actor SamsaraDeusExPlasmaRiflePlasmaAttackHandler : Trigger
{
	States
	{
	// Ammo checking/taking stuff
	Pickup:
		TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupReloadable")
	PickupNonReloadable:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupAttack")
		TNT1 A 0 A_JumpIfInventory("Cell",5,1)
		stop
		TNT1 A 0 A_TakeInventory("Cell",5)
		goto PickupAttack
	PickupReloadable:
		TNT1 A 0 A_JumpIfInventory("SamsaraReloadOffPlus",1,"PickupAttack")
		TNT1 A 0 A_JumpIfInventory("DeusEx_PlasmaRifleMagazine",1,1)
		stop
		TNT1 A 0 A_TakeInventory("DeusEx_PlasmaRifleMagazine",1)
		goto PickupAttack

	// Attack stuff
	PickupAttack:
		TNT1 A 0 A_PlaySound("DeusEx/PlasmaRifle/Fire",CHAN_WEAPON)
		TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackCoop")
		TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackCoop")
	PickupAttackDM:
		TNT1 A 0 A_FireCustomMissile("DeusEx_GreenPlasmaBolt",CallACS("DeusEx_Decorate", 5, 4, 4)*frandom(-1.0,1.0),false,0,12,0,CallACS("DeusEx_Decorate", 5, 4, 4)*frandom(-1.0,1.0))
		TNT1 A 0 A_FireCustomMissile("DeusEx_GreenPlasmaBolt",CallACS("DeusEx_Decorate", 5, 4, 4)*frandom(-1.0,1.0),false,-7,5,0,CallACS("DeusEx_Decorate", 5, 4, 4)*frandom(-1.0,1.0))
		TNT1 A 0 A_FireCustomMissile("DeusEx_GreenPlasmaBolt",CallACS("DeusEx_Decorate", 5, 4, 4)*frandom(-1.0,1.0),false,7,5,0,CallACS("DeusEx_Decorate", 5, 4, 4)*frandom(-1.0,1.0))
		goto PickupFinish
	PickupAttackCoop:
		TNT1 A 0 A_FireCustomMissile("DeusEx_GreenPlasmaBoltCoop",CallACS("DeusEx_Decorate", 5, 4, 4)*frandom(-1.0,1.0),false,0,12,0,CallACS("DeusEx_Decorate", 5, 4, 4)*frandom(-1.0,1.0))
		TNT1 A 0 A_FireCustomMissile("DeusEx_GreenPlasmaBoltCoop",CallACS("DeusEx_Decorate", 5, 4, 4)*frandom(-1.0,1.0),false,-7,5,0,CallACS("DeusEx_Decorate", 5, 4, 4)*frandom(-1.0,1.0))
		TNT1 A 0 A_FireCustomMissile("DeusEx_GreenPlasmaBoltCoop",CallACS("DeusEx_Decorate", 5, 4, 4)*frandom(-1.0,1.0),false,7,5,0,CallACS("DeusEx_Decorate", 5, 4, 4)*frandom(-1.0,1.0))
		goto PickupFinish

	// Finishing stuff
	PickupFinish:
		TNT1 A 0 A_GiveInventory("DeusEx_PlasmaRifleSpread",5)
		TNT1 A 0 ACS_NamedExecuteWithResult("DeusExRecoil", 18, 3, 3)
		stop
	}
}

actor SamsaraDeusExPlasmaRifleNanophageAttackHandler : Trigger
{
	States
	{
	// Ammo checking/taking stuff
	Pickup:
		TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupReloadable")
	PickupNonReloadable:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupAttack")
		TNT1 A 0 A_JumpIfInventory("Cell",30,1)
		stop
		TNT1 A 0 A_TakeInventory("Cell",30)
		goto PickupAttack
	PickupReloadable:
		TNT1 A 0 A_JumpIfInventory("SamsaraReloadOffPlus",1,"PickupAttack")
		TNT1 A 0 A_JumpIfInventory("DeusEx_PlasmaRifleMagazine",6,1)
		stop
		TNT1 A 0 A_TakeInventory("DeusEx_PlasmaRifleMagazine",6)
		goto PickupAttack

	// Attack stuff
	PickupAttack:
		TNT1 A 0 A_PlaySound("DeusEx/PlasmaRifle/FireNano",CHAN_WEAPON)
		TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackCoop")
		TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackCoop")
	PickupAttackDM:
		TNT1 A 0 A_FireCustomMissile("DeusEx_GreenNanoPhageBolt",0,false,0,12,0,4)
		goto PickupFinish
	PickupAttackCoop:
		TNT1 A 0 A_FireCustomMissile("DeusEx_GreenNanoPhageBoltCoop",0,false,0,12,0,4)
		goto PickupFinish

	// Finishing stuff
	PickupFinish:
		TNT1 A 0 ACS_NamedExecuteWithResult("DeusExRecoil", 12, 6, 3)
		stop
	}
}

Actor DeusEx_PlasmaRifleMagazine : Ammo
{
	Inventory.MaxAmount 16 // was 12
	Tag "Majestic 12 Plasma Rifle Magazine"
	+IGNORESKILL
}

Actor DeusEx_PlasmaRifleSpread : Ammo
{
	Inventory.MaxAmount 90
	Inventory.InterHubAmount 0
	+IGNORESKILL
	+UNDROPPABLE
}

Actor DeusEx_GreenPlasmaBolt
{
	Projectile
	Radius 6
	Height 5
	Speed 24
	Damage (CallACS("DeusEx_WeaponSkillDamage", 5, 40))
	RenderStyle Add
	Alpha 0.9
	+NOEXTREMEDEATH
	+FORCERADIUSDMG
	+HITTRACER
	+BRIGHT
	DamageType "DeusExBurned"
	States
	{
		Spawn:
			DX00 AAAAAAAA 0 A_SpawnItemEx("DeusEx_PlasmaParticle",0,frandom(-2.0,2.0),0,frandom(-1.0,-0.5),frandom(-1.0,1.0),frandom(-0.5,0.5))
			DX00 A 1
			Loop
		/*XDeath:
		Crash:
			TNT1 A 0 A_GiveToTarget("MJ12PlasmaDirectHitToken")*/
		Death:
			TNT1 A 0 A_PlaySound("DeusEx/PlasmaRifle/Hit", CHAN_BODY)
			//TNT1 A 0 A_SpawnItemEX("DeusEx_ExplosionMid", 0,0,0,0,0,0,0, SXF_NOCHECKPOSITION|SXF_CLIENTSIDE)
			TNT1 A 0 A_AlertMonsters(2100)
			TNT1 A 0 A_SpawnItemEx("DeusEx_PlasmaSmoke", 0, 0, 0, fRandom(-1.0,1.0), fRandom(-1.0,1.0), 2, 0, SXF_CLIENTSIDE)
			TNT1 A 2 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 16), 60)
			TNT1 B 2
			TNT1 C 0 A_SpawnItemEx("DeusEx_PlasmaSmoke", 0, 0, 0, fRandom(-1.0,1.0), fRandom(-1.0,1.0), 2, 0, SXF_CLIENTSIDE)
			TNT1 C 2 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 16), 120)
			TNT1 D 2
			TNT1 E 0 A_SpawnItemEx("DeusEx_PlasmaSmoke", 0, 0, 0, fRandom(-1.0,1.0), fRandom(-1.0,1.0), 2, 0, SXF_CLIENTSIDE)
			TNT1 E 2 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 16), 180, 0)
			TNT1 F 2
			TNT1 F 0 A_SpawnItemEx("DeusEx_PlasmaSmoke", 0, 0, 0, fRandom(-1.0,1.0), fRandom(-1.0,1.0), 2, 0, SXF_CLIENTSIDE)
			TNT1 F 4 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 16), 240, 0)
			TNT1 F 0 A_SpawnItemEx("DeusEx_PlasmaSmoke", 0, 0, 0, fRandom(-1.0,1.0), fRandom(-1.0,1.0), 2, 0, SXF_CLIENTSIDE)
			TNT1 F 4 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 16), 300, 0)
			Stop
	}
}

Actor DeusEx_GreenPlasmaBoltCoop : DeusEx_GreenPlasmaBolt { +THRUSPECIES Species "Player" }

Actor DeusEx_GreenNanoPhageBolt
{
	Projectile
	Radius 12
	Height 15
	Speed 32
	Gravity 0.5
	Damage (0)
	RenderStyle Add
	Alpha 0.9
	-NOGRAVITY
	+HITTRACER
	+FORCERADIUSDMG
	+NOEXTREMEDEATH
	+BRIGHT
	DamageType "DeusExBurned"
	States
	{
		Spawn:
			DX00 AAAAA 0 A_SpawnItemEx("DeusEx_PlasmaSmoke", Random(-4,4), 0, Random(-5,5), Random(-5,5), 0, Random(1,4), 0, SXF_CLIENTSIDE)
			DX00 A 1
			Loop
		Death:
			TNT1 A 0 A_NoGravity
		Pulse:
			TNT1 A 0 A_PlaySound("DeusEx/PlasmaRifle/Hit", CHAN_BODY)
			TNT1 A 0 A_AlertMonsters(4200)
			TNT1 A 0 A_SpawnItemEX("DeusEx_GreenShockWaveHugeSpawner", 0,0,0,0,0,0,0, SXF_NOCHECKPOSITION|SXF_CLIENTSIDE)
			TNT1 AAAAAAAA 0 A_SpawnItemEx("DeusEx_PlasmaSmoke2", 0, 0, 0, fRandom(-1.0,1.0), fRandom(-1.0,1.0), fRandom(1.0,3.0), 0, SXF_CLIENTSIDE)
			TNT1 A 2 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 160), 120)
			TNT1 A 2 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 160), 240)
			TNT1 A 2 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 160), 360, 0)
			TNT1 A 2 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 160), 480, 0)
			TNT1 A 2 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 160), 600, 0)
			Stop
	}
}

Actor DeusEx_GreenNanoPhageBoltCoop : DeusEx_GreenNanoPhageBolt { +THRUSPECIES Species "Player" +MTHRUSPECIES }

actor SamsaraDeusExGEPGunAmmoType : Boolean {}
actor DeusEx_GEPGunLockTimer : Counter { Inventory.MaxAmount 20 }
actor SamsaraDeusExGEPGunLockDisabled : Boolean {}

Actor DeusEx_GEPGun : DeusExWeapon
{
	Weapon.SelectionOrder 2100
	Weapon.SlotNumber 5
	Weapon.SlotPriority 1
	Weapon.AmmoType1 "DeusEx_GEPGunMagazine"
	Weapon.AmmoType2 "RocketAmmo"
	Weapon.AmmoUse1 1
	Weapon.AmmoGive2 4
	+WEAPON.EXPLOSIVE
	Tag "Guided Explosive Projectile Gun"
	Inventory.PickupMessage "You found a Guided Explosive Projectile (GEP) Gun."
    Inventory.Icon "DXCMPW07"
	Obituary "%o couldn't outrun %k's GEPs."
	States
	{
		Spawn:
			DX99 A -1
			stop

		ReadyActual:
			DX00 A 0 A_TakeInventory("SamsaraDeusExGEPGunLockDisabled")
			DX00 A 0 A_JumpIfInventory("SamsaraReloadMode",2,"ReadyActualReloadable")
		ReadyActualNonReloadable:
			DX00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"ReadyActualNonReloadableAmmo")
			DX00 A 0 A_JumpIfInventory("RocketAmmo",1,"ReadyActualNonReloadableAmmo")
			goto ReadyActualNonReloadableNoAmmo

		ReadyActualNonReloadableNoAmmo:
			DX00 A 1 A_WeaponReady
			goto ReadyActualJumpNoAmmo

		ReadyActualNonReloadableAmmo:
			DX00 A 1 A_WeaponReady
			goto ReadyActualJump

		ReadyActualReloadable:
			DX00 A 1 A_WeaponReady(WRF_ALLOWRELOAD)
			goto ReadyActualJump

		ReadyActualJumpNoAmmo:
			DX00 A 0 A_Jump(4,"ReadyActualIdle1","ReadyActualIdle2","ReadyActualIdle3")
			goto ReadyActualNoAmmoCheck

		ReadyActualJump:
			DX00 A 0 A_Jump(4,"ReadyActualIdle1","ReadyActualIdle2","ReadyActualIdle3")
			goto ReadyActualAmmoCheck

		ReadyActualIdle1:
			DX00 A 0 A_JumpIfInventory("SamsaraReloadMode",2,"ReadyActualIdle1Reloadable")
		ReadyActualIdle1NonReloadable:
			DX00 A 5 A_WeaponReady
			DX01 MNOPQRST 5 A_WeaponReady
			goto ReadyActual

		ReadyActualIdle1Reloadable:
			DX00 A 5 A_WeaponReady(WRF_ALLOWRELOAD)
			DX01 MNOPQRST 5 A_WeaponReady(WRF_ALLOWRELOAD)
			goto ReadyActual

		ReadyActualIdle2:
			DX00 A 0 A_JumpIfInventory("SamsaraReloadMode",2,"ReadyActualIdle2Reloadable")
		ReadyActualIdle2NonReloadable:
			DX00 A 5 A_WeaponReady
			DX01 "UVWXYZ[\" 5 A_WeaponReady
			goto ReadyActual

		ReadyActualIdle2Reloadable:
			DX00 A 5 A_WeaponReady(WRF_ALLOWRELOAD)
			DX01 "UVWXYZ[\" 5 A_WeaponReady(WRF_ALLOWRELOAD)
			goto ReadyActual

		ReadyActualIdle3:
			DX00 A 0 A_JumpIfInventory("SamsaraReloadMode",2,"ReadyActualIdle3Reloadable")
		ReadyActualIdle3NonReloadable:
			DX00 A 5 A_WeaponReady
			DX01 "]" 5 A_WeaponReady
			DX02 ABCDEFG 5 A_WeaponReady
			goto ReadyActual

		ReadyActualIdle3Reloadable:
			DX00 A 5 A_WeaponReady(WRF_ALLOWRELOAD)
			DX01 "]" 5 A_WeaponReady(WRF_ALLOWRELOAD)
			DX02 ABCDEFG 5 A_WeaponReady(WRF_ALLOWRELOAD)
			goto ReadyActual

		ReadyActualNoAmmoCheck:
			DX00 A 0 A_JumpIfInventory("SamsaraReloadMode",2,"ReadyActualAmmoCheck")
			DX00 A 0 A_JumpIfInventory("SamsaraReloadMode",1,1)
            goto ReadyActual
			DX00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"ReloadStart")
			DX00 A 0 A_JumpIfInventory("RocketAmmo",1,"ReloadStart")
			goto ReadyActual

		ReadyActualAmmoCheck:
			DX00 A 0 A_JumpIfInventory("SamsaraReloadMode",2,1)
			goto ReadyActual
			DX00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"ReadyActual")
			DX00 A 0 A_JumpIfInventory("DeusEx_GEPGunMagazine",1,"ReadyActual")
			goto ReloadCheck

		Deselect:
			DX00 A 0 A_TakeInventory("SamsaraDeusExGEPGunLockDisabled")
			DX00 A 0 A_GiveInventory("DeusEx_Reloading")
			DX00 A 4 A_JumpIfHealthLower(1,"DeathDeselect")
			DX00 QRSTUVWXYZ 4
			goto DeselectFinish

		DeathDeselect:
			TNT1 AAAAAAAAAAA 4
			goto DeselectFinish

		DeselectFinish:
			TNT1 A 0 A_TakeInventory("DeusEx_GEPGunLockTimer")
			TNT1 A 0 A_TakeInventory("Unreal_TargetLocked")
			TNT1 A 0 A_TakeInventory("DeusEx_GEPGunEquipped")
			goto DeselectInstant

		Ready: // our "Select" state
			DX00 B 0 A_PlaySound("DeusEx/GEPGun/Select")
			DX00 B 0 A_GiveInventory("DeusEx_GEPGunEquipped")
			DX00 B 0 A_TakeInventory("SamsaraDeusExGEPGunLockDisabled")
			DX00 B 0 A_TakeInventory("DeusEx_GEPGunLockTimer")
			DX00 B 0 A_TakeInventory("Unreal_TargetLocked")
			DX00 B 4 ACS_NamedExecuteWithResult("DeusExGEPTargeter")
			DX00 CDEFGHIJK 4
			DX00 A 0 A_TakeInventory("DeusEx_Reloading")
			goto ReadyActual

		Fire:
			DX00 L 0 A_JumpIfInventory("SamsaraReloadMode",2,"FireReloadable")
		FireNonReloadable:
			DX00 L 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"FireWaterCheck")
			DX00 L 0 A_JumpIfInventory("RocketAmmo",1,"FireWaterCheck")
			goto FireDry

		FireReloadable:
			DX00 L 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"FireWaterCheck")
			DX00 L 0 A_JumpIfInventory("DeusEx_GEPGunMagazine",1,"FireWaterCheck")
		FireReloadableDryCheck:
			DX00 L 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
			DX00 L 0 A_JumpIfInventory("RocketAmmo",1,1)
			goto FireDry
			DX00 "[" 0 A_TakeInventory("SamsaraDeusExSwappedAmmo")
			goto ReloadStart

		FireWaterCheck:
			DX00 L 0 A_JumpIfInventory("SamsaraCanFireWeaponsUnderwater",1,"FireStart")
			DX00 L 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"FireUnderwater")
			goto FireStart

		FireDry:
			DX00 A 0 A_PlaySound("DeusEx/DryFire",CHAN_6)
			DX00 A 0 A_ClearReFire
			DX00 A 4 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			goto ReadyActualNoAmmoCheck

		FireUnderwater: // separate check for reloadmode 1
			DX00 A 0 A_PlaySound("DeusEx/DryFire",CHAN_6)
			DX00 A 0 A_ClearReFire
			DX00 A 4 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			goto ReadyActualAmmoCheck

		FireStart:
			DX00 L 0 A_GiveInventory("SamsaraDeusExGEPGunLockDisabled")
			DX00 L 0 A_GiveInventory("DeusEx_Firing")
			DX00 L 0 A_AlertMonsters
			DX00 L 0 A_GiveInventory("SamsaraDeusExGEPGunAttackHandler")
			DX00 LMNOP 5 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			DX00 A 0 A_JumpIfInventory("SamsaraReloadMode",2,"ReadyActual")
			goto ReadyActualNoAmmoCheck

		AltFire:
			DX00 A 0 A_JumpIfInventory("SamsaraReloadMode",2,"AltFireReloadable")
		AltFireNonReloadable:
			DX00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"AltFireSwap")
			DX00 A 0 A_JumpIfInventory("RocketAmmo",1,"AltFireSwap")
			goto ReadyActual

		AltFireReloadable:
			DX00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"AltFireSwap")
			DX00 A 0 A_JumpIfInventory("DeusEx_GEPGunMagazine",1,"AltFireSwap")
		AltFireReloadableDryCheck:
			DX00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
			DX00 A 0 A_JumpIfInventory("RocketAmmo",1,1)
			goto ReadyActual
			DX00 A 0 A_TakeInventory("SamsaraDeusExSwappedAmmo")
			goto ReloadStart

		AltFireSwap:
			DX00 A 0 A_GiveInventory("SamsaraDeusExSwappedAmmo")
			DX00 A 0 A_JumpIfInventory("SamsaraDeusExGEPGunAmmoType",1,"AltFireSwapRockets")
		AltFireSwapWPRockets:
			DX00 A 0 A_GiveInventory("SamsaraDeusExGEPGunAmmoType")
			DX00 A 0 A_Print("Guided Explosive Projectile (GEP) Gun now has WP Rockets loaded.",2)
			goto ReloadStart

		AltFireSwapRockets:
			DX00 A 0 A_TakeInventory("SamsaraDeusExGEPGunAmmoType")
			DX00 A 0 A_Print("Guided Explosive Projectile (GEP) Gun now has Rockets loaded.",2)
			goto ReloadStart

		Reload:
		ReloadCheck:
			DX00 A 0 A_JumpIfInventory("DeusEx_GEPGunMagazine",0,"ReadyActual")
			DX00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
			DX00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
			DX00 A 0 A_JumpIfInventory("RocketAmmo",1,1)
			goto ReadyActual
			DX00 A 0 A_TakeInventory("SamsaraDeusExSwappedAmmo")
			goto ReloadStart

		ReloadStart:
			DX00 A 0 A_GiveInventory("SamsaraDeusExGEPGunLockDisabled")
			DX00 A 0 A_GiveInventory("DeusEx_Reloading")
			DX00 A 0 A_TakeInventory("DeusEx_GEPGunLockTimer")
			DX00 A 0 A_TakeInventory("Unreal_TargetLocked")
			DX00 A 0 A_PlaySound("DeusEx/GEPGun/Reload")
			DX00 "A[\]" 5 A_WeaponReady(WRF_NOFIRE)
			DX01 ABCDEFGH 5 A_WeaponReady(WRF_NOFIRE)
		ReloadFinish:
			DX01 I 0 A_TakeInventory("DeusEx_Reloading")
			DX01 IJKL 5 A_WeaponReady(WRF_NOFIRE)
			DX00 A 0 A_JumpIfInventory("SamsaraDeusExSwappedAmmo",1,"ReloadDone")
			DX00 A 0 A_JumpIfInventory("SamsaraReloadMode",2,"ReloadAmmo")
			goto ReloadDone

		ReloadDone:
			DX00 A 0
			goto ReadyActual

		ReloadAmmo:
			DX00 A 0 A_JumpIfInventory("DeusEx_GEPGunMagazine",0,"ReloadDone")
			DX00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
			DX00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
			DX00 A 0 A_JumpIfInventory("RocketAmmo",1,1)
			goto ReloadDone
			DX00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
			DX00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
			DX00 A 0 A_TakeInventory("RocketAmmo",1)
			DX00 A 0 A_GiveInventory("DeusEx_GEPGunMagazine")
			loop
	}
}

actor SamsaraDeusExGEPGunAttackHandler : Trigger
{
    States
    {
      // Ammo checking/taking stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",2,"PickupReloadable")
      PickupNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,1)
        goto PickupFinish
        TNT1 A 0 A_TakeInventory("RocketAmmo",1)
        goto PickupAttack

      PickupReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("DeusEx_GEPGunMagazine",1,1)
        goto PickupFinish
        TNT1 A 0 A_TakeInventory("DeusEx_GEPGunMagazine",1)
        goto PickupAttack

      // Attack stuff
      PickupAttack:
        TNT1 A 0 A_JumpIfInventory("SamsaraDeusExGEPGunAmmoType",1,"PickupAttackWPRockets")
      // Rockets
      PickupAttackRockets:
        TNT1 A 0 A_PlaySound("DeusEx/GEPGun/Fire",CHAN_WEAPON)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackRocketsCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackRocketsCoop")
      PickupAttackRocketsDM:
        TNT1 A 0 A_JumpIfInventory("Unreal_TargetLocked",1,"PickupAttackRocketsDMHoming")
        TNT1 A 0 A_FireCustomMissile("DeusEx_GEPRocket",0,false,12,10)
        goto PickupRecoil

      PickupAttackRocketsDMHoming:
        TNT1 A 0 A_FireCustomMissile("DeusEx_GEPRocketHoming",0,false,12,10)
        goto PickupRecoil

      PickupAttackRocketsCoop:
        TNT1 A 0 A_JumpIfInventory("Unreal_TargetLocked",1,"PickupAttackRocketsCoopHoming")
        TNT1 A 0 A_FireCustomMissile("DeusEx_GEPRocketCoop",0,false,12,10)
        goto PickupRecoil

      PickupAttackRocketsCoopHoming:
        TNT1 A 0 A_FireCustomMissile("DeusEx_GEPRocketHomingCoop",0,false,12,10)
        goto PickupRecoil

      // WP Rockets
      PickupAttackWPRockets:
        TNT1 A 0 A_PlaySound("DeusEx/GEPGun/FireWP",CHAN_WEAPON)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackWPRocketsCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackWPRocketsCoop")
      PickupAttackWPRocketsDM:
        TNT1 A 0 A_JumpIfInventory("Unreal_TargetLocked",1,"PickupAttackWPRocketsDMHoming")
        TNT1 A 0 A_FireCustomMissile("DeusEx_WPRocket",0,false,12,10)
        goto PickupRecoil

      PickupAttackWPRocketsDMHoming:
        TNT1 A 0 A_FireCustomMissile("DeusEx_WPRocketHoming",0,false,12,10)
        goto PickupRecoil

      PickupAttackWPRocketsCoop:
        TNT1 A 0 A_JumpIfInventory("Unreal_TargetLocked",1,"PickupAttackWPRocketsCoopHoming")
        TNT1 A 0 A_FireCustomMissile("DeusEx_WPRocketCoop",0,false,12,10)
        goto PickupRecoil

      PickupAttackWPRocketsCoopHoming:
        TNT1 A 0 A_FireCustomMissile("DeusEx_WPRocketHomingCoop",0,false,12,10)
        goto PickupRecoil

      // Recoil stuff
      PickupRecoil:
        TNT1 A 0 ACS_NamedExecuteWithResult("DeusExRecoil", 24, 6, 3)
        goto PickupFinish

      // Finishing stuff
      PickupFinish:
        TNT1 A 0 A_TakeInventory("DeusEx_GEPGunLockTimer")
        TNT1 A 0 A_TakeInventory("Unreal_TargetLocked")
        stop
    }
}

Actor DeusEx_GEPGunMagazine : Ammo
{
	Inventory.MaxAmount 1
	Tag "Guided Explosive Projectile Gun Magazine"
	+IGNORESKILL
}

Actor DeusEx_GEPRocket
{
	Projectile
	Radius 8
	Height 6
	Damage (0)
	Speed 20
	+FORCERADIUSDMG
	DamageType "DeusExExploded"
	//ActiveSound "DeusEx/GEPGun/Approach"
	Decal "DeusExExplosionDecal"
	var int user_rocketpitch;
	States
	{
		Spawn:
			DX00 A 0 NoDelay A_PlaySound("DeusEx/GEPGun/Approach",CHAN_VOICE,0.5,true)
			DX00 A 0 A_SeekerMissile(90,90,SMF_PRECISE)
			DX00 A 0 A_SetUserVar("user_rocketpitch",CallACS("SamsaraProjectileMovementPitch")/182.0)
			DX00 A 0 A_SpawnItemEx("DeusEx_RocketFlameTrail",(-5*cos(user_rocketpitch))+(2*sin(user_rocketpitch)),0,(-5*sin(user_rocketpitch))+(2*cos(user_rocketpitch)),0,0,0,0,SXF_CLIENTSIDE)
			DX00 A 0 A_SpawnItemEx("DeusEx_RocketFlameTrail",(-10*cos(user_rocketpitch))+(2*sin(user_rocketpitch)),0,-10*sin(user_rocketpitch)+(2*cos(user_rocketpitch)),0,0,0,0,SXF_CLIENTSIDE)
			DX00 A 0 A_SpawnItemEx("DeusEx_RocketFlameTrail",(-15*cos(user_rocketpitch))+(2*sin(user_rocketpitch)),0,-15*sin(user_rocketpitch)+(2*cos(user_rocketpitch)),0,0,0,0,SXF_CLIENTSIDE)
			DX00 A 0 A_SpawnItemEx("DeusEx_RocketFlameTrail",(-20*cos(user_rocketpitch))+(2*sin(user_rocketpitch)),0,-20*sin(user_rocketpitch)+(2*cos(user_rocketpitch)),0,0,0,0,SXF_CLIENTSIDE)
			DX00 A 0 A_SpawnItemEx("DeusEx_RocketSmoke",(-5*cos(user_rocketpitch))-(4*sin(user_rocketpitch)),0,(-5*sin(user_rocketpitch))-(4*cos(user_rocketpitch)),(0.25*cos(user_rocketpitch))+(0.25*sin(user_rocketpitch)),0,(0.25*sin(user_rocketpitch))+(0.25*cos(user_rocketpitch)),0,SXF_CLIENTSIDE)
			DX00 A 1 A_SpawnItemEx("DeusEx_RocketSmoke",(-15*cos(user_rocketpitch))-(4*sin(user_rocketpitch)),0,(-15*sin(user_rocketpitch))-(4*cos(user_rocketpitch)),(0.25*cos(user_rocketpitch))+(0.25*sin(user_rocketpitch)),0,(0.25*sin(user_rocketpitch))+(0.25*cos(user_rocketpitch)),0,SXF_CLIENTSIDE)
			loop

		Death:
			TNT1 A 0 A_CheckCeiling(1)
			Goto Death+2
			TNT1 A 0 A_SpawnItemEx("DeusEx_ExplosionCraterCeiling")
			TNT1 A 0 A_CheckFloor(1)
			Goto Death+4
			TNT1 A 0 A_SpawnItemEx("DeusEx_ExplosionCraterFloor")
			TNT1 A 0 A_PlaySound("DeusEx/GEPGun/Explode",CHAN_VOICE)
			TNT1 A 0 A_SpawnItemEX("DeusEx_ExplosionMid", 0,0,0,0,0,0,0, SXF_NOCHECKPOSITION|SXF_CLIENTSIDE)
			TNT1 A 0 A_SpawnItemEX("DeusEx_ShockWaveSpawner", 0,0,0,0,0,0,0, SXF_NOCHECKPOSITION|SXF_CLIENTSIDE)
			TNT1 AAA 0 A_SpawnItemEx("DeusEx_FireComet",0,0,0,frandom(2.0,4.0),0,frandom(4.0,8.0),random(0,360))
			TNT1 A 0 A_AlertMonsters
			TNT1 A 2 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 120), 38, 1, 1, 16)
			TNT1 A 2 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 120), 77, 1, 1, 16)
			TNT1 A 2 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 120), 115, 1, 1, 16)
			TNT1 A 2 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 120), 154, 1, 1, 16)
			TNT1 A 2 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 120), 192, 1, 1, 24)
			Stop
	}
}

Actor DeusEx_GEPRocketCoop : DeusEx_GEPRocket { Species "Player" +THRUSPECIES }

actor DeusEx_GEPRocketHoming : DeusEx_GEPRocket { +SEEKERMISSILE }

actor DeusEx_GEPRocketHomingCoop : DeusEx_GEPRocketHoming
{
	Species "Player"
	+THRUSPECIES
}

Actor DeusEx_WPRocket : DeusEx_GEPRocket
{
	DamageType "DeusExBurned"
	PoisonDamageType "DeusExFlamed"
	PoisonDamage 5, 30, 35
	var int user_angle;
	var int user_pitch;
	States
	{
		Death:
			TNT1 A 0 A_PlaySound("DeusEx/GEPGun/Explode",CHAN_VOICE)
			TNT1 A 0 A_SpawnItemEx("DeusEx_WPExplosion",0,0,0,0,0,0,0,SXF_CLIENTSIDE)
			TNT1 A 0 A_AlertMonsters
			TNT1 A 0 A_SetUserVar("user_angle",-10)
		AdjustAngle:
			TNT1 A 0 A_JumpIf(user_angle >= 360,"DoneTrace")
			TNT1 A 0 A_SetUserVar("user_angle",user_angle+10)
		AdjustPitch:
			TNT1 A 0 A_SetUserVar("user_pitch",-90)
		LoopPitch:
			TNT1 A 0 A_JumpIf(user_pitch >= 90,"AdjustAngle")
			TNT1 A 0 A_SetUserVar("user_pitch",user_pitch+10)
			TNT1 A 0 A_CustomMissile("DeusEx_WPProjectile", 0, 0, user_angle, CMF_AIMOFFSET|CMF_TRACKOWNER|CMF_ABSOLUTEPITCH,user_pitch)
			Loop
		DoneTrace:
			TNT1 AAAAA 0 A_SpawnItemEx("DeusEx_WPSmoke",0,0,0,frandom(0.5,2.0),0,2,random(0,360),SXF_CLIENTSIDE)
			TNT1 A 2
			TNT1 AAAAA 0 A_SpawnItemEx("DeusEx_WPSmoke",0,0,0,frandom(0.5,2.0),0,2,random(0,360),SXF_CLIENTSIDE)
			TNT1 A 2 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 60), 48)
			TNT1 AAAAA 0 A_SpawnItemEx("DeusEx_WPSmoke",0,0,0,frandom(0.5,2.0),0,2,random(0,360),SXF_CLIENTSIDE)
			TNT1 A 2 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 60), 132)
			TNT1 AAAAA 0 A_SpawnItemEx("DeusEx_WPSmoke",0,0,0,frandom(0.5,2.0),0,2,random(0,360),SXF_CLIENTSIDE)
			TNT1 A 2 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 60), 216)
			TNT1 AAAAA 0 A_SpawnItemEx("DeusEx_WPSmoke",0,0,0,frandom(0.5,2.0),0,2,random(0,360),SXF_CLIENTSIDE)
			TNT1 B 2 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 60), 300)
			TNT1 AAAAA 0 A_SpawnItemEx("DeusEx_WPSmoke",0,0,0,frandom(0.5,2.0),0,2,random(0,360),SXF_CLIENTSIDE)
			TNT1 B 2 A_Explode(CallACS("DeusEx_WeaponSkillDamage", 5, 60), 384)
			TNT1 C 4
			TNT1 D 7
			TNT1 EFGH 4
			Stop
	}
}

Actor DeusEx_WPRocketCoop : DeusEx_WPRocket
{
	Species "Player"
	+THRUSPECIES
	States
	{
		Death:
			TNT1 A 0 A_PlaySound("DeusEx/GEPGun/Explode",CHAN_VOICE)
			TNT1 A 0 A_SpawnItemEx("DeusEx_WPExplosion",0,0,0,0,0,0,0,SXF_CLIENTSIDE)
			TNT1 A 0 A_AlertMonsters
			TNT1 A 0 A_SetUserVar("user_angle",-10)
		AdjustAngle:
			TNT1 A 0 A_JumpIf(user_angle >= 360,"DoneTrace")
			TNT1 A 0 A_SetUserVar("user_angle",user_angle+10)
		AdjustPitch:
			TNT1 A 0 A_SetUserVar("user_pitch",-90)
		LoopPitch:
			TNT1 A 0 A_JumpIf(user_pitch >= 90,"AdjustAngle")
			TNT1 A 0 A_SetUserVar("user_pitch",user_pitch+10)
			TNT1 A 0 A_CustomMissile("DeusEx_WPProjectileCoop", 0, 0, user_angle, CMF_AIMOFFSET|CMF_TRACKOWNER|CMF_ABSOLUTEPITCH,user_pitch)
			Loop
	}
}

actor DeusEx_WPRocketHoming : DeusEx_WPRocket { +SEEKERMISSILE }

actor DeusEx_WPRocketHomingCoop : DeusEx_WPRocketHoming
{
	Species "Player"
	+THRUSPECIES
	States
	{
		Death:
			TNT1 A 0 A_PlaySound("DeusEx/GEPGun/Explode",CHAN_VOICE)
			TNT1 A 0 A_SpawnItemEx("DeusEx_WPExplosion",0,0,0,0,0,0,0,SXF_CLIENTSIDE)
			TNT1 A 0 A_AlertMonsters
			TNT1 A 0 A_SetUserVar("user_angle",-10)
		AdjustAngle:
			TNT1 A 0 A_JumpIf(user_angle >= 360,"DoneTrace")
			TNT1 A 0 A_SetUserVar("user_angle",user_angle+10)
		AdjustPitch:
			TNT1 A 0 A_SetUserVar("user_pitch",-90)
		LoopPitch:
			TNT1 A 0 A_JumpIf(user_pitch >= 90,"AdjustAngle")
			TNT1 A 0 A_SetUserVar("user_pitch",user_pitch+10)
			TNT1 A 0 A_CustomMissile("DeusEx_WPProjectileCoop", 0, 0, user_angle, CMF_AIMOFFSET|CMF_TRACKOWNER|CMF_ABSOLUTEPITCH,user_pitch)
			loop
	}
}

actor DeusEx_WPRocketBurner : Trigger
{
    States
    {
      Pickup:
        TNT1 A 0 ACS_NamedExecuteWithResult("DeusExIgnite", 1)
        stop
    }
}

Actor DeusEx_WPProjectile : FastProjectile
{
	Projectile
	Speed 384
	Damage (0)
	Height 4
	Radius 2
	PoisonDamage 5, 30, 35
	DamageType "DeusExFlamed"
	PoisonDamageType "DeusExFlamed"
	Obituary "%k bathed %o in flames."
	+NOEXTREMEDEATH
	+NODAMAGETHRUST
	-BLOODSPLATTER
	+BLOODLESSIMPACT
	+NODAMAGETHRUST
	+HITTRACER
	States
	{
		Spawn:
			TNT1 A 0
			TNT1 A 1
			Stop
		Crash:
		Death:
			TNT1 A 1
			Stop
		XDeath:
			TNT1 A 1 ACS_NamedExecuteWithResult("DeusExIgnite")
			Stop
	}
}

Actor DeusEx_WPProjectileCoop : DeusEx_WPProjectile { Species "Player" +THRUSPECIES }

Actor DeusEx_WPExplosion : DeusEx_ExplosionMid
{
	Scale 1.0
	States
	{
		Spawn:
			DX12 ABC 2
			Stop
	}
}

Actor DeusEx_WPSmoke
{
	Height 4
	Radius 2
	Renderstyle Add
	Gravity 0.1
	-NOGRAVITY
	+FORCEXYBILLBOARD
	States
	{
		Spawn:
			DX13 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_SetScale(scalex+0.025)
			DX14 A 0 A_FadeOut(0.07)
			DX14 A 1 A_SetScale(scalex+0.025)
			DX14 B 0 A_FadeOut(0.07)
			DX14 B 1 A_SetScale(scalex+0.025)
			DX14 C 0 A_FadeOut(0.07)
			DX14 C 1 A_SetScale(scalex+0.025)
			DX14 D 0 A_FadeOut(0.07)
			DX14 D 1 A_SetScale(scalex+0.025)
			DX14 E 0 A_FadeOut(0.07)
			DX14 E 1 A_SetScale(scalex+0.025)
			DX14 F 0 A_FadeOut(0.07)
			DX14 F 1 A_SetScale(scalex+0.025)
			DX14 G 0 A_FadeOut(0.07)
			DX14 G 1 A_SetScale(scalex+0.025)
			DX14 H 0 A_FadeOut(0.07)
			DX14 H 1 A_SetScale(scalex+0.025)
			DX14 I 0 A_FadeOut(0.07)
			DX14 I 1 A_SetScale(scalex+0.025)
			DX14 J 0 A_FadeOut(0.07)
			DX14 J 1 A_SetScale(scalex+0.025)
			DX14 K 0 A_FadeOut(0.07)
			DX14 K 1 A_SetScale(scalex+0.025)
			DX14 L 0 A_FadeOut(0.07)
			DX14 L 1 A_SetScale(scalex+0.025)
			DX14 M 0 A_FadeOut(0.07)
			DX14 M 1 A_SetScale(scalex+0.025)
			DX14 N 0 A_FadeOut(0.07)
			DX14 N 1 A_SetScale(scalex+0.025)
			Stop
	}
}

Actor DeusEx_RocketFlameTrail
{
	Height 4
	Radius 2
	Renderstyle Add
	Scale 0.25
	+NOINTERACTION
	+FORCEXYBILLBOARD
	+BRIGHT
	States
	{
		Spawn:
			DX15 ABCDEFGH 1 A_Fadeout(0.125)
			Stop
	}
}

actor DeusEx_GEPTargeterPuff
{
	Radius 1
	Height 1
	+ALWAYSPUFF
	+BLOODLESSIMPACT
	+DONTBLAST
	+DONTSPLASH
	+FIXMAPTHINGPOS
	+NOBLOCKMAP
	+NOGRAVITY
	+NOTIMEFREEZE
	+NOTRIGGER
	+PUFFGETSOWNER
	+PUFFONACTORS
	+SKYEXPLODE
	States
	{
	// aiming at shootable?
	Spawn:
	XDeath:
	Melee:
		TNT1 A 0
	AimedLockCheck:
		TNT1 A 0 A_JumpIfInTargetInventory("SamsaraDeusExGEPGunLockDisabled",1,"Crash")
	AimedAmmoCheck:
		TNT1 A 0 A_JumpIfInTargetInventory("SamsaraReloadMode",2,"AimedAmmoCheckReloadable")
	AimedAmmoCheckNonReloadable:
		TNT1 A 0 A_JumpIfInTargetInventory("SamsaraHasInfiniteAmmo",1,"AimedStart")
		TNT1 A 0 A_JumpIfInTargetInventory("RocketAmmo",1,"AimedStart")
		goto Crash
	AimedAmmoCheckReloadable:
		TNT1 A 0 A_JumpIfInTargetInventory("SamsaraHasInfiniteAmmo",0,"AimedStart")
		TNT1 A 0 A_JumpIfInTargetInventory("DeusEx_GEPGunMagazine",1,"AimedStart")
		goto Crash

	AimedStart:
		TNT1 A 0 A_GiveToTarget("DeusEx_GEPGunLockTimer",3)
		TNT1 A 0 A_JumpIfInTargetInventory("DeusEx_GEPGunLockTimer",0,"AimedLockOn")
		TNT1 A 0 A_GiveToTarget("DeusEx_TrackSound")
		TNT1 A 1 A_TakeFromTarget("Unreal_TargetLocked")
		stop

	AimedLockOn:
		TNT1 A 0 A_GiveToTarget("DeusEx_LockOnSound")
		TNT1 A 1 A_GiveToTarget("Unreal_TargetLocked")
		stop

	// not aiming at shootable? firing/reloading/switching ammo? ammo depleted?
	Crash:
		TNT1 A 0
	NotAimedStart:
		TNT1 A 0 A_TakeFromTarget("DeusEx_GEPGunLockTimer",5)
	NotAimedLockOff:
		TNT1 A 1 A_TakeFromTarget("Unreal_TargetLocked")
		stop
	}
}

actor DeusEx_GEPTargeterPuffCoop : DeusEx_GEPTargeterPuff { +MTHRUSPECIES }

actor DeusEx_TrackSound : Trigger
{
    States
    {
      Pickup:
        TNT1 A 0 A_PlaySound("DeusEx/GEPGun/Track",CHAN_6)
        stop
    }
}

actor DeusEx_LockOnSound : Trigger
{
    States
    {
      Pickup:
        TNT1 A 0 A_PlaySound("DeusEx/GEPGun/Lock",CHAN_6)
        stop
    }
}

actor SamsaraGoldenEyeWeapon : Weapon
{
    Inventory.PickupMessage "Picked up a new weapon."
    Inventory.PickupSound "Goldeneye/Weaponup"
    Inventory.RestrictedTo "JamesBond"
    Weapon.BobStyle InverseSmooth
    Weapon.BobRangeX 0.3
    Weapon.BobRangeY 0.4
    Weapon.BobSpeed 1.6
    +ALT_AMMO_OPTIONAL
    +AMMO_OPTIONAL
    +NOALERT
    +UNDROPPABLE
    States
    {
      // Dual Init (precautionary; meant to be provided in weapons)
      DualLower:
        TNT1 A 0
        stop

      DualRaise:
        TNT1 A 0
        stop

      // Watch
      WatchReady:
        GE13 T 0 A_JumpIfInventory("BondWatchQueue",1,"WatchRaise")
        GE13 T 4 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE|WRF_DISABLESWITCH)
        loop

      WatchLower:
        GE13 T 0 A_TakeInventory("BondWatchActivate")
        GE13 T 0 A_GiveInventory("BondWatchUIDeinit")
      WatchLowerStart:
        GE13 T 0 ACS_NamedExecuteAlways("BondWatchLookUpAndDown")
        GE13 T 12 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE|WRF_DISABLESWITCH)
        GE13 SRQPONMLKJIHGFEDCBA 2 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE|WRF_DISABLESWITCH)
      WatchLowerDualCheck:
        GE13 A 0 A_JumpIfInventory("BondDualWieldToken",1,1)
        goto WatchLowerFinish
        GE00 A 0 A_GunFlash("DualRaise",GFF_NOEXTCHANGE)
        GE00 A 12 A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH)
      WatchLowerFinish:
        TNT1 A 0 A_TakeInventory("BondWatchQueue")
        TNT1 A 0 SetPlayerProperty(false,false,PROP_FROZEN)
        TNT1 A 0 A_JumpIfInventory("DMModeOn",1,3)
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,2)
        TNT1 A 0 A_TakeInventory("PowerTimeFreezer")
        TNT1 A 0 A_TakeInventory("BondWatchToken")
        TNT1 A 0 A_TakeInventory("BondWatchUIInit")
        TNT1 A 0 ACS_NamedExecuteAlways("BondWeaponSwitch")
        goto BackToReady

      WatchRaise:
        GE13 A 0 A_ZoomFactor(1)
        GE13 A 0 A_TakeInventory("BondAltToggle")
        GE13 A 0 A_TakeInventory("BondZoomToken")
        GE13 A 0 A_TakeInventory("BondZoomAmountModifyActive")
        GE13 A 0 A_JumpIfInventory("BondWatchToken",1,"WatchLower")
        GE13 A 0 A_GiveInventory("BondWatchActivate")
      WatchRaiseDualCheck:
        GE13 A 0 A_JumpIfInventory("BondDualWieldToken",1,1)
        goto WatchRaiseStart
        GE00 A 0 A_GunFlash("DualLower",GFF_NOEXTCHANGE)
        GE00 A 12 A_WeaponReady(WRF_NOFIRE|WRF_DISABLESWITCH)
      WatchRaiseStart:
        GE13 A 0 A_TakeInventory("BondPitchTokens")
        GE13 A 0 A_TakeInventory("BondAngleTokens")
        GE13 A 0 SetPlayerProperty(false,true,PROP_FROZEN)
        GE13 A 0 ACS_NamedExecuteAlways("BondWatchLookUpAndDown")
        GE13 ABCDEFGHIJKLMNOPQRST 2 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE|WRF_DISABLESWITCH)
      WatchRaiseFinish:
        GE13 T 0 A_ZoomFactor(7.5)
        GE13 T 0 A_GiveInventory("BondWatchUIInit")
        GE13 T 0 A_GiveInventory("BondWatchToken")
        GE13 T 0 ACS_NamedExecuteAlways("BondWatchInterface")
        GE13 T 0 A_TakeInventory("BondWatchQueue")
        goto BackToReady

      BackToReady:
        TNT1 A 1 A_JumpIfInventory("BondClass",1,"Ready")
        loop

      // Dual flash remover (used when we're trying to dual wield when we're not supposed to yet)
      DualForceRemoval:
        TNT1 A 0 A_TakeInventory("BondDualWieldToken")
        TNT1 A 0 A_TakeInventory("BondDualReloadSpamProtector")
        TNT1 A 0 A_TakeInventory("BondDualWieldSpamProtector")
        stop
    }
}

actor SamsaraGoldenEyeWeaponSwitchSoundPlayer : Trigger
{
    States
    {
      // Sound playing stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupSource")
      // GoldenEye 007 sounds
      PickupN64:
        TNT1 A 0 A_PlaySound("Goldeneye/Weaponup",CHAN_7)
        stop

      // GoldenEye: Source sounds
      PickupSource:
        TNT1 A 0 A_PlaySound("GoldeneyeSource/Weaponup",CHAN_7)
        stop
    }
}

actor SamsaraGoldenEyeWeaponDrySoundPlayer : Trigger
{
    States
    {
      // Sound playing stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupSource")
      // GoldenEye 007 sounds
      PickupN64:
        TNT1 A 0 A_PlaySound("Goldeneye/DryFire",CHAN_6)
        stop

      // GoldenEye: Source sounds
      PickupSource:
        TNT1 A 0 A_PlaySound("GoldeneyeSource/DryFire",CHAN_6)
        stop
    }
}

actor SamsaraGoldenEyeWeaponReloadSoundPlayer : Trigger
{
    States
    {
      // Sound playing stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupSource")
      // GoldenEye 007 sounds
      PickupN64:
        TNT1 A 0 A_PlaySound("Goldeneye/Reload")
        stop

      // GoldenEye: Source sounds
      PickupSource:
        TNT1 A 0 A_PlaySound("GoldeneyeSource/Reload")
        stop
    }
}

actor SamsaraGoldenEyeStandardCartridgeHandler : Trigger
{
    States
    {
      // Sound playing stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupSource")
      // GoldenEye 007 sounds
      PickupN64:
        TNT1 A 0 A_SpawnItemEx("Goldeneye_Cartridge_Standard",cos(pitch)*22,6,42-(sin(pitch)*22),(2*cos(pitch))+(2*sin(pitch)),frandom(2,3),abs(4*cos(pitch)),0,SXF_TRANSFERPITCH)
        stop

      // GoldenEye: Source sounds
      PickupSource:
        TNT1 A 0 A_SpawnItemEx("Goldeneye_Cartridge_StandardSoundSource",cos(pitch)*22,6,42-(sin(pitch)*22),(2*cos(pitch))+(2*sin(pitch)),frandom(2,3),abs(4*cos(pitch)),0,SXF_TRANSFERPITCH)
        stop
    }
}

actor SamsaraGoldenEyeRifleCartridgeHandler : Trigger
{
    States
    {
      // Sound playing stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupSource")
      // GoldenEye 007 sounds
      PickupN64:
        TNT1 A 0 A_SpawnItemEx("Goldeneye_Cartridge_Rifle",cos(pitch)*22,6,42-(sin(pitch)*22),(2*cos(pitch))+(2*sin(pitch)),frandom(2,3),abs(4*cos(pitch)),0,SXF_TRANSFERPITCH)
        stop

      // GoldenEye: Source sounds
      PickupSource:
        TNT1 A 0 A_SpawnItemEx("Goldeneye_Cartridge_RifleSoundSource",cos(pitch)*22,6,42-(sin(pitch)*22),(2*cos(pitch))+(2*sin(pitch)),frandom(2,3),abs(4*cos(pitch)),0,SXF_TRANSFERPITCH)
        stop
    }
}

actor SamsaraGoldenEyeShellCartridgeHandler : Trigger
{
    States
    {
      // Sound playing stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupSource")
      // GoldenEye 007 sounds
      PickupN64:
        TNT1 A 0 A_SpawnItemEx("Goldeneye_Cartridge_Shell",cos(pitch)*22,6,42-(sin(pitch)*22),(2*cos(pitch))+(2*sin(pitch)),frandom(2,3),abs(4*cos(pitch)),0,SXF_TRANSFERPITCH)
        stop

      // GoldenEye: Source sounds
      PickupSource:
        TNT1 A 0 A_SpawnItemEx("Goldeneye_Cartridge_ShellSoundSource",cos(pitch)*22,6,42-(sin(pitch)*22),(2*cos(pitch))+(2*sin(pitch)),frandom(2,3),abs(4*cos(pitch)),0,SXF_TRANSFERPITCH)
        stop
    }
}

actor SamsaraGoldenEyeDualStandardCartridgeHandler : Trigger
{
    States
    {
      // Sound playing stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupSource")
      // GoldenEye 007 sounds
      PickupN64:
        TNT1 A 0 A_SpawnItemEx("Goldeneye_Cartridge_Standard",cos(pitch)*22,6,42-(sin(pitch)*22),(2*cos(pitch))+(2*sin(pitch)),frandom(2,3),abs(4*cos(pitch)),0,SXF_TRANSFERPITCH)
        stop

      // GoldenEye: Source sounds
      PickupSource:
        TNT1 A 0 A_SpawnItemEx("Goldeneye_Cartridge_StandardSoundSource",cos(pitch)*22,-6,42-(sin(pitch)*22),(2*cos(pitch))+(2*sin(pitch)),frandom(2,3),abs(4*cos(pitch)),0,SXF_TRANSFERPITCH)
        stop
    }
}

actor SamsaraGoldenEyeDualRifleCartridgeHandler : Trigger
{
    States
    {
      // Sound playing stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupSource")
      // GoldenEye 007 sounds
      PickupN64:
        TNT1 A 0 A_SpawnItemEx("Goldeneye_Cartridge_Rifle",cos(pitch)*22,6,42-(sin(pitch)*22),(2*cos(pitch))+(2*sin(pitch)),frandom(2,3),abs(4*cos(pitch)),0,SXF_TRANSFERPITCH)
        stop

      // GoldenEye: Source sounds
      PickupSource:
        TNT1 A 0 A_SpawnItemEx("Goldeneye_Cartridge_RifleSoundSource",cos(pitch)*22,-6,42-(sin(pitch)*22),(2*cos(pitch))+(2*sin(pitch)),frandom(2,3),abs(4*cos(pitch)),0,SXF_TRANSFERPITCH)
        stop
    }
}

actor SamsaraGoldenEyeDualShellCartridgeHandler : Trigger
{
    States
    {
      // Sound playing stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupSource")
      // GoldenEye 007 sounds
      PickupN64:
        TNT1 A 0 A_SpawnItemEx("Goldeneye_Cartridge_Shell",cos(pitch)*22,6,42-(sin(pitch)*22),(2*cos(pitch))+(2*sin(pitch)),frandom(2,3),abs(4*cos(pitch)),0,SXF_TRANSFERPITCH)
        stop

      // GoldenEye: Source sounds
      PickupSource:
        TNT1 A 0 A_SpawnItemEx("Goldeneye_Cartridge_ShellSoundSource",cos(pitch)*22,-6,42-(sin(pitch)*22),(2*cos(pitch))+(2*sin(pitch)),frandom(2,3),abs(4*cos(pitch)),0,SXF_TRANSFERPITCH)
        stop
    }
}

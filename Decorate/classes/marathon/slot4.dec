actor UsingAssaultRifle: Boolean {}
actor AssaultFiredS: Counter {}
actor AssaultClicked: Counter {}
actor AssaultClicked2: Counter {}
actor SamsaraMarathonRifleCanAltReload : Boolean {}
actor SamsaraMarathonRifleCanAltFire : Boolean {}
actor SamsaraMarathonRifleAltReloadWaitTime : Counter {}
actor SamsaraMarathonRifleAltReloadFireLockTime : Counter {}

actor "MA-75B Assault Rifle" : SamsaraMarathonWeapon
{
    Inventory.PickupMessage "You picked up a MA-75B Assault Rifle!"
    Weapon.SlotNumber 4
    Weapon.SelectionOrder 100
    Weapon.AmmoType1 "RifleBullet"
    Weapon.AmmoUse1 1
    Weapon.AmmoType2 "Clip"
    Tag "MA-75B Assault Rifle"
    +NOAUTOAIM
    States
    {
      Spawn:
        RIFL A -1
        stop

      Ready:
        TNT1 A 0 A_GiveInventory("SamsaraMarathonRifleCanAltReload")
        TNT1 A 0 A_GiveInventory("SamsaraMarathonRifleCanAltFire")
        TNT1 A 0 A_JumpIfInventory("AssaultFiredS",1,4)
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadWaitTime",1,3)
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadFireLockTime",1,2)
        ASLT A 1 A_WeaponReady
        goto ReadyCasingSound
        ASLT A 1 A_WeaponReady(WRF_NOSWITCH)
        goto ReadyCasingSound

      ReadyCasingSound:
        TNT1 A 0 A_GiveInventory("SamsaraMarathonCasingSoundHandler")
      ReadyAmmoCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,1)
        goto Ready
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"Ready")
        TNT1 A 0 A_JumpIfInventory("RifleBullet",1,"Ready")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"Reload")
        TNT1 A 0 A_JumpIfInventory("Clip",1,"Reload")
        goto Ready

      Deselect:
        TNT1 A 0 A_TakeInventory("AssaultFiredS")
        TNT1 A 0 A_TakeInventory("AssaultClicked")
        TNT1 A 0 A_TakeInventory("AssaultClicked2")
        TNT1 A 0 A_TakeInventory("MarathonCasingSound")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleCanAltReload")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleCanAltFire")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadWaitTime")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadFireLockTime")
        TNT1 A 0 A_JumpIfHealthLower(1,"DeselectInstant")
        TNT1 A 0 A_Lower
        ASLT A 1 A_Lower
        loop

      Select:
        TNT1 A 0 A_TakeInventory("UsingFists")
        TNT1 A 0 A_TakeInventory("UsingPistols")
        TNT1 A 0 A_TakeInventory("UsingDualPistols")
        TNT1 A 0 A_TakeInventory("UsingSMG")
        TNT1 A 0 A_TakeInventory("UsingPacifier")
        TNT1 A 0 A_TakeInventory("UsingShotguns")
        TNT1 A 0 A_TakeInventory("UsingDualShotguns")
        TNT1 A 0 A_TakeInventory("UsingFusionPistol")
        //TNT1 A 0 A_TakeInventory("UsingAssaultRifle")
        TNT1 A 0 A_TakeInventory("UsingSpanker")
        TNT1 A 0 A_TakeInventory("UsingToasty")
        TNT1 A 0 A_TakeInventory("UsingWMC")
        TNT1 A 0 A_TakeInventory("UsingAlienWeapon")
        TNT1 A 0 A_TakeInventory("UsingAlienWeapon2")
        TNT1 A 0 A_TakeInventory("UsingMarathonInstagib")

        TNT1 A 0 A_GiveInventory("UsingAssaultRifle")
        TNT1 A 0 A_TakeInventory("AssaultFiredS")
        TNT1 A 0 A_TakeInventory("AssaultClicked")
        TNT1 A 0 A_TakeInventory("AssaultClicked2")
        TNT1 A 0 A_TakeInventory("MarathonCasingSound")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleCanAltReload")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleCanAltFire")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadWaitTime")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadFireLockTime")
        TNT1 A 0 A_Raise
        ASLT A 1 A_Raise
        loop

      Fire:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"FireReloadableReloadCheck")
      FireNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"FireStart")
        TNT1 A 0 A_JumpIfInventory("Clip",1,"FireStart")
        goto FireDry

      FireReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"FireStart")
        TNT1 A 0 A_JumpIfInventory("RifleBullet",1,"FireStart")
      FireReloadableDryCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"Reload")
        TNT1 A 0 A_JumpIfInventory("Clip",1,"Reload")
        goto FireDry

      FireReloadableReloadCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",0,1) // only allowed with modern reloading
        goto FireReloadable
        TNT1 A 0 A_JumpIfInventory("SynthFireReload",1,1) // holding attack + reload?
        goto FireReloadable
        TNT1 A 0 A_JumpIfInventory("RifleBullet",0,"FireReloadable") // ignore if full on magazine or insufficient reserve
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"Reload")
        TNT1 A 0 A_JumpIfInventory("Clip",1,"Reload")
        goto FireReloadable

      FireDry:
        TNT1 A 0 A_TakeInventory("MarathonCasingSound")
        TNT1 A 0 A_JumpIfInventory("AssaultClicked",1,"Ready")
        TNT1 A 0 A_TakeInventory("AssaultClicked") // reset
        TNT1 A 0 A_GiveInventory("AssaultClicked",3)
        TNT1 A 0 A_PlaySound("marathon/rifle/dryfire")
        goto Ready

      FireStart:
        TNT1 A 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"FireDry")
        TNT1 A 0 A_AlertMonsters
        TNT1 A 0 A_GiveInventory("MarathonCasingSound")
        TNT1 A 0 A_FireCustomMissile("32mmCasingSpawner",0,false,0,-13)
        TNT1 A 0 A_GiveInventory("SamsaraMarathonRiflePrimaryAttackHandler")
        TNT1 A 0 A_Light2
        ASLT C 1 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        TNT1 A 0 A_Light1
        ASLT B 1 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        TNT1 A 0 A_Light0
        ASLT A 1 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        TNT1 A 0 A_ReFire
        goto Ready

      // AltFire handled in SamsaraMarathonRifleAltFire trigger

      Reload:
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleCanAltFire")
        ASLT D 10 A_TakeInventory("MarathonCasingSound")
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReloadAmmo")
      ReloadFinish:
        ASLT E 11
        ASLT F 10
        goto Ready

      ReloadAmmo:
        TNT1 A 0 A_JumpIfInventory("RifleBullet",0,"ReloadFinish")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        TNT1 A 0 A_JumpIfInventory("Clip",1,1)
        goto ReloadFinish
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        TNT1 A 0 A_TakeInventory("Clip",1)
        TNT1 A 0 A_GiveInventory("RifleBullet")
        TNT1 A 0 A_PlaySound("marathon/rifle/reload")
        loop
    }
}

// Alt fire hack (these two triggers are called in ACS)

actor SamsaraMarathonRifleAltFire : Trigger
{
    States
    {
      // Ready
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleCanAltFire",1,1)
        stop
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadWaitTime",1,"PickupStop")
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadFireLockTime",1,"PickupStop")
        TNT1 A 0 A_JumpIfInventory("AssaultFiredS",1,"PickupStop")
        TNT1 A 0 A_JumpIfInventory("SynthFireRight",1,"PickupStart")
        stop

      // Fire
      PickupStart:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupStartReloadable")
      PickupStartNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupAltFire")
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,"PickupAltFire")
        goto PickupAltFireDry

      PickupStartReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupAltFire")
        TNT1 A 0 A_JumpIfInventory("GrenadeInClip",1,"PickupAltFire")
      PickupStartReloadableDryCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupStop")
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,"PickupStop")
        goto PickupAltFireDry

      PickupAltFireDry:
        TNT1 A 0 A_JumpIfInventory("AssaultClicked2",1,"PickupStop")
        TNT1 A 0 A_TakeInventory("AssaultClicked2") // reset
        TNT1 A 0 A_GiveInventory("AssaultClicked2",26)
        TNT1 A 0 A_PlaySound("marathon/rifle/dryfire")
        stop

      PickupAltFire:
        TNT1 A 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"PickupAltFireDry")
        TNT1 A 0 ACS_NamedExecuteWithResult("SamsaraForcePlayerAttackState")
        TNT1 A 0 A_AlertMonsters
        TNT1 A 0 A_TakeInventory("AssaultFiredS") // reset
        TNT1 A 0 A_GiveInventory("AssaultFiredS",26)
        TNT1 A 0 A_GiveInventory("SamsaraMarathonRifleSecondaryAttackHandler")
        stop
    }
}

actor SamsaraMarathonRifleAltReload : Trigger
{
    States
    {
      // Ready
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleCanAltReload",1,1)
        stop
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadFireLockTime",1,"PickupReloadFinish")
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadWaitTime",1,"PickupReload")
        TNT1 A 0 A_JumpIfInventory("AssaultFiredS",1,"PickupStop")
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupReloadableReloadCheck")
        stop

      PickupReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupStop")
        TNT1 A 0 A_JumpIfInventory("GrenadeInClip",1,"PickupStop")
      PickupReloadableReserveCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupReload")
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,"PickupReload")
        stop

      PickupReloadableReloadCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",0,1) // only allowed with modern reloading
        goto PickupReloadable
        TNT1 A 0 A_JumpIfInventory("SynthFireRight",1,1) // holding altattack?
        goto PickupReloadable
        TNT1 A 0 A_JumpIfInventory("SynthFireReload",1,1) // holding reload as well?
        goto PickupReloadable
        TNT1 A 0 A_JumpIfInventory("GrenadeInClip",0,"PickupReloadable") // ignore if full on magazine or insufficient reserve
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupReload")
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,"PickupReload")
        goto PickupReloadable

      // Reload (wait)
      PickupReload:
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadWaitTime",1,"PickupReloadWaitTimeDecrement")
      PickupReloadWaitTimeStart:
        TNT1 A 0 A_GiveInventory("SamsaraMarathonRifleAltReloadWaitTime",14) // tics before ammo giving
        stop

      PickupReloadWaitTimeDecrement:
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadWaitTime",1)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasDoubleFiringSpeed",1,1)
        goto PickupReloadWaitTimeFinish
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadWaitTime",1)
        goto PickupReloadWaitTimeFinish

      PickupReloadWaitTimeFinish:
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadWaitTime",1,"PickupStop")
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupReloadAmmo")
        goto PickupReloadFinish

      // Reload (fire lock)
      PickupReloadFinish:
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadFireLockTime",1,"PickupReloadFireLockTimeDecrement")
      PickupReloadFireLockTimeStart:
        TNT1 A 0 A_GiveInventory("SamsaraMarathonRifleAltReloadFireLockTime",15) // tics before being able to alt fire or switch
        stop

      PickupReloadFireLockTimeDecrement:
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadFireLockTime",1)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasDoubleFiringSpeed",1,1)
        stop
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadFireLockTime",1)
        stop

      // Reload (ammo)
      PickupReloadAmmo:
        TNT1 A 0 A_JumpIfInventory("GrenadeInClip",0,"PickupReloadFinish")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,1)
        goto PickupReloadFinish
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        TNT1 A 0 A_TakeInventory("RocketAmmo",1)
        TNT1 A 0 A_GiveInventory("GrenadeInClip")
        loop
    }
}

actor SamsaraMarathonRiflePrimaryAttackHandler : Trigger
{
    States
    {
      // Ammo checking/taking stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupReloadable")
      PickupNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("Clip",1,1)
        stop
        TNT1 A 0 A_TakeInventory("Clip",1)
        goto PickupAttack

      PickupReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("RifleBullet",1,1)
        stop
        TNT1 A 0 A_TakeInventory("RifleBullet",1)
        goto PickupAttack

      // Attack stuff
      PickupAttack:
        TNT1 A 0 A_PlaySound("marathon/rifle/fire",CHAN_WEAPON)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackCoop")
      PickupAttackDM:
        TNT1 A 0 A_FireCustomMissile("MarathonARBullet",random(-4,4),false,0,0,0,random(-4,4))
        stop

      PickupAttackCoop:
        TNT1 A 0 A_FireCustomMissile("MarathonARBulletCoop",random(-5,5),false,0,0,0,random(-5,5))
        stop
    }
}

actor SamsaraMarathonRifleSecondaryAttackHandler : Trigger
{
    States
    {
      // Ammo checking/taking stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupReloadable")
      PickupNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,1)
        stop
        TNT1 A 0 A_TakeInventory("RocketAmmo",1)
        goto PickupAttack

      PickupReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("GrenadeInClip",1,1)
        stop
        TNT1 A 0 A_TakeInventory("GrenadeInClip",1)
        goto PickupAttack

      // Attack stuff
      PickupAttack:
        TNT1 A 0 A_PlaySound("marathon/rifle/grenade",CHAN_6)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackCoop")
      PickupAttackDM:
        TNT1 A 0 A_FireCustomMissile("MarathonGrenade",0,false,0,6,0,4)
        goto PickupFinish

      PickupAttackCoop:
        TNT1 A 0 A_FireCustomMissile("MarathonGrenadeCoop",0,false,0,6,0,4)
        goto PickupFinish

      // Finishing stuff
      PickupFinish:
        TNT1 A 0 A_Recoil(3)
        stop
    }
}

actor RifleBullet : Ammo
{
    Inventory.MaxAmount 52
    Tag "MA-75B Clip"
    +IGNORESKILL
}

actor GrenadeInClip : Ammo // In this case it actually IS a clip!
{
    Inventory.MaxAmount 7
    Tag "MA-75B Grenades"
    +IGNORESKILL
}

actor MarathonARBullet : SamsaraMarathonBullet
{
    Damage (15)
    Obituary "$SAMSARA_MARATHON_OB_SLOT4_1"
    +THRUGHOST
}

actor MarathonARBulletCoop : MarathonARBullet
{
    Radius 1
    Height 1
    Speed 80
    Damage (random(9,15))
    Species "Player"
    +THRUSPECIES
}

actor 32mmCasingSpawner : SamsaraMarathonCasingSpawner
{
    States
    {
      Death:
        TNT1 A 1 A_CustomMissile("32mmCasing",1,5,random(-110,-80),CMF_AIMDIRECTION,random(30,40))
        stop
    }
}

actor 32mmCasing : SamsaraMarathonCasing
{ 
    Scale 0.25
    States
    {
      Spawn:
        RBLT ABCDEF 1
        loop
    }
}

actor MarathonGrenade
{
    Projectile
    Radius 6
    Height 8
    Speed 17
    Damage 4
    DamageType "Explosive"
    Gravity 0.125 //0.11
    Scale 0.55
    DeathSound "marathon/rifle/nadexpl"
    Decal "Scorch"
    Obituary "$SAMSARA_MARATHON_OB_SLOT4_2"
    +BLOODLESSIMPACT
    +EXTREMEDEATH
    +FORCERADIUSDMG
    -NOGRAVITY
    States
    {
      Spawn:
        NADE AAAAAAAAAAAAAAA 1 Bright A_SpawnItemEx("MarathonGrenadeSmoke")
        NADE A -1 Bright
        stop

      Death:
        TNT1 A 0 A_NoGravity
        TNT1 A 0 A_JumpIf(CallACS("SamsaraDecorate", 47), 2)
        TNT1 A 0 A_Explode(random(70,90),128)
        goto DeathFinish
        TNT1 A 0 A_Explode(random(70,90),128,XF_HURTSOURCE,false,128)
        goto DeathFinish

      DeathFinish:
        XPLD ABCDEF 4 Bright
        stop
    }
}

actor MarathonGrenadeCoop : MarathonGrenade
{
    Speed 15
    Species "Player"
    +THRUSPECIES
    States
    {
      Death:
        TNT1 A 0 A_NoGravity
        TNT1 A 0 A_JumpIf(CallACS("SamsaraDecorate", 47), 2)
        TNT1 A 0 A_Explode(random(80,100),128)
        goto DeathFinish
        TNT1 A 0 A_Explode(random(80,100),128,XF_HURTSOURCE,false,128)
        goto DeathFinish
    }
}

actor MarathonGrenadeSmoke
{
    Radius 1
    Height 1
    Scale 0.15
    +CLIENTSIDEONLY
    +NOCLIP
    +NOGRAVITY
    +RANDOMIZE
    States
    {
      Spawn:
        TNT1 A 2
        MFLS CD 1 Bright
        MSMK ABCD 1
        stop
    }
}

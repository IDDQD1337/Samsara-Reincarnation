actor freeman_slot3selected : Boolean { Inventory.InterHubAmount 0 }

Actor "Assault Shotgun" : HLWeapon
{
	Weapon.Slotnumber 2
	Weapon.SelectionOrder 2500
	Weapon.BobRangeX 0
	Weapon.BobRangeY 0.75
	Weapon.BobSpeed 1.4
	Weapon.BobStyle Alpha 
	Inventory.Pickupmessage "You got the assault shotgun!"
	Inventory.Pickupsound "halflife/weaponpickup"
	DamageType "HLBullet"
	Weapon.AmmoType1 "HLShotgunCounter"
    Weapon.AmmoUse1 1
	Weapon.AmmoType2 "Shell"
	Weapon.AmmoGive2 8
	Inventory.RestrictedTo "HalfLifePlayer"
    Tag "SPAS-12"
	states
	{
	Spawn:
		HW30 Z -1
		stop

    // Gordon Freeman
	ReadyActual:
        HW32 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReadyActualReloadable")
    ReadyActualNonReloadable:
		HW32 A 0 A_JumpIfInventory("HalfLifeOpposingForce",1,"ReadyActualNonReloadableOpp")
		HW32 A 2 A_WeaponReady
        goto ReadyActualJump

    ReadyActualReloadable:
		HW32 A 0 A_JumpIfInventory("HalfLifeOpposingForce",1,"ReadyActualReloadableOpp")
		HW32 A 2 A_WeaponReady(WRF_ALLOWRELOAD)
        goto ReadyActualJump

    ReadyActualJump:
		HW32 A 0 A_Jump(4,"ReadyActualAmmoCheck")
		HW32 A 0 A_Jump(3,"ReadyActualAmmoCheck")
		HW32 A 0 A_Jump(2,"ReadyActualAmmoCheck")
		HW32 A 0 A_Jump(1,"ReadyActualIdle1","ReadyActualIdle2","ReadyActualIdle3")
        goto ReadyActualAmmoCheck

	ReadyActualIdle1:
        HW40 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReadyActualIdle1Reloadable")
    ReadyActualIdle1NonReloadable:
		HW40 A 0 A_JumpIfInventory("HalfLifeOpposingForce",1,"ReadyActualIdle1NonReloadableOpp")
        HW40 ABCDEFGHIJKLMNOPQRST 1 A_WeaponReady
		goto ReadyActual

    ReadyActualIdle1Reloadable:
		HW40 A 0 A_JumpIfInventory("HalfLifeOpposingForce",1,"ReadyActualIdle1ReloadableOpp")
        HW40 ABCDEFGHIJKLMNOPQRST 1 A_WeaponReady(WRF_ALLOWRELOAD)
		goto ReadyActual

	ReadyActualIdle2:
        HW41 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReadyActualIdle2Reloadable")
    ReadyActualIdle2NonReloadable:
		HW41 A 0 A_JumpIfInventory("HalfLifeOpposingForce",1,"ReadyActualIdle2NonReloadableOpp")
        HW41 ABCDEFGHIJKLMNOPQRSTUV 1 A_WeaponReady
		goto ReadyActual

    ReadyActualIdle2Reloadable:
		HW41 A 0 A_JumpIfInventory("HalfLifeOpposingForce",1,"ReadyActualIdle2ReloadableOpp")
        HW41 ABCDEFGHIJKLMNOPQRSTUV 1 A_WeaponReady(WRF_ALLOWRELOAD)
		goto ReadyActual
	
	ReadyActualIdle3:
        HW42 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReadyActualIdle3Reloadable")
    ReadyActualIdle3NonReloadable:
		HW42 A 0 A_JumpIfInventory("HalfLifeOpposingForce",1,"ReadyActualIdle3NonReloadableOpp")
		HW42 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_WeaponReady
		HW43 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_WeaponReady
		HW44 ABCDEFGH 1 A_WeaponReady
		goto ReadyActual

    ReadyActualIdle3Reloadable:
		HW42 A 0 A_JumpIfInventory("HalfLifeOpposingForce",1,"ReadyActualIdle3ReloadableOpp")
		HW42 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_WeaponReady(WRF_ALLOWRELOAD)
		HW43 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_WeaponReady(WRF_ALLOWRELOAD)
		HW44 ABCDEFGH 1 A_WeaponReady(WRF_ALLOWRELOAD)
		goto ReadyActual

    ReadyActualAmmoCheck:
        HW32 A 0 A_JumpIfInventory("SamsaraReloadMode",1,1)
        goto ReadyActual
        HW32 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"ReadyActual")
        HW32 A 0 A_JumpIfInventory("HLShotgunCounter",1,"ReadyActual")
        goto ReloadCheck

	Deselect:
		TNT1 A 0 A_TakeInventory("freeman_slot3selected")
	DeselectLoop:
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Lower
		TNT1 A 1 A_Lower
		loop

	Select:
		TNT1 A 0 A_TakeInventory("freeman_fistselected")
		TNT1 A 0 A_TakeInventory("freeman_pistolselected")
		TNT1 A 0 A_TakeInventory("freeman_slot1selected")
		TNT1 A 0 A_TakeInventory("freeman_slot2selected")
		TNT1 A 0 A_GiveInventory("freeman_slot3selected")
		TNT1 A 0 A_TakeInventory("freeman_slot4selected")
		TNT1 A 0 A_TakeInventory("freeman_slot5selected")
		TNT1 A 0 A_TakeInventory("freeman_slot6selected")
		TNT1 A 0 A_TakeInventory("freeman_slot7selected")
		TNT1 A 0 A_TakeInventory("freeman_uniqueselected")
		TNT1 A 0 A_TakeInventory("freeman_unique2selected")
		TNT1 A 0 A_TakeInventory("freeman_unique3selected")
	SelectLoop:	
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Raise
		TNT1 A 1 A_Raise
		loop

	Ready: // our "Select" state
		HW30 M 0 A_PlaySound("halflife/weaponselect",CHAN_7)
		HW30 M 0 A_JumpIfInventory("HalfLifeOpposingForce",1,"ReadyOpp")
		HW30 MABCDEFGHIJKLN 1 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE)
		goto ReadyActual

    Fire:
		HW32 A 0 A_JumpIfInventory("HLOriginalKeySwitcherOpen",1,"ReadyActual")
        HW32 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"FireReloadable")
    FireNonReloadable:
        HW32 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"FireWaterCheck")
        HW32 A 0 A_JumpIfInventory("Shell",1,"FireWaterCheck")
        goto FireDry

    FireReloadable:
        HW32 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"FireWaterCheck")
        HW32 A 0 A_JumpIfInventory("HLShotgunCounter",1,"FireWaterCheck")
        goto FireDry

    FireWaterCheck:
        HW32 A 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"FireDry")
        goto FireStart

    FireDry:
        HW32 A 0 A_PlaySound("halflife/weaponempty",CHAN_6)
        HW32 A 0 A_ClearReFire
        HW32 A 4 A_JumpIfInventory("HalfLifeOpposingForce",1,"FireDryOpp")
        goto ReadyActualAmmoCheck

    Hold:
        HW32 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"HoldReloadable")
    HoldNonReloadable:
        HW32 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"HoldWaterCheck")
        HW32 A 0 A_JumpIfInventory("Shell",1,"HoldWaterCheck")
        goto HoldDry

    HoldReloadable:
        HW32 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"HoldWaterCheck")
        HW32 A 0 A_JumpIfInventory("HLShotgunCounter",1,"HoldWaterCheck")
        goto HoldDry

    HoldWaterCheck:
        HW32 A 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"HoldDry")
        goto FireStart

    HoldDry:
        HW33 O 0 A_PlaySound("halflife/weaponempty",CHAN_6)
        HW33 O 0 A_ClearReFire
        HW33 O 1 A_JumpIfInventory("HalfLifeOpposingForce",1,"HoldDryOpp")
        HW33 PQR 1
        HW33 STUV 1 A_WeaponReady(WRF_NOFIRE|WRF_NOBOB)
        goto ReadyActualAmmoCheck

    FireStart:
        HW32 A 0 A_AlertMonsters
        HW32 A 0 A_SpawnItemEx("HLMuzzleFlash",4,5,0,0,0,0,0,SXF_NOCHECKPOSITION)
        HW32 A 0 A_FireCustomMissile("HLShotgunShellCaser",0,false)
        HW32 A 0 A_GiveInventory("SamsaraHalfLifeShotgunPrimaryAttackHandler")
		HW32 A 1 Bright A_JumpIfInventory("HalfLifeOpposingForce",1,"FireOpp")
		HW32 B 1 Bright
		HW33 ABCDEFGHI 2
		HW33 J 2 A_PlaySound("halflife/shotgun_pump")
		HW33 KLMN 2
		HW33 OPQRSTUV 1 A_ReFire
		goto ReadyActual

    AltFire:
        HW32 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"AltFireReloadable")
    AltFireNonReloadable:
        HW32 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"AltFireWaterCheck")
        HW32 A 0 A_JumpIfInventory("Shell",2,"AltFireWaterCheck")
        goto AltFireDry

    AltFireReloadable:
        HW32 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"AltFireWaterCheck")
        HW32 A 0 A_JumpIfInventory("HLShotgunCounter",2,"AltFireWaterCheck")
        goto AltFireDry

    AltFireWaterCheck:
        HW32 A 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"AltFireDry")
        goto AltFireStart

    AltFireDry:
        HW32 A 0 A_PlaySound("halflife/weaponempty",CHAN_6)
        HW32 A 4 A_JumpIfInventory("HalfLifeOpposingForce",1,"AltFireDryOpp")
    AltFireDryAmmoCheck:
        HW32 A 0 A_JumpIfInventory("SamsaraReloadMode",1,1)
        goto ReadyActual
        HW32 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"ReadyActual")
        HW32 A 0 A_JumpIfInventory("HLShotgunCounter",2,"ReadyActual")
        goto ReloadCheck

    AltFireStart:
        HW32 A 0 A_AlertMonsters
        HW32 A 0 A_SpawnItemEx("HLMuzzleFlash",4,5,0,0,0,0,0,SXF_NOCHECKPOSITION)
        HW32 AA 0 A_FireCustomMissile("HLShotgunShellCaser",0,false)
        HW32 A 0 A_GiveInventory("SamsaraHalfLifeShotgunSecondaryAttackHandler")
		HW32 A 1 Bright A_JumpIfInventory("HalfLifeOpposingForce",1,"AltFireOpp")
		HW32 B 1 Bright
		HW34 ABCDEF 2
		HW34 GHIJK 3
		HW34 L 2 A_PlaySound("halflife/shotgun_pump")
		HW34 MNOPQRS 3
		goto ReadyActual

    Reload:
    ReloadCheck:
        HW32 A 0 A_JumpIfInventory("HLShotgunCounter",0,"ReadyActual")
        HW32 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        HW32 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"ReloadStart")
        HW32 A 0 A_JumpIfInventory("Shell",1,"ReloadStart")
        goto ReadyActual

	ReloadStart:
		HW35 A 1 A_JumpIfInventory("HalfLifeOpposingForce",1,"ReloadOpp")
		HW36 BCDEFGH 1
    ReloadLoopInit:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,1)
        goto ReloadFinish
        // allow interrupting the sequence before ammo calculations take effect by firing either mode
        TNT1 A 0 A_JumpIfInventory("SynthFireLeft",1,"ReloadLoopFireCheckPrimary")
        TNT1 A 0 A_JumpIfInventory("SynthFireRight",1,"ReloadLoopFireCheckSecondary")
    ReloadLoopAmmoCheck:
        TNT1 A 0 A_JumpIfInventory("HLShotgunCounter",0,"ReloadFinish")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"ReloadAmmo")
        TNT1 A 0 A_JumpIfInventory("Shell",1,"ReloadAmmo")
        goto ReloadFinish

    ReloadLoopFireCheckPrimary:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"Fire")
        TNT1 A 0 A_JumpIfInventory("HLShotgunCounter",1,"Fire")
        goto ReloadLoopAmmoCheck

    ReloadLoopFireCheckSecondary:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"AltFire")
        TNT1 A 0 A_JumpIfInventory("HLShotgunCounter",2,"AltFire")
        goto ReloadLoopAmmoCheck

	ReloadLoopAnim:
        HW35 B 0 A_PlaySound("halflife/shotgun_reload")
        HW35 B 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"ReloadLoopAnimWithSecondary")
        HW35 B 0 A_JumpIfInventory("HLShotgunCounter",2,"ReloadLoopAnimWithSecondary")
		HW35 B 0 A_JumpIfInventory("HalfLifeOpposingForce",1,"ReloadLoopAnimOpp")
		HW35 BCDEFG 1 A_WeaponReady(WRF_NOBOB|WRF_NOSECONDARY)
		HW35 HI 2 A_WeaponReady(WRF_NOBOB|WRF_NOSECONDARY)
		HW35 J 1 A_WeaponReady(WRF_NOBOB|WRF_NOSECONDARY)
        TNT1 A 0
		HW35 K 1 A_WeaponReady(WRF_NOBOB|WRF_NOSECONDARY)
        goto ReloadLoopInit

	ReloadLoopAnimWithSecondary:
		HW35 B 0 A_JumpIfInventory("HalfLifeOpposingForce",1,"ReloadLoopAnimWithSecondaryOpp")
		HW35 BCDEFG 1 A_WeaponReady(WRF_NOBOB)
		HW35 HI 2 A_WeaponReady(WRF_NOBOB)
		HW35 J 1 A_WeaponReady(WRF_NOBOB)
        TNT1 A 0
		HW35 K 1 A_WeaponReady(WRF_NOBOB)
        goto ReloadLoopInit

	ReloadFinish:
        HW35 L 0 A_PlaySound("halflife/shotgun_pump")
		HW35 L 0 A_JumpIfInventory("HalfLifeOpposingForce",1,"ReloadFinishOpp")
		HW35 LMNOPQRTU 2 A_WeaponReady(WRF_NOBOB)
		goto ReadyActual

    ReloadAmmo: // calculation timing is done in accordance to holding the reload button during the animation in hl, this is reflected here as well
        HW35 B 0 A_TakeInventory("SamsaraReloadCalcs") // reset
    ReloadAmmoCalc:
        HW35 B 0 A_JumpIfInventory("HLShotgunCounter",0,"ReloadLoopAnim")
        HW35 B 0 A_JumpIfInventory("SamsaraReloadCalcs",1,"ReloadLoopAnim")
        HW35 B 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        HW35 B 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        HW35 B 0 A_JumpIfInventory("Shell",1,1)
        goto ReloadLoopAnim
        HW35 B 0 A_GiveInventory("SamsaraReloadCalcs")
        HW35 B 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        HW35 B 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        HW35 B 0 A_TakeInventory("Shell",1)
        HW35 B 0 A_GiveInventory("HLShotgunCounter")
        loop

    // Adrian Shephard
    ReadyActualNonReloadableOpp:
		OP32 A 2 A_WeaponReady
        goto ReadyActualJump

    ReadyActualReloadableOpp:
		OP32 A 2 A_WeaponReady(WRF_ALLOWRELOAD)
        goto ReadyActualJump

    ReadyActualIdle1NonReloadableOpp:
        OP40 ABCDEFGHIJKLMNOPQRST 1 A_WeaponReady
		goto ReadyActual

    ReadyActualIdle1ReloadableOpp:
        OP40 ABCDEFGHIJKLMNOPQRST 1 A_WeaponReady(WRF_ALLOWRELOAD)
		goto ReadyActual

    ReadyActualIdle2NonReloadableOpp:
        OP41 ABCDEFGHIJKLMNOPQRSTUV 1 A_WeaponReady
		goto ReadyActual

    ReadyActualIdle2ReloadableOpp:
        OP41 ABCDEFGHIJKLMNOPQRSTUV 1 A_WeaponReady(WRF_ALLOWRELOAD)
		goto ReadyActual

    ReadyActualIdle3NonReloadableOpp:
		OP42 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_WeaponReady
		OP43 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_WeaponReady
		OP44 ABCDEFGH 1 A_WeaponReady
		goto ReadyActual

    ReadyActualIdle3ReloadableOpp:
		OP42 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_WeaponReady(WRF_ALLOWRELOAD)
		OP43 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_WeaponReady(WRF_ALLOWRELOAD)
		OP44 ABCDEFGH 1 A_WeaponReady(WRF_ALLOWRELOAD)
		goto ReadyActual

	ReadyOpp:
		OP30 MABCDEFGHIJKLN 1 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE)
		goto ReadyActual

    FireDryOpp:
        OP32 A 4
        goto ReadyActualAmmoCheck

    HoldDryOpp:
        OP33 OPQR 1
        OP33 STUV 1 A_WeaponReady(WRF_NOFIRE|WRF_NOBOB)
        goto ReadyActualAmmoCheck

    FireOpp:
		OP32 AB 1 Bright
		OP33 ABCDEFGHI 2
		OP33 J 2 A_PlaySound("halflife/shotgun_pump")
		OP33 KLMN 2
		OP33 OPQRSTUV 1 A_ReFire
		goto ReadyActual

    AltFireDryOpp:
        OP32 A 4
        goto AltFireDryAmmoCheck

	AltFireOpp:
		OP32 AB 1 Bright
		OP34 ABCDEF 2
		OP34 GHIJK 3
		OP34 L 2 A_PlaySound("halflife/shotgun_pump")
		OP34 MNOPQRS 3
		goto ReadyActual

	ReloadOpp:
		OP35 A 1
		OP36 BCDEFGH 1
        goto ReloadLoopInit

	ReloadLoopAnimOpp:
		OP35 BCDEFG 1 A_WeaponReady(WRF_NOBOB|WRF_NOSECONDARY)
		OP35 HI 2 A_WeaponReady(WRF_NOBOB|WRF_NOSECONDARY)
		OP35 J 1 A_WeaponReady(WRF_NOBOB|WRF_NOSECONDARY)
        TNT1 A 0
		OP35 K 1 A_WeaponReady(WRF_NOBOB|WRF_NOSECONDARY)
        goto ReloadLoopInit

	ReloadLoopAnimWithSecondaryOpp:
		OP35 BCDEFG 1 A_WeaponReady(WRF_NOBOB)
		OP35 HI 2 A_WeaponReady(WRF_NOBOB)
		OP35 J 1 A_WeaponReady(WRF_NOBOB)
        TNT1 A 0
		OP35 K 1 A_WeaponReady(WRF_NOBOB)
        goto ReloadLoopInit

	ReloadFinishOpp:
		OP35 LMNOPQRTU 2 A_WeaponReady(WRF_NOBOB)
		goto ReadyActual
	}
}

actor SamsaraHalfLifeShotgunPrimaryAttackHandler : Trigger
{
    States
    {
      // Ammo checking/taking stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupReloadable")
      PickupNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("Shell",1,1)
        stop
        TNT1 A 0 A_TakeInventory("Shell",1)
        goto PickupAttack

      PickupReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("HLShotgunCounter",1,1)
        stop
        TNT1 A 0 A_TakeInventory("HLShotgunCounter",1)
        goto PickupAttack

      // Attack stuff
      PickupAttack:
        TNT1 A 0 A_PlaySound("halflife/shotgun_shoot",CHAN_WEAPON)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackCoop")
      PickupAttackDM:
        TNT1 AAAAAA 0 A_FireCustomMissile("HLShotgunBullet",frandom(-3.00,3.00),false,5,3,0,frandom(-3.00,3.00))
        goto PickupFinish

      PickupAttackCoop:
        TNT1 AAAAAA 0 A_FireCustomMissile("HLShotgunBulletCoop",frandom(-3.00,3.00),false,5,3,0,frandom(-3.00,3.00))
        goto PickupFinish

      // Finishing stuff
      PickupFinish:
        TNT1 A 0 ACS_NamedExecuteAlways("HalfLifeRecoil", 0, 3)
        stop
    }
}

actor SamsaraHalfLifeShotgunSecondaryAttackHandler : Trigger
{
    States
    {
      // Ammo checking/taking stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupReloadable")
      PickupNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("Shell",2,1)
        stop
        TNT1 A 0 A_TakeInventory("Shell",2)
        goto PickupAttack

      PickupReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("HLShotgunCounter",2,1)
        stop
        TNT1 A 0 A_TakeInventory("HLShotgunCounter",2)
        goto PickupAttack

      // Attack stuff
      PickupAttack:
        TNT1 A 0 A_PlaySound("halflife/shotgun_boom",CHAN_WEAPON)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackCoop")
      PickupAttackDM:
        TNT1 AAAAAAAAAAAA 0 A_FireCustomMissile("HLShotgunBullet",random(-35,35)/10.0,false,5,3,0,random(-35,35)/10.0)
        goto PickupFinish

      PickupAttackCoop:
        TNT1 AAAAAAAAAAAA 0 A_FireCustomMissile("HLShotgunBulletCoop",random(-35,35)/10.0,false,5,3,0,random(-35,35)/10.0)
        goto PickupFinish

      // Finishing stuff
      PickupFinish:
        TNT1 A 0 ACS_NamedExecuteAlways("HalfLifeRecoil", 0, 3)
        stop
    }
}

actor HLShotgunCounter : Ammo
{
    Inventory.MaxAmount 8
    +IGNORESKILL
}

Actor HLShotgunBullet : HLBullet 
{ 
	+THRUGHOST
	Damage (0) 
	States
	{
		Crash:
		Death:
			TNT1 A 0 A_Explode(CallACS("HalfLife_BulletDamage",13),8,!XF_HURTSOURCE,0,8)
			Goto Super::Death
		XDeath:
			TNT1 A 0 A_Explode(CallACS("HalfLife_BulletDamage",13),8,!XF_HURTSOURCE,0,8)
			Goto Super::XDeath
	}		
}
Actor HLShotgunBulletCoop : HLBulletCoop { 
	+THRUGHOST
	Damage (0) 
	States
	{
		Crash:
		Death:
			TNT1 A 0 A_Explode(CallACS("HalfLife_BulletDamage",13),8,!XF_HURTSOURCE,0,8)
			Goto Super::Death
		XDeath:
			TNT1 A 0 A_Explode(CallACS("HalfLife_BulletDamage",13),8,!XF_HURTSOURCE,0,8)
			Goto Super::XDeath
	}		
}
Actor HLMegaShotgunBullet : HLBullet { 
	+THRUGHOST
	Damage (0) 
	States
	{
		Crash:
		Death:
			TNT1 A 0 A_Explode(CallACS("HalfLife_BulletDamage",13),8,!XF_HURTSOURCE,0,8)
			Goto Super::Death
		XDeath:
			TNT1 A 0 A_Explode(CallACS("HalfLife_BulletDamage",13),8,!XF_HURTSOURCE,0,8)
			Goto Super::XDeath
	}		
}
Actor HLMegaShotgunBulletCoop : HLBulletCoop { 
	+THRUGHOST
	Damage (0) 
	States
	{
		Crash:
		Death:
			TNT1 A 0 A_Explode(CallACS("HalfLife_BulletDamage",13),8,!XF_HURTSOURCE,0,8)
			Goto Super::Death
		XDeath:
			TNT1 A 0 A_Explode(CallACS("HalfLife_BulletDamage",13),8,!XF_HURTSOURCE,0,8)
			Goto Super::XDeath
	}		
}

Actor HLShotgunShellCaser
{
	PROJECTILE
	+CLIENTSIDEONLY
	Radius 1
	Height 1
	Speed 25
    ReactionTime 1
	states
	{
	Spawn:
		TNT1 A 1 A_Countdown
		loop

	Death:
		TNT1 A 1 A_CustomMissile("HLShotgunShell",1,12,random(-100,-90),CMF_AIMDIRECTION,random(20,30))
		stop
	}
}

Actor HLShotgunShell
{
	Scale 0.18
    Speed 5
    Mass 8
    Radius 3
    Height 3
	Bouncecount 2
	+MISSILE
    +CLIENTSIDEONLY
    +THRUACTORS
	+DROPOFF
	+NOTELEPORT
	+FLOORCLIP
	+DOOMBOUNCE
	-SOLID
    States
    {
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_SetAngle(random(-5,5))
    Spawn2:
		HP30 ABCDEFGHIJK 1
        loop
    Death:
		TNT1 A 0 A_JumpIf(waterlevel != 0,"Done")
		TNT1 A 0 A_PlaySound("halflife/shotgun_shell",CHAN_BODY)
		TNT1 A 0 ThrustThingZ(0,Random(10,15),0,0)
		goto Done
	Done:
		HP30 A 500
		HP30 A 1 A_FadeOut
        Goto Done+1
    }
}

Actor HLShotgunFlash : HL9MMMuzzleFlash
{
	Scale 0.3
	States
	{
		Spawn:
			TNT1 A 0
			HW29 J 1 Bright A_Warp(AAPTR_Master,cos(pitch)*30,5,34-(sin(pitch)*34),0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
			HW29 K 1 A_Warp(AAPTR_Master,cos(pitch)*30,5,34-(sin(pitch)*34),0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
			Stop
	}
}

Actor HLShotgunAltFlash : HL9MMMuzzleFlash
{
	Scale 0.4
	States
	{
		Spawn:
			TNT1 A 0
			HW29 J 1 Bright A_Warp(AAPTR_Master,cos(pitch)*30,5,34-(sin(pitch)*34),0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
			HW29 K 1 A_Warp(AAPTR_Master,cos(pitch)*30,5,34-(sin(pitch)*34),0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
			Stop
	}
}
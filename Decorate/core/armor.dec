// Armor Scraps
Actor ArmorScrap : CustomInventory
{
	Scale 0.5
	RenderStyle Add
	Alpha 0.9
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMORSCRAP"
	//Inventory.PickupSound "armor0get"
	Inventory.Icon "RMR1A0"
	//Armor.Saveamount 1
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		BON2 A 0 BRIGHT
		BON2 A 35 BRIGHT ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 200, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 22, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor0get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("ArmorScrapArmor", 1)
		stop
	PickupFail:
        BON2 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor QuakeArmorScrap : CustomInventory
{
	Scale 0.5
	RenderStyle Add
	Alpha 0.9
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMORSCRAP"
	//Inventory.PickupSound "armor0get"
	Inventory.Icon "RMR1A0"
	//Armor.Saveamount 1
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		BON2 A 0 BRIGHT
		BON2 A 35 BRIGHT ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 200, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 22, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor0get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("QuakeArmorScrapArmor", 1)
		stop
	PickupFail:
        BON2 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor QuakeArmorScrap2 : CustomInventory
{
	Scale 0.5
	RenderStyle Add
	Alpha 0.9
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMORSCRAP"
	//Inventory.PickupSound "armor0get"
	Inventory.Icon "RMR1A0"
	//Armor.Saveamount 1
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		BON2 A 0 BRIGHT
		BON2 A 35 BRIGHT ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 200, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 22, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor0get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("QuakeArmorScrap2Armor", 1)
		stop
	PickupFail:
        BON2 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor MarathonArmorScrap : CustomInventory
{
	Scale 0.5
	RenderStyle Add
	Alpha 0.9
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMORSCRAP"
	//Inventory.PickupSound "armor0get"
	Inventory.Icon "RMR1A0"
	//Armor.Saveamount 1
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		BON2 A 0 BRIGHT
		BON2 A 35 BRIGHT ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 200, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 23, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("FFFFF0", 0.3, 4) // Ivory
		TNT1 A 0 A_PlaySound("armor0get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("MarathonArmorScrapArmor", 1)
		stop
	PickupFail:
        BON2 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor ArmorScrapNoDrop : ArmorScrap
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor QuakeArmorScrapNoDrop : QuakeArmorScrap
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor QuakeArmorScrap2NoDrop : QuakeArmorScrap2
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor MarathonArmorScrapNoDrop : MarathonArmorScrap
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor ArmorScrapArmor : BasicArmorBonus
{
	Armor.SaveAmount 1
	Armor.SavePercent 33.335
	Armor.MaxSaveAmount 200
}

Actor QuakeArmorScrapArmor : BasicArmorBonus
{
	Armor.SaveAmount 1
	Armor.SavePercent 30
	Armor.MaxSaveAmount 200
}

Actor QuakeArmorScrap2Armor : BasicArmorBonus
{
	Armor.SaveAmount 1
	Armor.SavePercent 60
	Armor.MaxSaveAmount 200
}

Actor MarathonArmorScrapArmor : BasicArmorBonus
{
	Armor.SaveAmount 1
	Armor.SavePercent 100
	Armor.MaxSaveAmount 200
}

Actor ArmorBonusPickup replaces ArmorBonus
{
	+NOINTERACTION
	States
	{
	Spawn:
		BON2 A 0 BRIGHT
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 29, 0, 0) == 1, "Armor5")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 19), "Armor5")
		TNT1 A 35 ACS_NamedExecuteWithResult("SamsaraDecorate", 18, 0)
		stop

	// Default Armor
	Armor1:
	Armor1_WithYellow:
		TNT1 A 0 A_SpawnItemEx("ArmorScrapNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor1_Drop:
	Armor1_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("ArmorScrap", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Quake Armor
	Armor2:
	Armor2_WithYellow:
		TNT1 A 0 A_SpawnItemEx("QuakeArmorScrapNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor2_Drop:
	Armor2_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("QuakeArmorScrap", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Quake+ Armor
	Armor3:
	Armor3_WithYellow:
		TNT1 A 0 A_SpawnItemEx("QuakeArmorScrap2NoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor3_Drop:
	Armor3_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("QuakeArmorScrap2", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Marathon Armor
	Armor4:
	Armor4_WithYellow:
		TNT1 A 0 A_SpawnItemEx("MarathonArmorScrapNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor4_Drop:
	Armor4_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("MarathonArmorScrap", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// No Armor
	Armor5:
	Armor5_WithYellow:
	Armor5_Drop:
	Armor5_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("NoArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop	
	}
}

Actor ArmorScrap100 : ArmorScrapArmor { Armor.MaxSaveAmount 100 }
Actor ArmorScrap200 : ArmorScrapArmor { Armor.MaxSaveAmount 200 }
Actor InfiniteArmorBonus : ArmorScrapArmor { Armor.MaxSaveAmount 0x7FFFFFFF }

// Green Armor Pickups
Actor ArmorPack1 : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.9
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMOR0_1"
	//Inventory.PickupSound "armor1get"
	Inventory.Icon "RMR1A0"
	//Armor.Saveamount 100
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		RMR1 A 0 BRIGHT
		RMR1 A 35 BRIGHT Light("ARMORGREEN1") ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasProsperity", 1, "CheckForProsperity")
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 100, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	CheckForProsperity:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 250, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupProsperity")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 24, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("ArmorPack1Armor", 100)
		stop
	PickupProsperity:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 24, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("ArmorPack1ProsperityArmor", 100)
		stop
	PickupFail:
        RMR1 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor QuakeGreenArmor : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.9
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMOR0_1"
	//Inventory.PickupSound "armor1get"
	Inventory.Icon "RMR7A0"
	//Armor.Saveamount 100
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		RMR7 A 0 BRIGHT
		RMR7 A 35 BRIGHT ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasProsperity", 1, "CheckForProsperity")
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 100, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	CheckForProsperity:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 250, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupProsperity")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 28, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("QuakeGreenArmorArmor", 100)
		stop
	PickupProsperity:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 28, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("QuakeGreenArmorProsperityArmor", 100)
		stop
	PickupFail:
        RMR7 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor QuakeYellowArmor : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.9
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMOR0_1"
	//Inventory.PickupSound "armor1get"
	Inventory.Icon "RMR5A0"
	//Armor.Saveamount 100
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		RMR5 A 0 BRIGHT
		RMR5 A 35 BRIGHT ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasProsperity", 1, "CheckForProsperity")
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 150, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	CheckForProsperity:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 250, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupProsperity")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 29, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("QuakeYellowArmorArmor", 100)
		stop
	PickupProsperity:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 29, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("QuakeYellowArmorProsperityArmor", 100)
		stop
	PickupFail:
        RMR5 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor MarathonGreenArmor : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.9
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMOR0_1"
	//Inventory.PickupSound "armor1get"
	Inventory.Icon "RMR0A0"
	//Armor.Saveamount 100
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		RMR0 A 0 BRIGHT
		RMR0 A 35 bright ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasProsperity", 1, "CheckForProsperity")
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 100, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	CheckForProsperity:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 250, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupProsperity")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 32, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("FFFFF0", 0.3, 4) // Ivory
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("MarathonGreenArmorArmor", 100)
		stop
	PickupProsperity:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 32, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("FFFFF0", 0.3, 4) // Ivory
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("MarathonGreenArmorProsperityArmor", 100)
		stop
	PickupFail:
        RMR0 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor GreenArmorNoDrop : ArmorPack1
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor QGreenArmorNoDrop : QuakeGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor QYellowArmorNoDrop : QuakeYellowArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor MarathonGreenArmorNoDrop : MarathonGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor ArmorPack1Armor : BasicArmorPickup
{
	Armor.SaveAmount 100
	Armor.SavePercent 33.335
}

Actor QuakeGreenArmorArmor : BasicArmorPickup
{
	Armor.SaveAmount 100
	Armor.SavePercent 30
}

Actor QuakeYellowArmorArmor : BasicArmorPickup
{
	Armor.SaveAmount 150
	Armor.SavePercent 60
}

Actor MarathonGreenArmorArmor : BasicArmorPickup
{
	Armor.SaveAmount 100
	Armor.SavePercent 100
}

Actor ArmorPack1ProsperityArmor : BasicArmorPickup
{
	Armor.SaveAmount 250
	Armor.SavePercent 33.335
}

Actor QuakeGreenArmorProsperityArmor : BasicArmorPickup
{
	Armor.SaveAmount 250
	Armor.SavePercent 30
}

Actor QuakeYellowArmorProsperityArmor : BasicArmorPickup
{
	Armor.SaveAmount 250
	Armor.SavePercent 60
}

Actor MarathonGreenArmorProsperityArmor : BasicArmorPickup
{
	Armor.SaveAmount 200
	Armor.SavePercent 100
}

Actor GreenArmorPickup replaces GreenArmor
{
	+NOINTERACTION
	States
	{
	Spawn:
		RMR1 A 0 BRIGHT
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 29, 0, 0) == 1, "Armor5")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 19), "Armor5")
		TNT1 A 35 ACS_NamedExecuteWithResult("SamsaraDecorate", 18, 0)
		stop

	// Default Armor
	Armor1:
	Armor1_WithYellow:
		TNT1 A 0 A_SpawnItemEx("GreenArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor1_Drop:
	Armor1_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("ArmorPack1", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Quake Armor
	Armor2:
	Armor2_WithYellow:
		TNT1 A 0 A_SpawnItemEx("QGreenArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor2_Drop:
	Armor2_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("QuakeGreenArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Quake+ Armor
	Armor3:
	Armor3_WithYellow:
		TNT1 A 0 A_SpawnItemEx("QYellowArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor3_Drop:
	Armor3_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("QuakeYellowArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Marathon Armor
	Armor4:
	Armor4_WithYellow:
		TNT1 A 0 A_SpawnItemEx("MarathonGreenArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor4_Drop:
	Armor4_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("MarathonGreenArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// No Armor
	Armor5:
	Armor5_WithYellow:
	Armor5_Drop:
	Armor5_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("NoArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop	
	}
}

// Yellow Armor Pickups
Actor SamsaraYellowArmor : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.95
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMOR0_2"
	//Inventory.PickupSound "armor1get"
	Inventory.Icon "RMR5A0"
	//Armor.Saveamount 150
	//Armor.MaxSaveAmount 150
	States
	{
	Spawn:
		TNT1 A 0
		RMR5 A 0 BRIGHT
		RMR5 A 35 BRIGHT Light("ARMORYELLOW1") ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasProsperity", 1, "CheckForProsperity")
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 150, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	CheckForProsperity:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 250, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupProsperity")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 25, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("ArmorPack4Armor", 100)
		stop
	PickupProsperity:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 25, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("ArmorPack4ProsperityArmor", 100)
		stop
	PickupFail:
        RMR5 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

// Quake does not have yellow armor pickups

Actor MarathonYellowArmor : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.95
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMOR3_2"
	//Inventory.PickupSound "armor1get"
	Inventory.Icon "RMR8A0"
	//Armor.Saveamount 150
	//Armor.MaxSaveAmount 150
	States
	{
	Spawn:
		TNT1 A 0
		RMR8 A 0 BRIGHT
		RMR8 A 35 bright ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasProsperity", 1, "CheckForProsperity")
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 150, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	CheckForProsperity:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 250, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupProsperity")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 33, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("FFFFF0", 0.3, 4) // Ivory
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("MarathonYellowArmorArmor", 100)
		stop
	PickupProsperity:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 33, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("FFFFF0", 0.3, 4) // Ivory
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("MarathonYellowArmorProsperityArmor", 100)
		stop
	PickupFail:
        RMR8 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor YellowArmorNoDrop : SamsaraYellowArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor MarathonYellowArmorNoDrop : MarathonYellowArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor ArmorPack4Armor : BasicArmorPickup
{
	Armor.SaveAmount 150
	Armor.SavePercent 40
}

Actor MarathonYellowArmorArmor : BasicArmorPickup
{
	Armor.SaveAmount 150
	Armor.SavePercent 100
}

Actor ArmorPack4ProsperityArmor : BasicArmorPickup
{
	Armor.SaveAmount 250
	Armor.SavePercent 40
}

Actor MarathonYellowArmorProsperityArmor : BasicArmorPickup
{
	Armor.SaveAmount 250
	Armor.SavePercent 100
}

Actor YellowArmorPickup
{
	+NOINTERACTION
	States
	{
	Spawn:
		RMR5 A 0 BRIGHT
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 29, 0, 0) == 1, "Armor5")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 19), "Armor5")
		TNT1 A 35 ACS_NamedExecuteWithResult("SamsaraDecorate", 18, 1)
		stop

	// Default Armor
	Armor1:
	Armor1_WithYellow:
		TNT1 A 0 A_SpawnItemEx("YellowArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor1_Drop:
	Armor1_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("SamsaraYellowArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Quake Armor
	Armor2:
	Armor2_WithYellow:
		TNT1 A 0 A_SpawnItemEx("QYellowArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor2_Drop:
	Armor2_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("QuakeYellowArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Quake+ Armor
	Armor3:
	Armor3_WithYellow:
		TNT1 A 0 A_SpawnItemEx("QRedArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor3_Drop:
	Armor3_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("QuakeRedArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Marathon Armor
	Armor4:
	Armor4_WithYellow:
		TNT1 A 0 A_SpawnItemEx("MarathonYellowArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor4_Drop:
	Armor4_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("MarathonYellowArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// No Armor
	Armor5:
	Armor5_WithYellow:
	Armor5_Drop:
	Armor5_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("NoArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop	
	}
}

// Blue Armor Pickups
Actor ArmorPack2 : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.975
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMOR0_3"
	//Inventory.PickupSound "armor2get"
	Inventory.Icon "RMR2A0"
	//Armor.Saveamount 200
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		RMR2 A 0 BRIGHT
		RMR2 A 35 BRIGHT Light("ARMORBLUE1") ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 98)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasProsperity", 1, "CheckForProsperity")
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 200, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	CheckForProsperity:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 250, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupProsperity")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 26, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor2get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("ArmorPack2Armor", 200)
		stop
	PickupProsperity:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 26, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor2get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("ArmorPack2ProsperityArmor", 200)
		stop
	PickupFail:
        RMR2 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

// The Quake armors use different types of armor for the blue armor pickups

Actor MarathonBlueArmor : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.95
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMOR3_3"
	//Inventory.PickupSound "armor2get"
	Inventory.Icon "RMR5A0"
	//Armor.Saveamount 200
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		RMR5 A 0 BRIGHT
		RMR5 A 35 bright ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasProsperity", 1, "CheckForProsperity")
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 200, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	CheckForProsperity:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 250, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupProsperity")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 34, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("FFFFF0", 0.3, 4) // Ivory
		TNT1 A 0 A_PlaySound("armor2get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("MarathonBlueArmorArmor", 100)
		stop
	PickupProsperity:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 34, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("FFFFF0", 0.3, 4) // Ivory
		TNT1 A 0 A_PlaySound("armor2get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("MarathonBlueArmorProsperityArmor", 100)
		stop
	PickupFail:
        RMR5 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor BlueArmorNoDrop : ArmorPack2
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor MarathonBlueArmorNoDrop : MarathonBlueArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor ArmorPack2Armor : BasicArmorPickup
{
	Armor.SaveAmount 200
	Armor.SavePercent 50
}

Actor MarathonBlueArmorArmor : BasicArmorPickup
{
	Armor.SaveAmount 200
	Armor.SavePercent 100
}

Actor ArmorPack2ProsperityArmor : BasicArmorPickup
{
	Armor.SaveAmount 250
	Armor.SavePercent 50
}

Actor MarathonBlueArmorProsperityArmor : BasicArmorPickup
{
	Armor.SaveAmount 200
	Armor.SavePercent 100
}

Actor BlueArmorPickup replaces BlueArmor
{
	+NOINTERACTION
	States
	{
	Spawn:
		RMR2 A 0 BRIGHT
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 29, 0, 0) == 1, "Armor5")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 19), "Armor5")
		TNT1 A 35 ACS_NamedExecuteWithResult("SamsaraDecorate", 18, 2)
		stop

	// Default Armor
	Armor1:
	Armor1_WithYellow:
		TNT1 A 0 A_SpawnItemEx("BlueArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor1_Drop:
	Armor1_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("ArmorPack2", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Quake Armor
	Armor2:
		TNT1 A 0 A_SpawnItemEx("QYellowArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor2_WithYellow:
		TNT1 A 0 A_SpawnItemEx("QRedArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor2_Drop:
		TNT1 A 0 A_SpawnItemEx("QuakeYellowArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor2_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("QuakeRedArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Quake+ Armor
	Armor3:
		TNT1 A 0 A_SpawnItemEx("QRedArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor3_WithYellow:
		TNT1 A 0 A_SpawnItemEx("SilverArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor3_Drop:
		TNT1 A 0 A_SpawnItemEx("QuakeRedArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor3_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("SamsaraSilverArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Marathon Armor
	Armor4:
	Armor4_WithYellow:
		TNT1 A 0 A_SpawnItemEx("MarathonBlueArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor4_Drop:
	Armor4_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("MarathonBlueArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// No Armor
	Armor5:
	Armor5_WithYellow:
	Armor5_Drop:
	Armor5_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("NoArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop	
	}
}

// Red Armor Pickups
Actor ArmorPack3 : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.95
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMOR0_4"
	//Inventory.PickupSound "armor3get"
	Inventory.Icon "RMR3A0"
	//Armor.Saveamount 250
	//Armor.MaxSaveAmount 250
	States
	{
	Spawn:
		TNT1 A 0
		RMR3 A 0 BRIGHT
		RMR3 A 35 BRIGHT Light("ARMORRED1") ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 250, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 27, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor3get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("ArmorPack3Armor", 250)
		stop
	PickupFail:
        RMR3 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor QuakeRedArmor : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.975
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMOR12_3"
	//Inventory.PickupSound "armor2get"
	Inventory.Icon "RMR3A0"
	//Armor.Saveamount 200
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		RMR3 A 0 BRIGHT
		RMR3 A 35 BRIGHT ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasProsperity", 1, "CheckForProsperity")
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 200, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	CheckForProsperity:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 250, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupProsperity")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 30, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor2get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("QuakeRedArmorArmor", 200)
		stop
	PickupProsperity:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 30, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor2get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("QuakeRedArmorProsperityArmor", 200)
		stop
	PickupFail:
        RMR3 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor SamsaraSilverArmor : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.95
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMOR12_4"
	//Inventory.PickupSound "armor3get"
	Inventory.Icon "RMR6A0"
	//Armor.Saveamount 250
	//Armor.MaxSaveAmount 250
	States
	{
	Spawn:
		TNT1 A 0
		RMR6 A 0 BRIGHT
		RMR6 A 35 BRIGHT ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 250, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 31, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor3get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("SamsaraSilverArmorArmor", 250)
		stop
	PickupFail:
        RMR6 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor MarathonRedArmor : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.95
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMOR3_4"
	//Inventory.PickupSound "armor3get"
	Inventory.Icon "RMR9A0"
	//Armor.Saveamount 300
	//Armor.MaxSaveAmount 300
	States
	{
	Spawn:
		TNT1 A 0
		RMR9 A 0 BRIGHT
		RMR9 A 35 bright ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 300, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 35, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("FFFFF0", 0.3, 4) // Ivory
		TNT1 A 0 A_PlaySound("armor3get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("MarathonRedArmorArmor", 300)
		stop
	PickupFail:
        RMR9 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor RedArmorNoDrop : ArmorPack3
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor QRedArmorNoDrop : QuakeRedArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor SilverArmorNoDrop : SamsaraSilverArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor MarathonRedArmorNoDrop : MarathonRedArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor ArmorPack3Armor : BasicArmorPickup
{
	Armor.SaveAmount 250
	Armor.SavePercent 66.66666

	// Fire damage types
	DamageFactor "Fire", 0.125
	DamageFactor "WolfenFlamethrower", 0.125
	DamageFactor "TotenkopfFire", 0.125
	DamageFactor "CalebFire", 0.125
	DamageFactor "LifeLeech", 0.125
	DamageFactor "FireExplosive", 0.125
	DamageFactor "Hexen2Fire", 0.125
	DamageFactor "DoomDamageTypeFire", 0.125
	DamageFactor "DoomDamageTypeFireExplosive", 0.125
	DamageFactor "RottFire", 0.125
	DamageFactor "WTRangedFire", 0.125
	DamageFactor "DeusExFlamed", 0.125
	DamageFactor "PSFire", 0.125
	DamageFactor "SWFlame", 0.125
	DamageFactor "PGFire", 0.125
	DamageFactor "PainkillerFire", 0.125
	DamageFactor "QuakeFire", 0.125
	DamageFactor "RTCWFire", 0.125
	DamageFactor "HexGreenFire", 0.125
	DamageFactor "MarathonPlasmaFire", 0.125
	DamageFactor "PhosFire", 0.125
	DamageFactor "PhosFireCoop", 0.125
	DamageFactor "EradGreenFire", 0.125
	DamageFactor "EradCoopGreenFire", 0.125
	DamageFactor "SWFlame", 0.125
	DamageFactor "SWFlame2", 0.125
	DamageFactor "SWFlame2Coop", 0.125
	DamageFactor "SWFlame3", 0.125
	DamageFactor "BittermanFire", 0.125

	// Explosive damage types
	DamageFactor "Explosive", 0.125
	DamageFactor "DoomDamageType", 0.125
	DamageFactor "DukeExplosive", 0.125
	DamageFactor "DukeSpectral", 0.125
	DamageFactor "NotQuadded", 0.125
	DamageFactor "SpectralNoQuad", 0.125
	DamageFactor "BCannonProj", 0.125
	DamageFactor "DCannonProj", 0.125
	DamageFactor "CMDMGSHIT", 0.125
	DamageFactor "Disruptoruniversaldamageshit4", 0.125
	DamageFactor "EradExplosive", 0.125
	DamageFactor "EradExplosive2", 0.125
	DamageFactor "RottExplosive", 0.125
	DamageFactor "HLRPGExplosive", 0.125
	DamageFactor "PSExplosive", 0.125
	DamageFactor "LeonardDamage2", 0.125
	DamageFactor "SWRocket", 0.125
	DamageFactor "SWGrenade", 0.125
	DamageFactor "SWSticky", 0.125
	DamageFactor "SWNuke", 0.125
	DamageFactor "PGExplosive", 0.125
	DamageFactor "PainkillerExplosive", 0.125
	DamageFactor "RMR-DiscoBall", 0.125
	DamageFactor "RTCWExplosive", 0.125
	DamageFactor "Q3Explosive", 0.125
	DamageFactor "StrifeExplosive", 0.125
	DamageFactor "UnrealExplosive", 0.125
	DamageFactor "HLExplosive", 0.125
	DamageFactor "CalebNapalm", 0.125
	DamageFactor "Dynamite", 0.125
	DamageFactor "DynamiteCoop", 0.125
	DamageFactor "PSExplosiveCoop", 0.125
	DamageFactor "SWStickyCoop", 0.125
	DamageFactor "SWNukeCoop", 0.125
	DamageFactor "QuakeExplosive", 0.125
	DamageFactor "UnrealRedeemer", 0.125
	DamageFactor "UnrealExtreme", 0.125
	DamageFactor "Q3BFG", 0.125
	DamageFactor "DeusExRifleExploded", 0.125
	DamageFactor "DoomTheseGuysAreTheBest", 0.125
}

Actor QuakeRedArmorArmor : BasicArmorPickup
{
	Armor.SaveAmount 200
	Armor.SavePercent 80
}

Actor QuakeRedArmorProsperityArmor : BasicArmorPickup
{
	Armor.SaveAmount 250
	Armor.SavePercent 80
}

Actor SamsaraSilverArmorArmor : BasicArmorPickup
{
	Armor.SaveAmount 250
	Armor.SavePercent 90

	// Fire damage types
	DamageFactor "Fire", 0.125
	DamageFactor "WolfenFlamethrower", 0.125
	DamageFactor "TotenkopfFire", 0.125
	DamageFactor "CalebFire", 0.125
	DamageFactor "LifeLeech", 0.125
	DamageFactor "FireExplosive", 0.125
	DamageFactor "Hexen2Fire", 0.125
	DamageFactor "DoomDamageTypeFire", 0.125
	DamageFactor "DoomDamageTypeFireExplosive", 0.125
	DamageFactor "RottFire", 0.125
	DamageFactor "WTRangedFire", 0.125
	DamageFactor "DeusExFlamed", 0.125
	DamageFactor "PSFire", 0.125
	DamageFactor "SWFlame", 0.125
	DamageFactor "PGFire", 0.125
	DamageFactor "PainkillerFire", 0.125
	DamageFactor "QuakeFire", 0.125
	DamageFactor "RTCWFire", 0.125
	DamageFactor "HexGreenFire", 0.125
	DamageFactor "MarathonPlasmaFire", 0.125
	DamageFactor "PhosFire", 0.125
	DamageFactor "PhosFireCoop", 0.125
	DamageFactor "EradGreenFire", 0.125
	DamageFactor "EradCoopGreenFire", 0.125
	DamageFactor "SWFlame", 0.125
	DamageFactor "SWFlame2", 0.125
	DamageFactor "SWFlame2Coop", 0.125
	DamageFactor "SWFlame3", 0.125
	DamageFactor "BittermanFire", 0.125

	// Explosive damage types
	DamageFactor "Explosive", 0.125
	DamageFactor "DoomDamageType", 0.125
	DamageFactor "DukeExplosive", 0.125
	DamageFactor "DukeSpectral", 0.125
	DamageFactor "NotQuadded", 0.125
	DamageFactor "SpectralNoQuad", 0.125
	DamageFactor "BCannonProj", 0.125
	DamageFactor "DCannonProj", 0.125
	DamageFactor "CMDMGSHIT", 0.125
	DamageFactor "Disruptoruniversaldamageshit4", 0.125
	DamageFactor "EradExplosive", 0.125
	DamageFactor "EradExplosive2", 0.125
	DamageFactor "RottExplosive", 0.125
	DamageFactor "HLRPGExplosive", 0.125
	DamageFactor "PSExplosive", 0.125
	DamageFactor "LeonardDamage2", 0.125
	DamageFactor "SWRocket", 0.125
	DamageFactor "SWGrenade", 0.125
	DamageFactor "SWSticky", 0.125
	DamageFactor "SWNuke", 0.125
	DamageFactor "PGExplosive", 0.125
	DamageFactor "PainkillerExplosive", 0.125
	DamageFactor "RMR-DiscoBall", 0.125
	DamageFactor "RTCWExplosive", 0.125
	DamageFactor "Q3Explosive", 0.125
	DamageFactor "StrifeExplosive", 0.125
	DamageFactor "UnrealExplosive", 0.125
	DamageFactor "HLExplosive", 0.125
	DamageFactor "CalebNapalm", 0.125
	DamageFactor "Dynamite", 0.125
	DamageFactor "DynamiteCoop", 0.125
	DamageFactor "PSExplosiveCoop", 0.125
	DamageFactor "SWStickyCoop", 0.125
	DamageFactor "SWNukeCoop", 0.125
	DamageFactor "QuakeExplosive", 0.125
	DamageFactor "UnrealRedeemer", 0.125
	DamageFactor "UnrealExtreme", 0.125
	DamageFactor "Q3BFG", 0.125
	DamageFactor "DeusExRifleExploded", 0.125
	DamageFactor "DoomTheseGuysAreTheBest", 0.125
}

Actor MarathonRedArmorArmor : BasicArmorPickup
{
	Armor.SaveAmount 300
	Armor.SavePercent 100
}

Actor RedArmor 5040
{
	+NOINTERACTION
	States
	{
	Spawn:
		RMR3 A 0 BRIGHT
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 29, 0, 0) == 1, "Armor5")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 19), "Armor5")
		TNT1 A 35 ACS_NamedExecuteWithResult("SamsaraDecorate", 18, 3)
		stop

	// Default Armor
	Armor1:
	Armor1_WithYellow:
		TNT1 A 0 A_SpawnItemEx("RedArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor1_Drop:
	Armor1_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("ArmorPack3", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Quake Armor
	Armor2:
		TNT1 A 0 A_SpawnItemEx("QRedArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor2_WithYellow:
		TNT1 A 0 A_SpawnItemEx("SilverArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor2_Drop:
		TNT1 A 0 A_SpawnItemEx("QuakeRedArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor2_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("SamsaraSilverArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Quake+ Armor
	Armor3:
	Armor3_WithYellow:
		TNT1 A 0 A_SpawnItemEx("SilverArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor3_Drop:
	Armor3_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("SamsaraSilverArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Marathon Armor
	Armor4:
	Armor4_WithYellow:
		TNT1 A 0 A_SpawnItemEx("MarathonRedArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor4_Drop:
	Armor4_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("MarathonRedArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// No Armor
	Armor5:
	Armor5_WithYellow:
	Armor5_Drop:
	Armor5_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("NoArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop	
	}
}

Actor NoArmor : BasicArmorPickup
{
	Armor.SaveAmount 0
	Armor.SavePercent 0
	States
	{
	States:
		TNT1 A 0
		stop
	}
}

// Heretic Armor Scraps
Actor HereticArmorScrap : CustomInventory
{
	Scale 0.55
	RenderStyle Add
	Alpha 0.9
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMORSCRAP_HERETIC"
	//Inventory.PickupSound "armor0get"
	Inventory.Icon "RMR1A0"
	//Armor.Saveamount 5
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		BON3 A 0 BRIGHT
		BON3 A 35 BRIGHT ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 200, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 36, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor0get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HereticArmorScrapArmor", 1)
		stop
	PickupFail:
        BON3 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor HereticQuakeArmorScrap : CustomInventory
{
	Scale 0.55
	RenderStyle Add
	Alpha 0.9
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMORSCRAP_HERETIC"
	//Inventory.PickupSound "armor0get"
	Inventory.Icon "RMR1A0"
	//Armor.Saveamount 5
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		BON3 A 0 BRIGHT
		BON3 A 35 BRIGHT ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 200, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 36, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor0get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HereticQuakeArmorScrapArmor", 1)
		stop
	PickupFail:
        BON3 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor HereticQuakeArmorScrap2 : CustomInventory
{
	Scale 0.55
	RenderStyle Add
	Alpha 0.9
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMORSCRAP_HERETIC"
	//Inventory.PickupSound "armor0get"
	Inventory.Icon "RMR1A0"
	//Armor.Saveamount 5
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		BON3 A 0 BRIGHT
		BON3 A 35 BRIGHT ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 200, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 36, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor0get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HereticQuakeArmorScrap2Armor", 1)
		stop
	PickupFail:
        BON3 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor HereticMarathonArmorScrap : CustomInventory
{
	Scale 0.55
	RenderStyle Add
	Alpha 0.9
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMORSCRAP3_HERETIC"
	//Inventory.PickupSound "armor0get"
	Inventory.Icon "RMR1A0"
	//Armor.Saveamount 5
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		BON3 A 0 BRIGHT
		BON3 A 35 BRIGHT ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 200, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 37, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("FFFFF0", 0.3, 4) // Ivory
		TNT1 A 0 A_PlaySound("armor0get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HereticMarathonArmorScrapArmor", 1)
		stop
	PickupFail:
        BON3 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor HereticArmorScrapNoDrop : HereticArmorScrap
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor HereticQuakeArmorScrapNoDrop : HereticQuakeArmorScrap
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor HereticQuakeArmorScrap2NoDrop : HereticQuakeArmorScrap2
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor HereticMarathonArmorScrapNoDrop : HereticMarathonArmorScrap
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor HereticArmorScrapArmor : BasicArmorBonus
{
	Armor.SaveAmount 5
	Armor.SavePercent 33.335
	Armor.MaxSaveAmount 200
}

Actor HereticQuakeArmorScrapArmor : BasicArmorBonus
{
	Armor.SaveAmount 5
	Armor.SavePercent 30
	Armor.MaxSaveAmount 200
}

Actor HereticQuakeArmorScrap2Armor : BasicArmorBonus
{
	Armor.SaveAmount 5
	Armor.SavePercent 60
	Armor.MaxSaveAmount 200
}

Actor HereticMarathonArmorScrapArmor : BasicArmorBonus
{
	Armor.SaveAmount 5
	Armor.SavePercent 100
	Armor.MaxSaveAmount 200
}

Actor HereticArmorDump replaces ArtiTimeBomb
{
	+NOINTERACTION
	States
	{
	Spawn:
		BON3 A 0 BRIGHT
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 29, 0, 0) == 1, "Armor5")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 19), "Armor5")
		TNT1 A 35 ACS_NamedExecuteWithResult("SamsaraDecorate", 18, 0)
		stop

	// Default Armor
	Armor1:
	Armor1_WithYellow:
		TNT1 A 0 A_SpawnItemEx("HereticArmorScrapNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor1_Drop:
	Armor1_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("HereticArmorScrap", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Quake Armor
	Armor2:
	Armor2_WithYellow:
		TNT1 A 0 A_SpawnItemEx("HereticQuakeArmorScrapNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor2_Drop:
	Armor2_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("HereticQuakeArmorScrap", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Quake+ Armor
	Armor3:
	Armor3_WithYellow:
		TNT1 A 0 A_SpawnItemEx("HereticQuakeArmorScrap2NoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor3_Drop:
	Armor3_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("HereticQuakeArmorScrap2", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Marathon Armor
	Armor4:
	Armor4_WithYellow:
		TNT1 A 0 A_SpawnItemEx("HereticMarathonArmorScrapNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor4_Drop:
	Armor4_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("HereticMarathonArmorScrap", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// No Armor
	Armor5:
	Armor5_WithYellow:
	Armor5_Drop:
	Armor5_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("NoArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop	
	}
}

// Heretic Green Armor Pickups
Actor HereticArmorPack1 : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.9
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMOR0_1"
	//Inventory.PickupSound "armor1get"
	Inventory.Icon "RMR1A0"
	//Armor.Saveamount 100
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		RMR1 A 0 BRIGHT
		RMR1 A 35 BRIGHT Light("ARMORGREEN1") ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasProsperity", 1, "CheckForProsperity")
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 100, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	CheckForProsperity:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 250, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupProsperity")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 24, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HereticArmorPack1Armor", 100)
		stop
	PickupProsperity:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 24, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HereticArmorPack1ProsperityArmor", 100)
		stop
	PickupFail:
        RMR1 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor HereticGreenArmorNoDrop : HereticArmorPack1
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor HereticArmorPack1Armor : BasicArmorPickup
{
	Armor.SaveAmount 100
	Armor.SavePercent 50
}

Actor HereticArmorPack1ProsperityArmor : BasicArmorPickup
{
	Armor.SaveAmount 250
	Armor.SavePercent 50
}

Actor HereticGreenArmorPickup : GreenArmorPickup replaces SilverShield
{
	+NOINTERACTION
	States
	{
	// Default Armor
	Armor1:
	Armor1_WithYellow:
		TNT1 A 0 A_SpawnItemEx("HereticGreenArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor1_Drop:
	Armor1_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("HereticArmorPack1", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	}
}

// Heretic Blue Armor Pickups
Actor HereticArmorPack2 : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.975
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMOR0_3"
	//Inventory.PickupSound "armor2get"
	Inventory.Icon "RMR2A0"
	//Armor.Saveamount 200
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		RMR2 A 0 BRIGHT
		RMR2 A 35 BRIGHT Light("ARMORBLUE1") ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 98)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasProsperity", 1, "CheckForProsperity")
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 200, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	CheckForProsperity:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 250, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupProsperity")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 26, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor2get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HereticArmorPack2Armor", 200)
		stop
	PickupProsperity:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 26, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor2get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HereticArmorPack2ProsperityArmor", 200)
		stop
	PickupFail:
        RMR2 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor HereticBlueArmorNoDrop : HereticArmorPack2
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor HereticArmorPack2Armor : BasicArmorPickup
{
	Armor.SaveAmount 200
	Armor.SavePercent 75
}

Actor HereticArmorPack2ProsperityArmor : BasicArmorPickup
{
	Armor.SaveAmount 250
	Armor.SavePercent 75
}

Actor HereticBlueArmorPickup : BlueArmorPickup replaces EnchantedShield
{
	+NOINTERACTION
	States
	{
	// Default Armor
	Armor1:
	Armor1_WithYellow:
		TNT1 A 0 A_SpawnItemEx("HereticBlueArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor1_Drop:
	Armor1_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("HereticArmorPack2", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	}
}

// Hexen Light Armor Pickups
Actor HexenArmorPack1 : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.875
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMORHEXEN"
	//Inventory.PickupSound "armor1get"
	Inventory.Icon "RMR4A0"
	//Armor.Saveamount 200
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		RMR4 A 0 BRIGHT
		RMR4 A 35 BRIGHT ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasProsperity", 1, "CheckForProsperity")
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 200, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	CheckForProsperity:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 250, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupProsperity")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 38, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HexenArmorPack1Armor", 25)
		stop
	PickupProsperity:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 38, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HexenArmorPack1ProsperityArmor", 25)
		stop
	PickupFail:
        RMR4 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor HexenQuakeGreenArmor : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.9
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMORHEXEN"
	//Inventory.PickupSound "armor1get"
	Inventory.Icon "RMR7A0"
	//Armor.Saveamount 200
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		RMR7 A 0 BRIGHT
		RMR7 A 35 BRIGHT ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasProsperity", 1, "CheckForProsperity")
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 200, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	CheckForProsperity:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 250, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupProsperity")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 38, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HexenQuakeGreenArmorArmor", 25)
		stop
	PickupProsperity:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 38, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HexenQuakeGreenArmorProsperityArmor", 25)
		stop
	PickupFail:
        RMR7 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor HexenQuakeYellowArmor : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.9
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMORHEXEN"
	//Inventory.PickupSound "armor1get"
	Inventory.Icon "RMR5A0"
	//Armor.Saveamount 200
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		RMR5 A 0 BRIGHT
		RMR5 A 35 BRIGHT ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasProsperity", 1, "CheckForProsperity")
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 200, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	CheckForProsperity:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 250, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupProsperity")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 38, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HexenQuakeYellowArmorArmor", 25)
		stop
	PickupProsperity:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 38, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HexenQuakeYellowArmorProsperityArmor", 25)
		stop
	PickupFail:
        RMR5 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor HexenMarathonGreenArmor : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.9
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_ARMORHEXEN"
	//Inventory.PickupSound "armor1get"
	Inventory.Icon "RMR0A0"
	//Armor.Saveamount 200
	//Armor.MaxSaveAmount 200
	States
	{
	Spawn:
		TNT1 A 0
		RMR0 A 0 BRIGHT
		RMR0 A 35 bright ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("SamsaraHasProsperity", 1, "CheckForProsperity")
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 200, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	CheckForProsperity:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 250, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupProsperity")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 39, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("FFFFF0", 0.3, 4) // Ivory
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HexenMarathonGreenArmorArmor", 25)
		stop
	PickupProsperity:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 39, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("FFFFF0", 0.3, 4) // Ivory
		TNT1 A 0 A_PlaySound("armor1get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HexenMarathonGreenArmorProsperityArmor", 25)
		stop
	PickupFail:
        RMR0 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor HexenGreenArmorNoDrop : HexenArmorPack1
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor HexenQGreenArmorNoDrop : HexenQuakeGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor HexenQYellowArmorNoDrop : HexenQuakeYellowArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor HexenMarathonGreenArmorNoDrop : HexenMarathonGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor HexenArmorPack1Armor : BasicArmorBonus
{
	Armor.SaveAmount 25
	Armor.SavePercent 33.335
	Armor.MaxSaveAmount 200
}

Actor HexenQuakeGreenArmorArmor : BasicArmorBonus
{
	Armor.SaveAmount 25
	Armor.SavePercent 30
	Armor.MaxSaveAmount 200
}

Actor HexenQuakeYellowArmorArmor : BasicArmorBonus
{
	Armor.SaveAmount 25
	Armor.SavePercent 60
	Armor.MaxSaveAmount 200
}

Actor HexenMarathonGreenArmorArmor : BasicArmorBonus
{
	Armor.SaveAmount 25
	Armor.SavePercent 100
	Armor.MaxSaveAmount 200
}

Actor HexenArmorPack1ProsperityArmor : BasicArmorBonus
{
	Armor.SaveAmount 25
	Armor.SavePercent 33.335
	Armor.MaxSaveAmount 250
}

Actor HexenQuakeGreenArmorProsperityArmor : BasicArmorBonus
{
	Armor.SaveAmount 25
	Armor.SavePercent 30
	Armor.MaxSaveAmount 250
}

Actor HexenQuakeYellowArmorProsperityArmor : BasicArmorBonus
{
	Armor.SaveAmount 25
	Armor.SavePercent 60
	Armor.MaxSaveAmount 250
}

Actor HexenMarathonGreenArmorProsperityArmor : BasicArmorBonus
{
	Armor.SaveAmount 25
	Armor.SavePercent 100
	Armor.MaxSaveAmount 250
}

Actor HexenArmor1 replaces AmuletOfWarding
{
	+NOINTERACTION
	States
	{
	Spawn:
		RMR4 A 0 BRIGHT
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 29, 0, 0) == 1, "Armor5")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 19), "Armor5")
		TNT1 A 35 ACS_NamedExecuteWithResult("SamsaraDecorate", 18, 0)
		stop

	// Default Armor
	Armor1:
	Armor1_WithYellow:
		TNT1 A 0 A_SpawnItemEx("HexenGreenArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor1_Drop:
	Armor1_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("HexenArmorPack1", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Quake Armor
	Armor2:
	Armor2_WithYellow:
		TNT1 A 0 A_SpawnItemEx("HexenQGreenArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor2_Drop:
	Armor2_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("HexenQuakeGreenArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Quake+ Armor
	Armor3:
	Armor3_WithYellow:
		TNT1 A 0 A_SpawnItemEx("HexenQYellowArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor3_Drop:
	Armor3_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("HexenQuakeYellowArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Marathon Armor
	Armor4:
	Armor4_WithYellow:
		TNT1 A 0 A_SpawnItemEx("HexenMarathonGreenArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor4_Drop:
	Armor4_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("HexenMarathonGreenArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// No Armor
	Armor5:
	Armor5_WithYellow:
	Armor5_Drop:
	Armor5_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("NoArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop	
	}
}

// Hexen Heavy Armor
Actor HexenArmorPack2 : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.975
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_POWERUP_ARMOR"
	//Inventory.PickupSound "armor2get"
	Inventory.Icon "RMR2A0"
	//Armor.Saveamount 50
	//Armor.MaxSaveAmount 300
	States
	{
	Spawn:
		TNT1 A 0
		RMR2 A 0 BRIGHT
		RMR2 A 35 BRIGHT Light("ARMORBLUE1") ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 98)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 300, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 40, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor2get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HexenArmorPack2Armor", 50)
		stop
	PickupFail:
        RMR2 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor HexenQuakeRedArmor : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.975
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_POWERUP_ARMOR"
	//Inventory.PickupSound "armor2get"
	Inventory.Icon "RMR3A0"
	//Armor.Saveamount 50
	//Armor.MaxSaveAmount 300
	States
	{
	Spawn:
		TNT1 A 0
		RMR3 A 0 BRIGHT
		RMR3 A 35 BRIGHT ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 300, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 40, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor2get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HexenQuakeRedArmorArmor", 50)
		stop
	PickupFail:
        RMR3 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor HexenSamsaraSilverArmor : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.95
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_POWERUP_ARMOR"
	//Inventory.PickupSound "armor2get"
	Inventory.Icon "RMR6A0"
	//Armor.Saveamount 50
	//Armor.MaxSaveAmount 300
	States
	{
	Spawn:
		TNT1 A 0
		RMR6 A 0 BRIGHT
		RMR6 A 35 BRIGHT ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 300, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 40, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("d7ba45", 0.3, 4)
		TNT1 A 0 A_PlaySound("armor2get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HexenSamsaraSilverArmorArmor", 50)
		stop
	PickupFail:
        RMR6 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor HexenMarathonBlueArmor : CustomInventory
{
	Scale 0.75
	RenderStyle Add
	Alpha 0.95
	+FLOATBOB
	+INVENTORY.QUIET
	-INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	//Inventory.Pickupmessage "$SAMSARA_POWERUP_ARMOR3"
	//Inventory.PickupSound "armor2get"
	Inventory.Icon "RMR5A0"
	//Armor.Saveamount 50
	//Armor.MaxSaveAmount 300
	States
	{
	Spawn:
		TNT1 A 0
		RMR5 A 0 BRIGHT
		RMR5 A 35 bright ACS_NamedExecuteAlways("SamsaraClientDecorate", 0, 4, 100, 90)
		wait
	Pickup:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 300, "PickupFail")
		TNT1 A -1 A_Jump(256,"PickupActual")
		wait
	PickupActual:
		TNT1 A 0 ACS_NamedExecuteAlways("SamsaraPickupMessages", 0, 41, 0, 0)
		TNT1 A 0 A_JumpIfInventory("PickupFlashesAreDisabled",1,2)
		TNT1 A 0 A_SetBlend("FFFFF0", 0.3, 4) // Ivory
		TNT1 A 0 A_PlaySound("armor2get", CHAN_ITEM)
		TNT1 A 1 A_GiveInventory("HexenMarathonBlueArmorArmor", 50)
		stop
	PickupFail:
        RMR5 A 1 BRIGHT
        fail
	PickupStop:
		TNT1 A 0
		stop
	SpawnCancel:
		TNT1 A 1 A_FadeOut
		stop
	}
}

Actor HexenBlueArmorNoDrop : HexenArmorPack2
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor HexenQRedArmorNoDrop : HexenQuakeRedArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor HexenSilverArmorNoDrop : HexenSamsaraSilverArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor HexenMarathonBlueArmorNoDrop : HexenMarathonBlueArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		goto Super::Spawn
	}
}

Actor HexenArmorPack2Armor : BasicArmorBonus
{
	Armor.SaveAmount 50
	Armor.SavePercent 33.335
	Armor.MaxSaveAmount 300
}

Actor HexenQuakeRedArmorArmor : BasicArmorBonus
{
	Armor.SaveAmount 50
	Armor.SavePercent 30
	Armor.MaxSaveAmount 300
}

Actor HexenSamsaraSilverArmorArmor : BasicArmorBonus
{
	Armor.SaveAmount 50
	Armor.SavePercent 60
	Armor.MaxSaveAmount 300
}

Actor HexenMarathonBlueArmorArmor : BasicArmorBonus
{
	Armor.SaveAmount 50
	Armor.SavePercent 100
	Armor.MaxSaveAmount 300
}

Actor HexenArmor5 replaces ArtiBoostArmor
{
	+NOINTERACTION
	States
	{
	Spawn:
		RMR4 A 0 BRIGHT
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 29, 0, 0) == 1, "Armor5")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 19), "Armor5")
		TNT1 A 35 ACS_NamedExecuteWithResult("SamsaraDecorate", 18, 0)
		stop

	// Default Armor
	Armor1:
	Armor1_WithYellow:
		TNT1 A 0 A_SpawnItemEx("HexenBlueArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor1_Drop:
	Armor1_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("HexenArmorPack2", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Quake Armor
	Armor2:
	Armor2_WithYellow:
		TNT1 A 0 A_SpawnItemEx("HexenQRedArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor2_Drop:
	Armor2_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("HexenQuakeRedArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Quake+ Armor
	Armor3:
	Armor3_WithYellow:
		TNT1 A 0 A_SpawnItemEx("HexenSilverArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor3_Drop:
	Armor3_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("HexenSamsaraSilverArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// Marathon Armor
	Armor4:
	Armor4_WithYellow:
		TNT1 A 0 A_SpawnItemEx("HexenMarathonBlueArmorNoDrop", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	Armor4_Drop:
	Armor4_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("HexenMarathonBlueArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop

	// No Armor
	Armor5:
	Armor5_WithYellow:
	Armor5_Drop:
	Armor5_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("NoArmor", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPECIAL)
		stop
	}
}

// Strife Leather Armor
actor SamsaraLeatherArmorPickup : CustomInventory replaces LeatherArmor
{
	ConversationID 130
	+DONTGIB
	+NOINTERACTION
	+QUIET
	+THRUACTORS // don't pick up until the item actually spawns
	States
	{
	Spawn:
		ARM4 A 0
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 29), "Armor5")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 19), "Armor5")
		TNT1 A 35 ACS_NamedExecuteWithResult("SamsaraDecorate", 18, 0)
		Stop

	Armor1:
	Armor1_WithYellow:
		TNT1 A 0 A_SpawnItemEx("StrifeGreenArmorNoDrop",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor1_Drop:
	Armor1_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("StrifeArmorPack1",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor2:
	Armor2_WithYellow:
		TNT1 A 0 A_SpawnItemEx("StrifeQGreenArmorNoDrop",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor2_Drop:
	Armor2_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("StrifeQuakeGreenArmor",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor3:
	Armor3_WithYellow:
		TNT1 A 0 A_SpawnItemEx("StrifeQYellowArmorNoDrop",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor3_Drop:
	Armor3_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("StrifeQuakeYellowArmor",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor4:
	Armor4_WithYellow:
		TNT1 A 0 A_SpawnItemEx("StrifeMarathonGreenArmorNoDrop",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor4_Drop:
	Armor4_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("StrifeMarathonGreenArmor",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor5:
	Armor5_WithYellow:
	Armor5_Drop:
	Armor5_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("NoArmor",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Pickup:
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 29), "PickupArmor5")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 19), "PickupArmor5")
	PickupArmorCheck:
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 42) >= 4, "PickupArmor5")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 42) == 3, "PickupArmor4")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 42) == 2, "PickupArmor3")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 42) == 1, "PickupArmor2")
	PickupArmor1:
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 42, 1), "PickupArmor1Yellow") // turns out these don't actually work, but I'll keep them in anyway
	PickupArmor1Yellow:
		TNT1 A 0 A_GiveInventory("StrifeGreenArmorNoDrop")
		Stop

	PickupArmor2:
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 42, 1), "PickupArmor2Yellow")
	PickupArmor2Yellow:
		TNT1 A 0 A_GiveInventory("StrifeQGreenArmorNoDrop")
		Stop

	PickupArmor3:
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 42, 1), "PickupArmor3Yellow")
	PickupArmor3Yellow:
		TNT1 A 0 A_GiveInventory("StrifeQYellowArmorNoDrop")
		Stop

	PickupArmor4:
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 42, 1), "PickupArmor4Yellow")
	PickupArmor4Yellow:
		TNT1 A 0 A_GiveInventory("StrifeMarathonGreenArmorNoDrop")
		Stop

	PickupArmor5:
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 42, 1), "PickupArmor5Yellow")
	PickupArmor5Yellow:
		TNT1 A 0
		Fail
	}
}

actor StrifeArmorPack1 : LeatherArmor {}

actor StrifeQuakeGreenArmor : LeatherArmor
{
	Armor.SaveAmount 100
	Armor.SavePercent 30
}

actor StrifeQuakeYellowArmor : LeatherArmor
{
	Armor.SaveAmount 150
	Armor.SavePercent 60
}

actor StrifeMarathonGreenArmor : LeatherArmor
{
	Armor.SaveAmount 100
	Armor.SavePercent 100
}

actor StrifeGreenArmorNoDrop : StrifeArmorPack1
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		Goto Super::Spawn
	}
}

actor StrifeQGreenArmorNoDrop : StrifeQuakeGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		Goto Super::Spawn
	}
}

actor StrifeQYellowArmorNoDrop : StrifeQuakeYellowArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		Goto Super::Spawn
	}
}

actor StrifeMarathonGreenArmorNoDrop : StrifeMarathonGreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		Goto Super::Spawn
	}
}

// Strife Metal Armor
actor SamsaraMetalArmorPickup : CustomInventory replaces MetalArmor
{
	ConversationID 129
	+DONTGIB
	+NOINTERACTION
	+QUIET
	+THRUACTORS // don't pick up until the item actually spawns
	States
	{
	Spawn:
		ARM3 A 0
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 29), "Armor5")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 19), "Armor5")
		TNT1 A 35 ACS_NamedExecuteWithResult("SamsaraDecorate", 18, 2)
		Stop

	Armor1:
	Armor1_WithYellow:
		TNT1 A 0 A_SpawnItemEx("StrifeBlueArmorNoDrop",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor1_Drop:
	Armor1_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("StrifeArmorPack2",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor2:
		TNT1 A 0 A_SpawnItemEx("StrifeQYellowArmorNoDrop",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor2_WithYellow:
		TNT1 A 0 A_SpawnItemEx("StrifeQRedArmorNoDrop",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor2_Drop:
		TNT1 A 0 A_SpawnItemEx("StrifeQuakeYellowArmor",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor2_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("StrifeQuakeRedArmor",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor3:
		TNT1 A 0 A_SpawnItemEx("StrifeQRedArmorNoDrop",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor3_WithYellow:
		TNT1 A 0 A_SpawnItemEx("StrifeSilverArmorNoDrop",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor3_Drop:
		TNT1 A 0 A_SpawnItemEx("StrifeQuakeRedArmor",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor3_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("SamsaraStrifeSilverArmor",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor4:
	Armor4_WithYellow:
		TNT1 A 0 A_SpawnItemEx("StrifeMarathonBlueArmorNoDrop",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor4_Drop:
	Armor4_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("StrifeMarathonBlueArmor",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Armor5:
	Armor5_WithYellow:
	Armor5_Drop:
	Armor5_YellowDrop:
		TNT1 A 0 A_SpawnItemEx("NoArmor",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL)
		Stop

	Pickup:
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 29), "PickupArmor5")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 19), "PickupArmor5")
	PickupArmorCheck:
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 42) >= 4, "PickupArmor5")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 42) == 3, "PickupArmor4")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 42) == 2, "PickupArmor3")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 42) == 1, "PickupArmor2")
	PickupArmor1:
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 42, 1), "PickupArmor1Yellow") // turns out these don't actually work, but I'll keep them in anyway
	PickupArmor1Yellow:
		TNT1 A 0 A_GiveInventory("StrifeBlueArmorNoDrop")
		Stop

	PickupArmor2:
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 42, 1), "PickupArmor2Yellow")
		TNT1 A 0 A_GiveInventory("StrifeQYellowArmorNoDrop")
		Stop

	PickupArmor2Yellow:
		TNT1 A 0 A_GiveInventory("StrifeQRedArmorNoDrop")
		Stop

	PickupArmor3:
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 42, 1), "PickupArmor3Yellow")
		TNT1 A 0 A_GiveInventory("StrifeQRedArmorNoDrop")
		Stop

	PickupArmor3Yellow:
		TNT1 A 0 A_GiveInventory("StrifeSilverArmorNoDrop")
		Stop

	PickupArmor4:
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 42, 1), "PickupArmor4Yellow")
	PickupArmor4Yellow:
		TNT1 A 0 A_GiveInventory("StrifeMarathonBlueArmorNoDrop")
		Stop

	PickupArmor5:
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate", 42, 1), "PickupArmor5Yellow")
	PickupArmor5Yellow:
		TNT1 A 0
		Fail
	}
}

actor StrifeArmorPack2 : MetalArmor {}

actor StrifeQuakeRedArmor : MetalArmor
{
	Armor.SaveAmount 200
	Armor.SavePercent 80
}

actor SamsaraStrifeSilverArmor : MetalArmor
{
	Armor.SaveAmount 250
	Armor.SavePercent 90

	// Fire damage types
	DamageFactor "Fire", 0.125
	DamageFactor "WolfenFlamethrower", 0.125
	DamageFactor "TotenkopfFire", 0.125
	DamageFactor "CalebFire", 0.125
	DamageFactor "LifeLeech", 0.125
	DamageFactor "FireExplosive", 0.125
	DamageFactor "Hexen2Fire", 0.125
	DamageFactor "DoomDamageTypeFire", 0.125
	DamageFactor "DoomDamageTypeFireExplosive", 0.125
	DamageFactor "RottFire", 0.125
	DamageFactor "WTRangedFire", 0.125
	DamageFactor "DeusExFlamed", 0.125
	DamageFactor "PSFire", 0.125
	DamageFactor "SWFlame", 0.125
	DamageFactor "PGFire", 0.125
	DamageFactor "PainkillerFire", 0.125
	DamageFactor "QuakeFire", 0.125
	DamageFactor "RTCWFire", 0.125
	DamageFactor "HexGreenFire", 0.125
	DamageFactor "MarathonPlasmaFire", 0.125
	DamageFactor "PhosFire", 0.125
	DamageFactor "PhosFireCoop", 0.125
	DamageFactor "EradGreenFire", 0.125
	DamageFactor "EradCoopGreenFire", 0.125
	DamageFactor "SWFlame", 0.125
	DamageFactor "SWFlame2", 0.125
	DamageFactor "SWFlame2Coop", 0.125
	DamageFactor "SWFlame3", 0.125

	// Explosive damage types
	DamageFactor "Explosive", 0.125
	DamageFactor "DoomDamageType", 0.125
	DamageFactor "DukeExplosive", 0.125
	DamageFactor "DukeSpectral", 0.125
	DamageFactor "NotQuadded", 0.125
	DamageFactor "SpectralNoQuad", 0.125
	DamageFactor "BCannonProj", 0.125
	DamageFactor "DCannonProj", 0.125
	DamageFactor "CMDMGSHIT", 0.125
	DamageFactor "Disruptoruniversaldamageshit4", 0.125
	DamageFactor "EradExplosive", 0.125
	DamageFactor "EradExplosive2", 0.125
	DamageFactor "RottExplosive", 0.125
	DamageFactor "HLRPGExplosive", 0.125
	DamageFactor "PSExplosive", 0.125
	DamageFactor "LeonardDamage2", 0.125
	DamageFactor "SWRocket", 0.125
	DamageFactor "SWGrenade", 0.125
	DamageFactor "SWSticky", 0.125
	DamageFactor "SWNuke", 0.125
	DamageFactor "PGExplosive", 0.125
	DamageFactor "PainkillerExplosive", 0.125
	DamageFactor "RMR-DiscoBall", 0.125
	DamageFactor "RTCWExplosive", 0.125
	DamageFactor "Q3Explosive", 0.125
	DamageFactor "StrifeExplosive", 0.125
	DamageFactor "UnrealExplosive", 0.125
	DamageFactor "HLExplosive", 0.125
	DamageFactor "CalebNapalm", 0.125
	DamageFactor "Dynamite", 0.125
	DamageFactor "DynamiteCoop", 0.125
	DamageFactor "PSExplosiveCoop", 0.125
	DamageFactor "SWStickyCoop", 0.125
	DamageFactor "SWNukeCoop", 0.125
	DamageFactor "QuakeExplosive", 0.125
	DamageFactor "UnrealRedeemer", 0.125
	DamageFactor "UnrealExtreme", 0.125
	DamageFactor "Q3BFG", 0.125
	DamageFactor "DeusExRifleExploded", 0.125
	DamageFactor "DoomTheseGuysAreTheBest", 0.125
}

actor StrifeMarathonBlueArmor : MetalArmor
{
	Armor.SaveAmount 200
	Armor.SavePercent 100
}

actor StrifeBlueArmorNoDrop : StrifeArmorPack2
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		Goto Super::Spawn
	}
}

actor StrifeQRedArmorNoDrop : StrifeQuakeRedArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		Goto Super::Spawn
	}
}

actor StrifeSilverArmorNoDrop : SamsaraStrifeSilverArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		Goto Super::Spawn
	}
}

actor StrifeMarathonBlueArmorNoDrop : StrifeMarathonBlueArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_ChangeFlag("DROPPED", 0)
		Goto Super::Spawn
	}
}

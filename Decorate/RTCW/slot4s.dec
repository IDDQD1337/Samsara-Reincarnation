actor RTCW_StG44Alt : Boolean {}

Actor RTCW_StG44 : RTCW_Weapon
{
	Weapon.SlotNumber 4
	Weapon.SlotPriority 1
	Weapon.SelectionOrder 500
	Weapon.AmmoType1 "RTCW_StG44Magazine"
	Weapon.AmmoUse1 1
	Weapon.AmmoType2 "Clip"
	Weapon.AmmoGive2 15
	Obituary "%o was killed (StG44) by %k."
	Inventory.Pickupmessage "StG44"
	Inventory.PickupSound "RTCW/WeaponPickup"
	Tag "StG44"
	+WEAPON.NOALERT
	+WEAPON.AMMO_OPTIONAL
	States
	{
		Spawn:
			RW98 A -1
			stop

        ReadyActual:
			RW00 A 0 A_TakeInventory("RTCW_FG42Spread")
			RW00 A 0 A_JumpIfInventory("RTCW_Kicking",1,"Kicking")
            RW00 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReadyActualReloadable")
        ReadyActualNonReloadable:
			RW00 A 1 A_WeaponReady
			goto ReadyActualAmmoCheck

        ReadyActualReloadable:
			RW00 A 1 A_WeaponReady(WRF_ALLOWRELOAD)
			goto ReadyActualAmmoCheck

        ReadyActualAmmoCheck:
            RW00 A 0 A_JumpIfInventory("SamsaraReloadMode",1,1)
            goto ReadyActual
            RW00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"ReadyActual")
            RW00 A 0 A_JumpIfInventory("RTCW_StG44Magazine",1,"ReadyActual")
            goto ReloadCheck

		Deselect:
			RW00 G 0 A_TakeInventory("RTCW_FG42Spread")
            RW00 G 0 A_JumpIfHealthLower(1,"DeselectInstant")
			RW00 G 2 A_PlaySound("RTCW/Change",CHAN_7)
			RW00 HIJK 2
			goto DeselectInstant

		Ready: // our "Select" state
			RW00 A 0 A_TakeInventory("RTCW_WeaponToken",256)
			RW00 A 0 A_GiveInventory("RTCW_WeaponToken",18)
			RW00 L 2 A_TakeInventory("RTCW_FG42Spread")
			RW00 MNO 2
            goto ReadyActual

		Fire:
            RW00 A 0 A_TakeInventory("RTCW_StG44Alt")
        FireAmmoCheck:
            RW00 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"FireAmmoCheckReloadable")
        FireAmmoCheckNonReloadable:
            RW00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"FireStart")
            RW00 A 0 A_JumpIfInventory("Clip",1,"FireStart")
            goto FireDry

        FireAmmoCheckReloadable:
            RW00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"FireStart")
            RW00 A 0 A_JumpIfInventory("RTCW_StG44Magazine",1,"FireStart")
        FireAmmoCheckReloadableDryCheck:
            RW00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"ReloadStart")
            RW00 A 0 A_JumpIfInventory("Clip",1,"ReloadStart")
            goto FireDry

        FireDry:
			RW00 A 0 A_PlaySound("RTCW/NoAmmo",CHAN_5)
            RW00 A 17 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			RW00 A 0 A_SelectWeapon("RTCW_Luger")
			goto Deselect

        FireUnderwater:
			RW00 A 0 A_PlaySound("RTCW/UnderwaterFire",CHAN_5)
            RW00 A 17 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
            goto ReadyActual
			
		FireStart:
            RW00 A 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"FireUnderwater")
            RW00 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			RW00 B 0 A_GiveInventory("RTCW_BlazkoWeaponAlert",1)
            RW00 B 0 A_JumpIfInventory("SamsaraReloadMode",1,"FireStartReloadable")
        FireStartNonReloadable:
            RW00 B 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"FireAttack")
            RW00 B 0 A_JumpIfInventory("Clip",1,"FireAttack")
            goto FireContinue

        FireStartReloadable:
            RW00 B 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"FireAttack")
            RW00 B 0 A_JumpIfInventory("RTCW_StG44Magazine",1,"FireAttack")
            goto FireContinue

        FireAttack:
			RW00 B 0 A_GiveInventory("RTCW_FiringToken",1)
			RW00 B 0 A_SpawnItemEx("RTCW_Casing",4,-10*cos(-pitch),43+(10*sin(-pitch)),1,0,2*cos(-pitch),-random(85,95),SXF_TRANSFERPITCH)
			RW00 B 0 A_GunFlash("FireFlash")
        FireContinue:
			RW00 B 0 A_GiveInventory("SamsaraRTCWStG44AttackHandler")
			RW00 B 0 A_JumpIfInventory("RTCW_StG44Alt",1,"AltFireContinue")
			RW00 B 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			RW00 C 0 A_Jump(32,2)
			RW00 C 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
            goto FireFinish
			RW00 C 2 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
            goto FireFinish

        FireFinish:
			RW00 D 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        FireFinishReFire:
			RW00 A 0 A_ReFire
			goto ReadyActual

		AltFire:
			RW00 A 0 A_GiveInventory("RTCW_StG44Alt")
            goto FireAmmoCheck

		AltFireContinue:
			RW00 B 3 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			RW00 C 2 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			RW00 D 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			goto FireFinishReFire

		FireFlash:
			TNT1 A 0 A_Jump(256,1,2)
			RW03 B 2 Bright
			stop
			RW04 B 2 Bright
			stop

        Reload:
        ReloadCheck:
            RW00 A 0 A_JumpIfInventory("RTCW_StG44Magazine",0,"ReadyActual")
            RW00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
            RW00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"ReloadStart")
            RW00 A 0 A_JumpIfInventory("Clip",1,"ReloadStart")
            goto ReadyActual

		ReloadStart:
			RW00 Q 0 A_PlaySound("RTCW/MP40/Reload",CHAN_6)
			//RW00 Q 0 A_JumpIfInventory("RTCW_StG44Magazine",1,1)
			goto ReloadStartAmmoless
			RW00 "QRSTUVWXYZ[\]" 2 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			RW01 ABCDEFGHIJKLMNOPQRSTU 2 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			RW02 EFG 2 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			RW00 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReloadAmmo")
            goto ReloadFinish

		ReloadStartAmmoless:
			RW00 "QRSTUVWXYZ[\]" 2 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			RW01 ABCDEFGHIJKLMNOPQR 2  A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			RW01 STU 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			RW01 V 0 A_PlaySound("RTCW/MP40/Reload2",CHAN_6)
			RW01 "VWXYZ[\]" 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			RW02 ABCDEFG 2 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			RW00 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReloadAmmo")
            goto ReloadFinish

        ReloadFinish:
            RW00 A 0
			goto ReadyActual

        ReloadAmmo:
            RW00 A 0 A_JumpIfInventory("RTCW_StG44Magazine",0,"ReloadFinish")
            RW00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
            RW00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
            RW00 A 0 A_JumpIfInventory("Clip",1,1)
            goto ReloadFinish
            RW00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
            RW00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
            RW00 A 0 A_TakeInventory("Clip",1)
            RW00 A 0 A_GiveInventory("RTCW_StG44Magazine")
            loop

		Kicking:
			RW00 A 0 A_GunFlash("KickingFoot")
		KickingDelay:
			RW00 A 18 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
			RW00 A 0 A_TakeInventory("RTCW_Kicking",1)
			goto ReadyActual
	}
}

actor SamsaraRTCWStG44AttackHandler : Trigger
{
    States
    {
      // Ammo checking/taking stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupReloadable")
      PickupNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("Clip",1,1)
        stop
        TNT1 A 0 A_TakeInventory("Clip",1)
        goto PickupAttack

      PickupReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("RTCW_StG44Magazine",1,1)
        stop
        TNT1 A 0 A_TakeInventory("RTCW_StG44Magazine",1)
        goto PickupAttack

      // Attack stuff
      PickupAttack:
        TNT1 A 0 A_PlaySound("RTCW/StG44/Fire",CHAN_WEAPON)
        TNT1 A 0 A_JumpIfInventory("RTCW_StG44Alt",1,"PickupAttackSecondary")
      // Primary
      PickupAttackPrimary:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackPrimaryCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackPrimaryCoop")
      PickupAttackPrimaryDM:
        TNT1 A 0 A_FireCustomMissile("RTCW_StG44Tracer",CallACS("RTCW_Decorate",1,1)*frandom(-1.0,1.0),false,4,9,0,CallACS("RTCW_Decorate",1,1)*frandom(-1.0,1.0))
        goto PickupFinish

      PickupAttackPrimaryCoop:
        TNT1 A 0 A_FireCustomMissile("RTCW_StG44TracerCoop",CallACS("RTCW_Decorate",1,1)*frandom(-1.0,1.0),false,4,9,0,CallACS("RTCW_Decorate",1,1)*frandom(-1.0,1.0))
        goto PickupFinish

      // Secondary
      PickupAttackSecondary:
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackSecondaryCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackSecondaryCoop")
      PickupAttackSecondaryDM:
        TNT1 A 0 A_FireCustomMissile("RTCW_StG44Tracer",CallACS("RTCW_Decorate",1,1)*frandom(-0.1,0.1),false,4,9,0,CallACS("RTCW_Decorate",1,1)*frandom(-0.1,0.1))
        goto PickupFinish

      PickupAttackSecondaryCoop:
        TNT1 A 0 A_FireCustomMissile("RTCW_StG44TracerCoop",CallACS("RTCW_Decorate",1,1)*frandom(-0.1,0.1),false,4,9,0,CallACS("RTCW_Decorate",1,1)*frandom(-0.1,0.1))
        goto PickupFinish

      // Finishing stuff
      PickupFinish:
        TNT1 A 0 A_GiveInventory("RTCW_FG42Spread")
        TNT1 A 0 ACS_NamedExecuteWithResult("RTCW_Recoil", 1)
        stop
    }
}

actor RTCW_StG44Magazine : Ammo
{
    Inventory.MaxAmount 30
    Tag "StG44 Magazine"
    +IGNORESKILL
}

//Was 19 damage
Actor RTCW_StG44Tracer : RTCW_Tracer
{ 
	States
	{
		Crash:
		Death:
			TNT1 A 0 A_Explode(CallACS("RTCW_BulletDamage",25),8,!XF_HURTSOURCE,0,8)
			Goto Super::Death
		XDeath:
			TNT1 A 0 A_Explode(CallACS("RTCW_BulletDamage",25),8,!XF_HURTSOURCE,0,8)
			Goto Super::XDeath
	}
}

Actor RTCW_StG44TracerCoop : RTCW_StG44Tracer { +THRUSPECIES Species "Player" }

actor RTCW_StenCoolLock : Boolean {}
actor RTCW_StenHeat : Counter { Inventory.MaxAmount 100 }
actor RTCW_StenSpread : Counter { Inventory.MaxAmount 2 }

Actor RTCW_Sten : RTCW_Weapon
{
	Weapon.SlotNumber 8
	Weapon.SelectionOrder 600
	Weapon.AmmoType1 "RTCW_StenMagazine"
	Weapon.AmmoUse1 1
	Weapon.AmmoType2 "Clip"
	Weapon.AmmoGive2 16
	Obituary "%o was killed (sten) by %k."
	Inventory.Pickupmessage "Sten"
	Inventory.PickupSound "RTCW/WeaponPickup"
	Tag "Silenced Sten"
	+WEAPON.NOALERT
	+WEAPON.AMMO_OPTIONAL
	States
	{
		Spawn:
			RW98 A -1
			Stop

        ReadyActual:
			RW00 A 0 A_TakeInventory("RTCW_StenSpread")
			RW00 A 0 A_TakeInventory("RTCW_StenCoolLock")
			RW00 A 0 A_JumpIfInventory("RTCW_Kicking",1,"Kicking")
            RW00 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReadyActualReloadable")
        ReadyActualNonReloadable:
			RW00 A 1 A_WeaponReady
			goto ReadyActualAmmoCheck

        ReadyActualReloadable:
			RW00 A 1 A_WeaponReady(WRF_ALLOWRELOAD)
			goto ReadyActualAmmoCheck

        ReadyActualAmmoCheck:
            RW00 A 0 A_JumpIfInventory("SamsaraReloadMode",1,1)
            goto ReadyActual
            RW00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"ReadyActual")
            RW00 A 0 A_JumpIfInventory("RTCW_StenMagazine",1,"ReadyActual")
            goto ReloadCheck

		Deselect:
			RW00 V 0 A_PlaySound("RTCW/Change",CHAN_7)
			RW00 V 0 A_TakeInventory("RTCW_StenSpread")
			RW00 H 2 A_TakeInventory("RTCW_StenCoolLock")
			RW00 IJKL 2
			Goto Super::Deselect

		Ready: // our "Select" state
			RW00 A 0 A_TakeInventory("RTCW_WeaponToken",256)
			RW00 A 0 A_GiveInventory("RTCW_WeaponToken",17)
			RW00 A 0 A_TakeInventory("RTCW_StenSpread")
			RW00 M 2 A_TakeInventory("RTCW_StenCoolLock")
			RW00 NOP 2
            goto ReadyActual

		Fire:
            RW00 B 0 A_JumpIfInventory("SamsaraReloadMode",1,"FireReloadable")
        FireNonReloadable:
            RW00 B 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"FireStart")
            RW00 B 0 A_JumpIfInventory("Clip",1,"FireStart")
            goto FireDry

        FireReloadable:
            RW00 B 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"FireStart")
            RW00 B 0 A_JumpIfInventory("RTCW_StenMagazine",1,"FireStart")
        FireReloadableDryCheck:
            RW00 B 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"ReloadStart")
            RW00 B 0 A_JumpIfInventory("Clip",1,"ReloadStart")
            goto FireDry

        FireDry:
			RW00 A 0 A_TakeInventory("RTCW_StenCoolLock")
            RW00 A 17 A_PlaySound("RTCW/NoAmmo",CHAN_5)
			TNT1 A 0 A_SelectWeapon("RTCW_Knife")
			Goto Deselect

        FireUnderwater:
			RW00 A 0 A_TakeInventory("RTCW_StenCoolLock")
            RW00 A 17 A_PlaySound("RTCW/UnderwaterFire",CHAN_5)
            goto ReadyActual

		FireStart:
            RW00 B 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"FireUnderwater")
            RW00 B 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
			RW00 B 0 A_JumpIfInventory("RTCW_StenHeat",0,"CoolDown")
            RW00 B 0 A_GiveInventory("RTCW_StenCoolLock")
			RW00 B 0 A_FireCustomMissile("RTCW_Casing",-random(85,105),0,8,4,0,-4)
			RW00 B 0 A_SpawnItemEx("RTCW_VenomSmoke",cos(pitch)*20,4,35-(sin(pitch)*20),(cos(pitch)*frandom(-0.125,0.125))+(sin(pitch)*0.33),frandom(-0.125,0.125),(cos(pitch)*0.33)-sin(pitch)*frandom(-0.125,0.125))
			RW00 B 1 A_GiveInventory("SamsaraRTCWStenAttackHandler")
			RW00 C 2
			RW00 D 1
            RW00 B 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
			RW00 B 0 A_JumpIfInventory("RTCW_StenHeat",0,"CoolDown")
			RW00 B 0 A_ReFire
			goto ReadyActual

		CoolDown:
			RW00 A 0 A_TakeInventory("RTCW_StenCoolLock")
			RW00 A 0 A_PlaySound("RTCW/Sten/Overheat",CHAN_5)
			RW00 AAAAAAAAAAAAAAA 4 A_SpawnItemEx("RTCW_VenomSmoke",cos(pitch)*20,4,35-(sin(pitch)*20),(cos(pitch)*frandom(-0.125,0.125))+(sin(pitch)*0.33),frandom(-0.125,0.125),(cos(pitch)*0.33)-sin(pitch)*frandom(-0.125,0.125))
			RW00 AAA 4
			goto ReadyActual

        Reload:
        ReloadCheck:
            RW00 A 0 A_JumpIfInventory("RTCW_StenMagazine",0,"ReadyActual")
            RW00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
            RW00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"ReloadStart")
            RW00 A 0 A_JumpIfInventory("Clip",1,"ReloadStart")
            goto ReadyActual

		ReloadStart:
            RW00 A 0 A_TakeInventory("RTCW_StenCoolLock")
			RW00 A 0 A_PlaySound("RTCW/Sten/Reload",CHAN_6)
			//TNT1 A 0 A_JumpIfInventory("RTCW_StenMagazine",1,1)
			goto ReloadStartNoAmmo
			RW00 "RSTUVWXYZ[\]" 2
			RW01 ABCDEFGHIJKLMNOPQRSTU 2
			RW02 MNOPQ 2
			RW00 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReloadAmmo")
            goto ReloadDone

		ReloadStartNoAmmo:
			RW00 "RSTUVWXYZ[\]" 2
			RW01 ABCDEFGHIJKLMNOPQ 2
			RW01 "RSTUVWXYZ[\]" 1
			RW02 A 2 A_PlaySound("RTCW/Sten/Reload2",CHAN_6)
			RW02 BCDEFGHIJLMNOPQ 2
			RW00 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReloadAmmo")
            goto ReloadDone

        ReloadDone:
            RW00 A 0
			goto ReadyActual

        ReloadAmmo:
            TNT1 A 0 A_JumpIfInventory("RTCW_StenMagazine",0,"ReloadDone")
            TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
            TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
            TNT1 A 0 A_JumpIfInventory("Clip",1,1)
            goto ReloadDone
            TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
            TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
            TNT1 A 0 A_TakeInventory("Clip",1)
            TNT1 A 0 A_GiveInventory("RTCW_StenMagazine")
            loop

		Kicking:
			TNT1 A 0 A_GunFlash("KickingFoot")
		KickingDelay:
			RW00 A 18
			RW00 A 0 A_TakeInventory("RTCW_Kicking",1)
			goto ReadyActual
	}
}

actor SamsaraRTCWStenAttackHandler : Trigger
{
    States
    {
      // Ammo check stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupCheckAmmoReloadable")
      PickupCheckAmmoNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupTakeAmmoNonReloadable")
        TNT1 A 0 A_JumpIfInventory("Clip",1,"PickupTakeAmmoNonReloadable")
        stop

      PickupCheckAmmoReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("RTCW_StenMagazine",1,"PickupTakeAmmoReloadable")
        stop

      // Ammo taking stuff
      PickupTakeAmmoNonReloadable:
        TNT1 A 0 A_TakeInventory("Clip",1,TIF_NOTAKEINFINITE)
        goto PickupAttack

      PickupTakeAmmoReloadable:
        TNT1 A 0 A_TakeInventory("RTCW_StenMagazine",1)
        goto PickupAttack

      // Attack stuff
      PickupAttack:
        TNT1 A 0 A_PlaySound("RTCW/Sten/Fire",CHAN_WEAPON)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackCoop")
      PickupAttackDM:
        TNT1 A 0 A_FireCustomMissile("RTCW_StenTracer",CallACS("RTCW_Decorate",1,3)*frandom(-1.0,1.0),false,0,4,0,CallACS("RTCW_Decorate",1,3)*frandom(-1.0,1.0))
        goto PickupFinish

      PickupAttackCoop:
        TNT1 A 0 A_FireCustomMissile("RTCW_StenTracerCoop",CallACS("RTCW_Decorate",1,3)*frandom(-1.0,1.0),false,0,4,0,CallACS("RTCW_Decorate",1,3)*frandom(-1.0,1.0))
        goto PickupFinish

      // Finishing stuff
      PickupFinish:
        TNT1 A 0 A_GiveInventory("RTCW_StenSpread")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupStop")
        TNT1 A 0 A_GiveInventory("RTCW_StenHeat",10)
        stop
    }
}

actor RTCW_StenMagazine : Ammo
{
    Inventory.MaxAmount 32
    +IGNORESKILL
}

//Was 10 damage, now 20
Actor RTCW_StenTracer : RTCW_Tracer
{ 
	States
	{
		Crash:
		Death:
			TNT1 A 0 A_Explode(CallACS("RTCW_BulletDamage",25),8,!XF_HURTSOURCE,0,8)
			Goto Super::Death
		XDeath:
			TNT1 A 0 A_Explode(CallACS("RTCW_BulletDamage",25),8,!XF_HURTSOURCE,0,8)
			Goto Super::XDeath
	}
}

Actor RTCW_StenTracerCoop : RTCW_StenTracer { +THRUSPECIES Species "Player" }
